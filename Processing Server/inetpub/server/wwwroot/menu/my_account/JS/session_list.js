

var myAccountSessionListLoadNumbers = new Array();

function myAccountSessionListLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let data = JSON.parse(contents.getElementsByClassName("data")[0].innerHTML);
    let info = data["info"];
    let numbers = data["numbers"].split(",");
    
    let title = contents.getElementsByClassName("menu_my_account_session_list_title")[0];
    title.innerHTML = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M20.293 1.293l-2 2c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0l2-2c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0zM12.092 10.898c-1.262-1.244-2.908-1.869-4.553-1.873-1.652-0.003-3.308 0.62-4.578 1.873-1.277 1.26-1.923 2.921-1.935 4.583s0.614 3.332 1.874 4.609c1.34 1.323 3.009 1.946 4.671 1.935s3.323-0.657 4.583-1.935 1.884-2.947 1.873-4.609-0.657-3.323-1.935-4.583zM10.688 12.322c0.885 0.873 1.332 2.020 1.339 3.173s-0.424 2.306-1.297 3.191-2.020 1.332-3.173 1.339-2.306-0.424-3.191-1.297c-0.916-0.927-1.347-2.080-1.339-3.233s0.455-2.3 1.339-3.173c0.879-0.867 2.023-1.299 3.169-1.296 1.141 0.002 2.279 0.435 3.152 1.296zM12.097 12.317l4.11-4.11c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-4.11 4.11c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0zM14.793 8.207l3 3c0.391 0.391 1.024 0.391 1.414 0l3.5-3.5c0.391-0.391 0.391-1.024 0-1.414l-3-3c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l2.293 2.293-2.086 2.086-2.293-2.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414zM16.207 8.207l3.5-3.5c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-3.5 3.5c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0z"></path></svg>' + getLanguage("menu_name:my_account_session_list");

    //번호들 변수에 등록
    myAccountSessionListLoadNumbers[menuNumber] = numbers;

    //목록
    if (info != null && info.length != 0) {
        for (let i = 0; i < info.length; i++) {
            addItemMyAccountSessionList(menuNumber, info[i]);
    
            let array = myAccountSessionListLoadNumbers[menuNumber];
            array = array.remove("" + info[i]["number"]);
            myAccountSessionListLoadNumbers[menuNumber] = array;
        }
        checkMyAccountSessionListMoreLoading(menuNumber);
    } else {
        noDataMyAccountSessionList(menuNumber);
    }

    //정렬
    let sortTitle = contents.getElementsByClassName("sort_box_title");
    sortTitle[0].innerHTML = getLanguage("menu_my_account_session_list_sort:0");
    sortTitle[1].innerHTML = getLanguage("menu_my_account_session_list_program:0");
    sortTitle[2].innerHTML = getLanguage("menu_my_account_session_list_operating_system:all");

    //데이터 없음
    let no_data = contents.getElementsByClassName("menu_my_account_session_list_no_data")[0];
    no_data.getElementsByClassName("menu_my_account_session_list_no_data_title")[0].innerHTML = getLanguage("menu_my_account_session_no_data");
    no_data.getElementsByClassName("menu_my_account_session_list_no_data_description")[0].innerHTML = getLanguage("no_data_description");
}
function noDataMyAccountSessionList(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let no_data = contents.getElementsByClassName("menu_my_account_session_list_no_data")[0];
    no_data.style.display = "flex";
}

function addItemMyAccountSessionList(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_my_account_session_list_items")[0];

    let no_data = contents.getElementsByClassName("menu_my_account_session_list_no_data")[0];
    no_data.style.display = "none";

    let location = "";
    location += getLanguage("location:" + info["country"]);
    location += (" " + info["region"]);
    location += (" " + info["city"]);

    let programIcon = null;
    if (info["program"] == "application") {
        programIcon = getSVGLouibooksLogo(0);
    } else {
        programIcon = `<img src="/IMG/program/` + info["program"] + `.png" onload="imageLoad(event);" alt = "">`;
    }

    let operatingSystemIcon = null;
    if (info["operatingSystem"] == "unknown") {
        operatingSystemIcon = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M14.090 2.233c-1.14-0.822-2.572-1.233-4.296-1.233-1.311 0-2.418 0.289-3.317 0.868-1.427 0.906-2.185 2.445-2.277 4.615h3.307c0-0.633 0.185-1.24 0.553-1.828 0.369-0.586 0.995-0.879 1.878-0.879 0.898 0 1.517 0.238 1.854 0.713 0.339 0.477 0.508 1.004 0.508 1.582 0 0.504-0.252 0.965-0.557 1.383-0.167 0.244-0.387 0.469-0.661 0.674 0 0-1.793 1.15-2.58 2.074-0.456 0.535-0.497 1.338-0.538 2.488-0.002 0.082 0.029 0.252 0.315 0.252s2.316 0 2.571 0c0.256 0 0.309-0.189 0.312-0.274 0.018-0.418 0.064-0.633 0.141-0.875 0.144-0.457 0.538-0.855 0.979-1.199l0.91-0.627c0.822-0.641 1.477-1.166 1.767-1.578 0.494-0.676 0.842-1.51 0.842-2.5-0.001-1.615-0.571-2.832-1.711-3.656zM9.741 14.924c-1.139-0.035-2.079 0.754-2.115 1.99-0.035 1.234 0.858 2.051 1.998 2.084 1.189 0.035 2.104-0.727 2.141-1.963 0.034-1.236-0.834-2.076-2.024-2.111z"></path></svg>';
    } else {
        operatingSystemIcon = `<img src="/IMG/operating_system/` + info["operatingSystem"] + `.png" onload="imageLoad(event);" alt = "">`;
    }

    let currentSession = "";
    if (info["isCurrentSession"] == true) {
        currentSession = `
            <div class = "menu_my_account_session_list_item_right_current_session">
                <div class = "menu_my_account_session_list_item_right_current_session_left">
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.293 5.293l-10.293 10.293-4.293-4.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5 5c0.391 0.391 1.024 0.391 1.414 0l11-11c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0z"></path></svg>
                </div>
                <div class = "menu_my_account_session_list_item_right_current_session_right">
                    ` + getLanguage("menu_my_account_session_list_item:current_session") + `
                </div>
            </div>
        `;
    }

    let securityIssue = "";
    let securityIssueButton = "";
    if (info["isSecurityIssue"] == true) {
        securityIssue = `
            <div class = "menu_my_account_session_list_item_right_security_issue">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M19.511 17.98l-8.907-16.632c-0.124-0.215-0.354-0.348-0.604-0.348s-0.481 0.133-0.604 0.348l-8.906 16.632c-0.121 0.211-0.119 0.471 0.005 0.68 0.125 0.211 0.352 0.34 0.598 0.34h17.814c0.245 0 0.474-0.129 0.598-0.34 0.124-0.209 0.126-0.469 0.006-0.68zM11 17h-2v-2h2v2zM11 13.5h-2v-6.5h2v6.5z"></path></svg>
                ` + getLanguage("menu_my_account_session_list_item:security_issue") + `
            </div>
        `;
        securityIssueButton = `
            <div class = "menu_my_account_session_list_item_right_button md-ripples" onclick = "submitMyAccountSessionListConfirmButton(` + menuNumber + `, ` + info["number"] + `);">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.293 5.293l-10.293 10.293-4.293-4.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5 5c0.391 0.391 1.024 0.391 1.414 0l11-11c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0z"></path></svg>
                ` + getLanguage("menu_my_account_session_list_item:confirm") + `
            </div>
        `;
    }

    let line = "";
    if (currentSession != "" || securityIssue != "") {
        line = '<div class = "menu_my_account_session_list_item_right_line"></div>';
    }

    let newEl = document.createElement("div");
    newEl.classList.add("visible_element");
    newEl.classList.add("variable_element");
    newEl.classList.add("menu_my_account_session_list_item");
    newEl.setAttribute("number", info["number"]);
    newEl.innerHTML = `
        <div class = "menu_my_account_session_list_item_left">
            ` + operatingSystemIcon + `
        </div>
        <div class = "menu_my_account_session_list_item_right">
            <div class = "menu_my_account_session_list_item_right_operating_system">
                ` + getLanguage("operating_system:" + info["operatingSystem"]) + `
            </div>
            <div class = "menu_my_account_session_list_item_right_recent_activity">
                ` + getLanguage("device_type:" + info["deviceType"]) + `
            </div>
            <div class = "menu_my_account_session_list_item_right_box">
                <div class = "menu_my_account_session_list_item_right_top">
                    ` + currentSession + `
                    ` + securityIssue + `
                </div>
                ` + line + `
                <div class = "menu_my_account_session_list_item_right_box_title">
                    ` + getLanguage("menu_my_account_session_list_item:first_activity") + `
                </div>
                <div class = "menu_my_account_session_list_item_right_box_value">
                    <!-- Generated by IcoMoon.io -->
                    <svg style = "animation: myAccountSessionListItemDotIcon 3s infinite; transform: scale(2);" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M7.8 10c0 1.215 0.986 2.2 2.201 2.2s2.199-0.986 2.199-2.2c0-1.215-0.984-2.199-2.199-2.199s-2.201 0.984-2.201 2.199z"></path></svg>
                    UTC ` + info["firstRequestDate"] + ` (` + getTimePast(new Date(info["firstRequestDate"])) + `)
                </div>
                <div class = "menu_my_account_session_list_item_right_box_title" style = "margin-top: 20px;">
                    ` + getLanguage("menu_my_account_session_list_item:recent_activity") + `
                </div>
                <div class = "menu_my_account_session_list_item_right_box_value">
                    <!-- Generated by IcoMoon.io -->
                    <svg style = "animation: myAccountSessionListItemDotIcon 3s infinite; transform: scale(2);" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M7.8 10c0 1.215 0.986 2.2 2.201 2.2s2.199-0.986 2.199-2.2c0-1.215-0.984-2.199-2.199-2.199s-2.201 0.984-2.201 2.199z"></path></svg>
                    UTC ` + info["lastRequestDate"] + ` (` + getTimePast(new Date(info["lastRequestDate"])) + `)
                </div>
                <div class = "menu_my_account_session_list_item_right_box_title" style = "margin-top: 20px;">
                    ` + getLanguage("menu_my_account_session_list_item:location") + `
                </div>
                <div class = "menu_my_account_session_list_item_right_box_value">
                    <img src="/SVG/country/` + info["country"] + `.svg" onload="imageLoad(event);" alt = "">
                    ` + location + `
                </div>
                <div class = "menu_my_account_session_list_item_right_box_title" style = "margin-top: 20px;">
                    ` + getLanguage("menu_my_account_session_list_item:ip") + `
                </div>
                <div class = "menu_my_account_session_list_item_right_box_value">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M25,50A25.007,25.007,0,0,1,15.269,1.965,25.007,25.007,0,0,1,34.731,48.036,24.843,24.843,0,0,1,25,50ZM25,3A22,22,0,1,0,47,25,22.025,22.025,0,0,0,25,3Z"></path><rect width="48" height="2" transform="translate(26 1) rotate(90)"></rect><path d="M0,0S11.775-11.288,23.775-11.288,48,0,48,0V2S35.775-9.288,23.775-9.288,0,2,0,2Z" transform="translate(26 1) rotate(90)"></path><path d="M0,0S11.775-11.288,23.775-11.288,48,0,48,0V2S35.775-9.288,23.775-9.288,0,2,0,2Z" transform="translate(24 49) rotate(-90)"></path><path d="M0,0S11.923-4.994,23.923-4.994,48,0,48,0V2S35.923-2.994,23.923-2.994,0,2,0,2Z" transform="translate(49 31.856) rotate(-180)"></path><path d="M0,0S11.923-4.994,23.923-4.994,48,0,48,0V2S35.923-2.994,23.923-2.994,0,2,0,2Z" transform="translate(1 17.85)"></path></g></svg>
                    ` + info["ip"] + `
                </div>
                <div class = "menu_my_account_session_list_item_right_box_title" style = "margin-top: 20px;">
                    ` + getLanguage("menu_my_account_session_list_item:program") + `
                </div>
                <div class = "menu_my_account_session_list_item_right_box_value">
                    ` + programIcon + `
                    ` + getLanguage("program:" + info["program"]) + `
                </div>
            </div>
            <div class = "menu_my_account_session_list_item_right_button_items">
                ` + securityIssueButton + `
                <div class = "menu_my_account_session_list_item_right_button md-ripples" onclick = "submitMyAccountSessionListDeleteButton(` + menuNumber + `, ` + info["number"] + `);">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><rect width="50" height="3" rx="1.5" transform="translate(0 11)"></rect><path d="M31,39H5a5.006,5.006,0,0,1-5-5V0H4.932A2,2,0,0,0,3,2V34a2,2,0,0,0,2,2H31a2,2,0,0,0,2-2V2a2,2,0,0,0-1.914-2L36,0V34A5.006,5.006,0,0,1,31,39Z" transform="translate(7 11)"></path><path d="M5,14,0,14V5A5.006,5.006,0,0,1,5,0H21a5.006,5.006,0,0,1,5,5v9H21.007A2,2,0,0,0,23,12V5a2,2,0,0,0-2-2H5A2,2,0,0,0,3,5v7a2,2,0,0,0,2,2H5Z" transform="translate(12)"></path><rect width="3" height="15" rx="1.5" transform="translate(24 22)"></rect><rect width="3" height="15" rx="1.5" transform="translate(33 22)"></rect><rect width="3" height="15" rx="1.5" transform="translate(15 22)"></rect></g></svg>
                    ` + getLanguage("menu_my_account_session_list_item:delete_session") + `
                </div>
            </div>
        </div>
    `;

    items.appendChild(newEl);
}




































function showMyAccountSessionListMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("my_account_session_list_contents_loading")[0];
    loading.style.display = "block";
}
function hideMyAccountSessionListMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("my_account_session_list_contents_loading")[0];
    loading.style.display = "none";
}
function checkMyAccountSessionListMoreLoading(menuNumber) {
    if (myAccountSessionListLoadNumbers[menuNumber].length == 0) {
        hideMyAccountSessionListMoreLoading(menuNumber);
        myAccountSessionListLoadNumbers[menuNumber] = null;
    } else {
        showMyAccountSessionListMoreLoading(menuNumber);
    }
}

let isMyAccountSessionListMoreLoad = new Array();

function checkMyAccountSessionListLoad() {
    if (getCurrentMenuName() == "my_account_session_list") {
        let boxSize = 75;

        let scrollPercent = ((document.documentElement.scrollTop + window.innerHeight) / (document.documentElement.scrollHeight - boxSize)) * 100;
        if (scrollPercent >= 100) {
            let number = getCurrentMenuNumber();
            if (isMyAccountSessionListMoreLoad[number] == null && myAccountSessionListLoadNumbers[number] != null && myAccountSessionListLoadNumbers[number][0] != "") {
                isMyAccountSessionListMoreLoad[number] = true;
                moreLoadMyAccountSessionList(number);
            }
        }
    }
}
addEventListener("scroll", checkMyAccountSessionListLoad);
addEventListener("resize", checkMyAccountSessionListLoad);
addEventListener("focus", checkMyAccountSessionListLoad);

function moreLoadMyAccountSessionList(menuNumber) {
    if (myAccountSessionListLoadNumbers[menuNumber] == null || myAccountSessionListLoadNumbers[menuNumber].length == 0) {
        myAccountSessionListLoadNumbers[menuNumber] = null;
        isMyAccountSessionListMoreLoad[menuNumber] = null;
        return;
    }

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/menu/my_account/php/session_list/getInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                for (let i = 0; i < info.length; i++) {
                    addItemMyAccountSessionList(menuNumber, info[i]);
            
                    let array = myAccountSessionListLoadNumbers[menuNumber];
                    array = array.remove("" + info[i]["number"]);
                    myAccountSessionListLoadNumbers[menuNumber] = array;
                }

                isMyAccountSessionListMoreLoad[menuNumber] = null;
                checkMyAccountSessionListMoreLoading(menuNumber);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
        }
    });

    let numbers = myAccountSessionListLoadNumbers[menuNumber];
    let numbersMaxCount = (numbers.length >= 15) ? 15 : numbers.length;
    numbers = numbers.splice(0, numbersMaxCount);
    
    var formData = new FormData();
    formData.append("numbers", numbers.join(","));
    formData.append("lang", userLanguage);

    xhr.send(formData);
}






































function menuMyAccountSessionListOptionLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_my_account_session_list_items")[0];
    let sort_box = contents.getElementsByClassName("sort_box");

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/menu/my_account/php/session_list/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                items.textContent = "";
                let numbers = info["numbers"].split(",");
                myAccountSessionListLoadNumbers[menuNumber] = numbers;

                //
                if (numbers.length != 0 && numbers[0] != "") {
                    let worksInfo = info["info"];
                    for (let i = 0; i < worksInfo.length; i++) {
                        addItemMyAccountSessionList(menuNumber, worksInfo[i]);
                
                        let array = myAccountSessionListLoadNumbers[menuNumber];
                        array = array.remove("" + worksInfo[i]["number"]);
                        myAccountSessionListLoadNumbers[menuNumber] = array;
                    }
                    checkMyAccountSessionListMoreLoading(menuNumber);
                } else {
                    noDataMyAccountSessionList(menuNumber);
                    hideMyAccountSessionListMoreLoading(menuNumber);
                }

                isMyAccountSessionListMoreLoad[menuNumber] = null;
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("sort", sort_box[0].getAttribute("value"));
    formData.append("program", sort_box[1].getAttribute("value"));
    formData.append("operatingSystem", sort_box[2].getAttribute("value"));
    formData.append("lang", userLanguage);

    xhr.send(formData);
}









































function submitMyAccountSessionListDeleteButton(menuNumber, uniqueNumber) {
    confirmPopup(getLanguage("menu_my_account_session_list_confirm_popup:delete:title"), getLanguage("menu_my_account_session_list_confirm_popup:delete:description"), 'requestSubmitMyAccountSessionListDelete(' + menuNumber + ', ' + uniqueNumber + ');');
}

function requestSubmitMyAccountSessionListDelete(menuNumber, uniqueNumber) { 
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_my_account_session_list_items")[0];
    let child = items.children;
    let item = null;
    for (let i = 0; i < child.length; i++) {
        if (child[i].getAttribute("number") == uniqueNumber) {
            item = child[i];
            break;
        }
    }

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/menu/my_account/php/session_list/delete.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                let height = item.clientHeight;
                item.style.maxHeight = height + "px";
                function callback() {
                    item.style.animation = "deleteMyAccountSessionListItem 0.2s forwards";
                    item.style.maxHeight = "0px";
                    item.style.marginBottom = "0px";
                    setTimeout(() => {
                        item.remove();
    
                        //데이터 없음
                        if (child.length == 0 && (myAccountSessionListLoadNumbers[menuNumber] == null || myAccountSessionListLoadNumbers[menuNumber][0] == "")) {
                            noDataMyAccountSessionList(menuNumber);
                        }
                    }, 200);
                }
                window.requestAnimationFrame(callback);

                actionMessage(getLanguage("menu_my_account_session_list_confirm_popup:delete:message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("number", uniqueNumber);

    xhr.send(formData);
}

















function submitMyAccountSessionListConfirmButton(menuNumber, uniqueNumber) {
    confirmPopup(getLanguage("menu_my_account_session_list_confirm_popup:confirm:title"), getLanguage("menu_my_account_session_list_confirm_popup:confirm:description"), 'requestSubmitMyAccountSessionListConfirm(' + menuNumber + ', ' + uniqueNumber + ');');
}

function requestSubmitMyAccountSessionListConfirm(menuNumber, uniqueNumber) { 
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_my_account_session_list_items")[0];
    let child = items.children;
    let item = null;
    for (let i = 0; i < child.length; i++) {
        if (child[i].getAttribute("number") == uniqueNumber) {
            item = child[i];
            break;
        }
    }

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/menu/my_account/php/session_list/confirm.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                let button = item.getElementsByClassName("menu_my_account_session_list_item_right_button")[0];
                button.remove();

                let securityIssue = item.getElementsByClassName("menu_my_account_session_list_item_right_security_issue")[0];
                securityIssue.remove();

                //라인 제거 여부
                let top = item.getElementsByClassName("menu_my_account_session_list_item_right_top")[0];
                if (top.innerHTML.trim() == "") {
                    let line = item.getElementsByClassName("menu_my_account_session_list_item_right_line")[0];
                    line.remove();
                }

                actionMessage(getLanguage("menu_my_account_session_list_confirm_popup:confirm:message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("number", uniqueNumber);

    xhr.send(formData);
}









































function getMyAccountSessionListSortItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("menu_my_account_session_list_sort:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("menu_my_account_session_list_sort:1"),
        "value": 1
    }
    items[2] = {
        "title": getLanguage("menu_my_account_session_list_sort:2"),
        "value": 2
    }
    items[3] = {
        "title": getLanguage("menu_my_account_session_list_sort:3"),
        "value": 3
    }
    return items;
}
function getMyAccountSessionListProgramItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("menu_my_account_session_list_program:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("menu_my_account_session_list_program:1"),
        "value": 1
    }
    items[2] = {
        "title": getLanguage("menu_my_account_session_list_program:2"),
        "value": 2
    }
    return items;
}
function getMyAccountSessionListOperatingSystemItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("menu_my_account_session_list_operating_system:all"),
        "value": "all"
    }
    items[1] = {
        "title": getLanguage("operating_system:windows"),
        "value": "windows"
    }
    items[2] = {
        "title": getLanguage("operating_system:android"),
        "value": "android"
    }
    items[3] = {
        "title": getLanguage("operating_system:ios"),
        "value": "ios"
    }
    items[4] = {
        "title": getLanguage("operating_system:macos"),
        "value": "macos"
    }
    items[5] = {
        "title": getLanguage("operating_system:linux"),
        "value": "linux"
    }
    items[6] = {
        "title": getLanguage("operating_system:unix"),
        "value": "unix"
    }
    return items;
}