

var workspaceWorkPartListLoadNumbers = new Array();

function workspaceWorkPartListLoad(menuNumber, first) {
    (first == null) ? first = true : null;

    let contents = document.getElementById("contents_" + menuNumber);
    let workInfo = JSON.parse(contents.getElementsByClassName("workspace_work_info_json")[0].innerHTML);
    if (first == true) {
        //로드
        loadWorkspaceWorkPartList(menuNumber, workInfo);
    } else {
        //아이템 초기화
        let items = contents.getElementsByClassName("workspace_work_part_list_chapter_contents")[0];
        items.innerHTML = '';
    }

    //
    let numbers = contents.getElementsByClassName("workspace_work_part_list_numbers")[0].innerHTML.trim();
    let info_json = JSON.parse(contents.getElementsByClassName("workspace_work_part_list_info_json")[0].innerHTML);

    workspaceWorkPartListLoadNumbers[menuNumber] = numbers.split(",");

    if (info_json != null) {
        for (let i = 0; i < info_json.length; i++) {
            let html = getHtmlWorkspaceWorkPartList(menuNumber, info_json[i]);
            addContentWorkspaceWorkPartList(menuNumber, info_json[i]["chapter"], html);
    
            let array = workspaceWorkPartListLoadNumbers[menuNumber];
            array = array.remove("" + info_json[i]["number"]);
            workspaceWorkPartListLoadNumbers[menuNumber] = array;
        }
        checkWorkspaceWorkPartListMoreLoading(menuNumber);
    } else {
        noDataWorkspaceWorkPartList(menuNumber);
        hideWorkspaceWorkPartListMoreLoading(menuNumber);
    }

    checkChapterUploadButtonWorkspaceWorkPartList(menuNumber);
}

function noDataWorkspaceWorkPartList(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("workspace_work_part_list_chapter_contents")[0];
    items.innerHTML = `
        <div class = "workspace_work_part_list_no_data">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-3094.635,49.5H-3116.5a3,3,0,0,1-3-3V3.5a3,3,0,0,1,3-3h31a3,3,0,0,1,3,3V37.365L-3094.635,49.5Z" transform="translate(3126)" opacity="0.7"/><path d="M3151.333,49.5l12.293-12.293h-9.846a2.517,2.517,0,0,0-1.983.575,2.884,2.884,0,0,0-.464,2.039Z" transform="translate(-3120)" opacity="0.6"/></g></svg>
            <div class = "workspace_work_part_list_no_data_title">
                ` + getLanguage("work_part_list_no_data") + `
            </div>
            <div class = "workspace_work_part_list_no_data_description">
                ` + getLanguage("no_data_description"); + `
            </div>
        </div>
    `;
}


function loadWorkspaceWorkPartList(menuNumber, workInfo) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_part_list_wrap = contents.getElementsByClassName("workspace_work_contents_left_work_part_list_wrap")[0];

    let html = `
        <div class = "workspace_work_contents_left_work_part_list_top">
            <div class = "workspace_work_contents_left_work_part_list_top_left">
                <div class = "sort_box md-ripples" onchange = "workspaceWorkPartListOptionLoad(` + menuNumber + `);" popupwidth = "max-content" value = "0" onclick = "selectList(this, getWorkspaceWorkPartListSortItems());">
                    <div class = "sort_box_title value_title">
                        ` + getLanguage("workspace_work_part_list_select_sort:0") + `
                    </div>
                    <div class = "sort_box_icon">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.418 6.109c0.272-0.268 0.709-0.268 0.979 0s0.271 0.701 0 0.969l-7.908 7.83c-0.27 0.268-0.707 0.268-0.979 0l-7.908-7.83c-0.27-0.268-0.27-0.701 0-0.969s0.709-0.268 0.979 0l7.419 7.141 7.418-7.141z"></path></svg>
                    </div>
                </div>
                <div class = "sort_box md-ripples" onchange = "workspaceWorkPartListOptionLoad(` + menuNumber + `);" popupwidth = "max-content" value = "0" onclick = "selectList(this, getSelectItemsWorkspaceWorkPartListChapter(` + menuNumber + `));">
                    <div class = "sort_box_title value_title">
                        ` + getLanguage("work_part_list_all_chapters") + `
                    </div>
                    <div class = "sort_box_icon">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.418 6.109c0.272-0.268 0.709-0.268 0.979 0s0.271 0.701 0 0.969l-7.908 7.83c-0.27 0.268-0.707 0.268-0.979 0l-7.908-7.83c-0.27-0.268-0.27-0.701 0-0.969s0.709-0.268 0.979 0l7.419 7.141 7.418-7.141z"></path></svg>
                    </div>
                </div>
            </div>
            <div class = "workspace_work_contents_left_work_part_list_top_right">
                <div class = "workspace_work_contents_left_work_part_list_top_upload md-ripples" onclick = "openUploadWorkPartList(` + workInfo["number"] + `, '` + workInfo["type"] + `');">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 13h6v6c0 0.552 0.448 1 1 1s1-0.448 1-1v-6h6c0.552 0 1-0.448 1-1s-0.448-1-1-1h-6v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1v6h-6c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path></svg>
                    ` + getLanguage("new_chapter") + `
                </div>
            </div>
        </div>
        <div class = "workspace_work_contents_left_work_part_list">
            <div class = "workspace_work_part_list_chapter_contents">
                <!-- 회차 콘텐츠 -->
            </div>
            <div class = "workspace_work_part_list_contents_loading" style = "padding: 20px; display: none;">
                <div class="showbox"><div class="loader" style="width: 35px;"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="5" stroke-miterlimit="10"></circle></svg></div></div>
            </div>
        </div>
    `;
    work_part_list_wrap.innerHTML = html;

    //
    let top_left = contents.getElementsByClassName("workspace_work_contents_left_work_part_list_top_left")[0];
    let top_right = contents.getElementsByClassName("workspace_work_contents_left_work_part_list_top_right")[0];
    top_left.style.width = "calc(100% + " + (top_right.clientWidth * -1) + "px)";
}


function addContentWorkspaceWorkPartList(menuNumber, chapter, html) {
    let contents = document.getElementById("contents_" + menuNumber);

    workspaceWorkPartListAddChapter(menuNumber, chapter);

    let chapter_contents = contents.getElementsByClassName("workspace_work_part_list_chapter_contents")[0];
    let chapter_el = chapter_contents.getElementsByClassName("workspace_work_part_list_chapter_contents_" + chapter)[0];
    let items = chapter_el.getElementsByClassName("workspace_work_part_list_chapter_contents_items")[0];

    let newEl = document.createElement("div");
    newEl.innerHTML = html;

    items.appendChild(newEl);
}
function workspaceWorkPartListAddChapter(menuNumber, chapter, createInFront) {
    (createInFront == null) ? createInFront = false : null;
    
    let contents = document.getElementById("contents_" + menuNumber);
    let workInfo = JSON.parse(contents.getElementsByClassName("workspace_work_info_json")[0].innerHTML);
    let chapterInfo = JSON.parse(contents.getElementsByClassName("workspace_work_part_list_chapter_info")[0].innerHTML);
    let originalChapterInfo = JSON.parse(contents.getElementsByClassName("workspace_work_part_list_original_chapter_info")[0].innerHTML);

    let chapter_contents = contents.getElementsByClassName("workspace_work_part_list_chapter_contents")[0];
    let chapter_el = chapter_contents.getElementsByClassName("workspace_work_part_list_chapter_contents_" + chapter);
    if (chapter_el.length == 0) {
        let newEl = document.createElement("div");
        newEl.classList.add("workspace_work_part_list_chapter_contents_" + chapter);
        newEl.setAttribute("chapter", chapter);
        newEl.innerHTML = `
            <div class = "workspace_work_part_list_chapter">
                <div class = "workspace_work_part_list_chapter_left">
                    <div class = "workspace_work_part_list_chapter_left_line"></div>
                    <div class = "workspace_work_part_list_chapter_left_text">
                        ` + getLanguage("work_part_list_chapter").replaceAll("{R:0}", chapter) + `: <b>` + chapterInfo[chapter - 1] + `</b>
                    </div>
                </div>
                <div class = "workspace_work_part_list_chapter_right">
                    <div class = "workspace_work_contents_left_work_part_list_top_chapter_upload md-ripples" onclick = "openChangeChapterTitle(` + workInfo["number"] + `, ` + chapter + `, '` + originalChapterInfo[chapter - 1].replaceAll('"', '&quot;') + `');">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>
                        <div class = "workspace_work_contents_left_work_part_list_top_chapter_upload_text">
                            ` + getLanguage('work_part_change_chapter_title_button') + `
                        </div>
                    </div>
                    <div class = "workspace_work_contents_left_work_part_list_top_chapter_upload md-ripples" onclick = "openUploadWorkPartList(` + workInfo["number"] + `, '` + workInfo["type"] + `', ` + chapter + `);">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="a"><rect width="50" height="50"></rect></clipPath></defs><g id="b" clip-path="url(#a)"><g clip-path="url(#a)"><rect width="3" height="25" rx="1.5" transform="translate(0 25)"></rect><rect width="3" height="25" rx="1.5" transform="translate(47 25)"></rect><rect width="50" height="3" rx="1.5" transform="translate(0 47)"></rect><rect width="3" height="34" rx="1.5" transform="translate(27 35.5) rotate(180)"></rect><rect width="3" height="17.526" rx="1.5" transform="translate(37.928 12.393) rotate(135)"></rect><rect width="3" height="17" rx="1.5" transform="translate(15.193 14.142) rotate(-135)"></rect></g></g></svg>
                        <div class = "workspace_work_contents_left_work_part_list_top_chapter_upload_text">
                            ` + getLanguage('work_part_upload_button') + `
                        </div>
                    </div>
                </div>
            </div>
            <div class = "workspace_work_part_list_chapter_contents_items">
                <!-- 아이템 -->
            </div>
        `;
        if (createInFront == false) {
            chapter_contents.appendChild(newEl);
        } else {
            chapter_contents.prepend(newEl);
        }
    }
}
function uploadContentWorkspaceWorkPartList(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);

    let latest_number = contents.getElementsByClassName("workspace_work_part_list_latest_number")[0];
    let latest_chapter = contents.getElementsByClassName("workspace_work_part_list_latest_chapter")[0];
    latest_number.innerHTML = info["number"];
    latest_chapter.innerHTML = info["chapter"];

    let no_data = contents.getElementsByClassName("workspace_work_part_list_no_data")[0];
    if (no_data != null) {
        no_data.remove();
    }

    //
    let chapterInfoEl = contents.getElementsByClassName("workspace_work_part_list_chapter_info")[0];
    let originalChapterInfoEl = contents.getElementsByClassName("workspace_work_part_list_original_chapter_info")[0];
    let chapterInfo = new Array();
    if (chapterInfoEl.innerHTML.trim() != '') {
        chapterInfo = JSON.parse(chapterInfoEl.innerHTML);
    }
    if (info["chapter_title"] != null) {
        chapterInfo[info["chapter"] - 1] = info["chapter_title"];
        chapterInfoEl.innerHTML = JSON.stringify(chapterInfo);
        originalChapterInfoEl.innerHTML = JSON.stringify(chapterInfo);
    }

    workspaceWorkPartListAddChapter(menuNumber, info["chapter"], true);

    let items = contents.getElementsByClassName("workspace_work_part_list_chapter_contents_" + info["chapter"])[0];
    items = items.getElementsByClassName("workspace_work_part_list_chapter_contents_items")[0]

    let newEl = document.createElement("div");
    newEl.style.transition = "all 0.2s";
    newEl.style.transform = "scale(0.95)";
    newEl.style.opacity = "0";
    newEl.innerHTML = getHtmlWorkspaceWorkPartList(menuNumber, info);

    let el = items.insertBefore(newEl, items.firstChild);
    let height = el.clientHeight;
    el.style.height = "0px";
    setTimeout(() => {
        el.style.height = height + "px";
        el.style.opacity = "1";
        el.style.transform = "scale(1)";
    }, 10);
    setTimeout(() => {
        el.style.height = "max-content";
    }, 210);

    checkChapterUploadButtonWorkspaceWorkPartList(menuNumber);
}


function getHtmlWorkspaceWorkPartList(menuNumber, info) {
    let html = '';

    let category = '...';
    if (info["category"] == "episode") {
        let episode = info["episode"];
        category = getLanguage("work_part_category:episode_count").replaceAll("{R:0}", episode);
    } else {
        category = getLanguage("work_part_category:" + info["category"]);
    }

    let onclick = `loadWorkspace_part_details(` + info["number"] + `)`;

    let addClass = '';
    if (info["isViewed"] == true) {
        addClass += " menu_work_part_list_item_viewed";
    }

    let percentViewed = 0;
    let percentViewedAddClass = "";
    if (info["percent_viewed"] != null) {
        percentViewed = info["percent_viewed"] * 100;
        percentViewedAddClass = " show_part_list_item_left_viewed_percent";
    }

    let localizationCount = 0;
    if (info["localization_language"] != null) {
        let localizationLanguage = info["localization_language"].split(",");
        for (let i = 0; i < localizationLanguage.length; i++) {
            if (localizationLanguage[i] != "") {
                localizationCount ++;
            }
        }
    }

    let videoInfo = "";
    if (info["video"] != null) {
        let status = '';
        if (info["video"]["status"] == 2) {
            status = `
                <div class = "menu_work_part_list_item_left_video_info_item">
                    <div class = "menu_work_part_list_item_left_video_info_item_left">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>
                    </div>
                    <div class = "menu_work_part_list_item_left_video_info_item_right">
                        ` + getLanguage("popup_upload_work_part_video_step_right_item_status:0") + `
                    </div>
                </div>
            `;
        }
        if (info["video"]["status"] == 1) {
            let resolution = (info["video"]["processingResolution"] + "p");
            let progress = info["video"]["processingProgress"];

            status = `
                <div class = "menu_work_part_list_item_left_video_info_item">
                    <div class = "menu_work_part_list_item_left_video_info_item_left">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>
                    </div>
                    <div class = "menu_work_part_list_item_left_video_info_item_right">
                        ` + getLanguage("popup_upload_work_part_video_step_right_item_status:1").replaceAll("{R:0}", resolution) + (" (" + progress + "%)") + `
                    </div>
                </div>
            `;
        }

        let duration = "";
        if (info["video"]["duration"] != null && status.trim() == "") {
            duration = `
                <div class = "menu_work_part_list_item_left_video_info_item">
                    <div class = "menu_work_part_list_item_left_video_info_item_left">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M2,0A1.828,1.828,0,0,1,4,1.583V11.87c0,.874-4,0-4,0V1.583A1.828,1.828,0,0,1,2,0Z" transform="translate(34.785 31.957) rotate(135)"/><path d="M-3095,50a24.844,24.844,0,0,1-9.731-1.965,24.917,24.917,0,0,1-7.947-5.358,24.922,24.922,0,0,1-5.358-7.947A24.845,24.845,0,0,1-3120,25a24.845,24.845,0,0,1,1.965-9.731,24.922,24.922,0,0,1,5.358-7.947,24.917,24.917,0,0,1,7.947-5.358A24.844,24.844,0,0,1-3095,0a24.844,24.844,0,0,1,9.731,1.965,24.917,24.917,0,0,1,7.947,5.358,24.922,24.922,0,0,1,5.358,7.947A24.84,24.84,0,0,1-3070,25a24.84,24.84,0,0,1-1.965,9.731,24.922,24.922,0,0,1-5.358,7.947,24.917,24.917,0,0,1-7.947,5.358A24.844,24.844,0,0,1-3095,50Zm0-46a21.024,21.024,0,0,0-21,21,21.023,21.023,0,0,0,21,21,21.024,21.024,0,0,0,21-21A21.024,21.024,0,0,0-3095,4Z" transform="translate(3120)"/><rect width="4" height="16" rx="2" transform="translate(23 11)"/></g></svg>
                    </div>
                    <div class = "menu_work_part_list_item_left_video_info_item_right">
                        ` + secondsToTime(Math.round(info["video"]["duration"])) + `
                    </div>
                </div>
            `;
        }

        videoInfo = `
            <div class = "menu_work_part_list_item_left_video_info">
                <div class = "menu_work_part_list_item_left_video_info_box">
                    ` + status + `
                    ` + duration + `
                </div>
            </div>
        `;
    }

    let publicStatusSvg = "...";
    if (info["public_status"] == 0) {
        publicStatusSvg = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h14c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v7c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-14c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-7c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293zM8 10v-3c-0.001-1.106 0.445-2.105 1.169-2.831 0.723-0.724 1.719-1.172 2.821-1.174 1.030 0.003 1.948 0.378 2.652 1 0.638 0.565 1.097 1.332 1.28 2.209 0.113 0.541 0.642 0.888 1.183 0.775s0.888-0.642 0.775-1.183c-0.272-1.307-0.958-2.454-1.912-3.299-1.060-0.938-2.452-1.504-3.973-1.502-1.657 0.002-3.157 0.676-4.241 1.762s-1.756 2.587-1.754 4.243v3h-1c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v7c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h14c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-7c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879z"></path></svg>';
    } else if (info["public_status"] == 1) {
        publicStatusSvg = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15 8h3c1.105 0 2.103 0.447 2.828 1.172s1.172 1.723 1.172 2.828-0.447 2.103-1.172 2.828-1.723 1.172-2.828 1.172h-3c-0.552 0-1 0.448-1 1s0.448 1 1 1h3c1.657 0 3.158-0.673 4.243-1.757s1.757-2.586 1.757-4.243-0.673-3.158-1.757-4.243-2.586-1.757-4.243-1.757h-3c-0.552 0-1 0.448-1 1s0.448 1 1 1zM9 16h-3c-1.105 0-2.103-0.447-2.828-1.172s-1.172-1.723-1.172-2.828 0.447-2.103 1.172-2.828 1.723-1.172 2.828-1.172h3c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3c-1.657 0-3.158 0.673-4.243 1.757s-1.757 2.586-1.757 4.243 0.673 3.158 1.757 4.243 2.586 1.757 4.243 1.757h3c0.552 0 1-0.448 1-1s-0.448-1-1-1zM8 13h8c0.552 0 1-0.448 1-1s-0.448-1-1-1h-8c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path></svg>';
    } else if (info["public_status"] == 2) {
        publicStatusSvg = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h14c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v7c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-14c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-7c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293zM18 10v-3c0-1.657-0.673-3.158-1.757-4.243s-2.586-1.757-4.243-1.757-3.158 0.673-4.243 1.757-1.757 2.586-1.757 4.243v3h-1c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v7c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h14c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-7c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879zM8 10v-3c0-1.105 0.447-2.103 1.172-2.828s1.723-1.172 2.828-1.172 2.103 0.447 2.828 1.172 1.172 1.723 1.172 2.828v3z"></path></svg>';
    }

    let size = "";
    if (info["type"] == "novel") {
        size = `
            <div class = "menu_work_part_list_item_right_info_item">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M17-1536h0v-41.182l-7-11.9-7,11.9V-1536H17m0,3H3a3,3,0,0,1-3-3v-42l10-17,10,17v42A3,3,0,0,1,17-1533Z" transform="translate(1134.986 -1070.844) rotate(-135)"></path></g></svg>
                <span>` + getNumberUnit(info["size"]) + `</span>
            </div>
        `;
    } else if (info["type"] == "image_format") {
        size = `
            <div class = "menu_work_part_list_item_right_info_item">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M48.5,1550H1.5a1.5,1.5,0,0,1-1.289-2.267l11-18.5a1.5,1.5,0,0,1,1.846-.626l11.336,4.534L36.228,1514.2a1.5,1.5,0,0,1,2.7.327l11,33.5A1.5,1.5,0,0,1,48.5,1550Zm-44.363-3H46.429l-9.354-28.489-10.8,17.284a1.5,1.5,0,0,1-1.829.6l-11.309-4.524Z" transform="translate(0 -1500)"></path><path d="M11.5,3A8.5,8.5,0,1,0,20,11.5,8.51,8.51,0,0,0,11.5,3m0-3A11.5,11.5,0,1,1,0,11.5,11.5,11.5,0,0,1,11.5,0Z"></path></g></svg>
                <span>` + getNumberUnit(info["size"]) + `</span>
            </div>
        `;
    }

    html = `
        <div class = "visible_element menu_work_part_list_item` + addClass + ` md-ripples" type = "` + info["type"] + `" part_number = "` + info["number"] + `" views = "` + info["views"] + `" oncontextmenu = "moreButtonWorkspaceWorkPartList(` + menuNumber + `, event, ` + info["number"] + `);" onclick = "(isUploadThumbnailWorkspaceWorkPartList == false) ? ` + onclick + ` : null;">
            <div class = "menu_work_part_list_item_left_viewed_percent` + percentViewedAddClass + `">
                <div class = "menu_work_part_list_item_left_viewed_percent_line">
                    <div class = "menu_work_part_list_item_left_viewed_percent_fill" style = "width: ` + percentViewed + `%;"></div>
                </div>
            </div>
            ` + videoInfo + `
            <div class = "menu_work_part_list_item_left img_wrap">
                <img src = "` + info["thumbnail_image"] + `" onload = "imageLoad(event);">
            </div>
            <div class = "menu_work_part_list_item_right">
                <div class = "menu_work_part_list_item_right_category">
                    ` + category + `
                </div>
                <div class = "menu_work_part_list_item_right_title">
                    ` + info["title"] + `
                </div>
                <div class = "menu_work_part_list_item_right_info">
                    <div class = "menu_work_part_list_item_right_info_item">
                        ` + publicStatusSvg + `
                        <span>` + getLanguage("public_status:" + info["public_status"]) + `</span>
                    </div>
                    ` + size + `
                    <div class = "menu_work_part_list_item_right_info_item">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M25,50A25.007,25.007,0,0,1,15.269,1.965,25.007,25.007,0,0,1,34.731,48.036,24.843,24.843,0,0,1,25,50ZM25,3A22,22,0,1,0,47,25,22.025,22.025,0,0,0,25,3Z"/><g transform="translate(0 1)"><rect width="3" height="21" rx="1.5" transform="translate(23 6)"/><rect width="3" height="21" rx="1.5" transform="translate(44 24) rotate(90)"/></g></g></svg>
                        <span>` + getTimePast(new Date(info["upload_date"])) + `</span>
                    </div>
                    <div class = "menu_work_part_list_item_right_info_item">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M40.707,46.427h0a3.976,3.976,0,0,1-2.333-1.044c-3.13-2.487-11.917-9.316-12-9.383H5a5.006,5.006,0,0,1-5-5V5A5.006,5.006,0,0,1,5,0H45a5.006,5.006,0,0,1,5,5V31a5.005,5.005,0,0,1-5,5H42.466v9.106A2,2,0,0,1,40.707,46.427ZM4.906,3A1.985,1.985,0,0,0,3.016,4.9L2.984,31.027c0,.019.129,1.891,1.859,1.953H27.391l12.078,9.453V32.98h5.688A2.03,2.03,0,0,0,47,31l-.015-26.25c0-.017-.282-1.672-1.8-1.718Z" transform="translate(0 1.786)"></path></g></svg>
                        <span>` + commas(info["comments_count"]) + `</span>
                    </div>
                    <div class = "menu_work_part_list_item_right_info_item">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M25,37a21.437,21.437,0,0,1-9.731-2.508,34.262,34.262,0,0,1-7.947-5.721A39.4,39.4,0,0,1,1.965,22.54,10.312,10.312,0,0,1,0,18.5a10.313,10.313,0,0,1,1.965-4.04A39.4,39.4,0,0,1,7.323,8.229a34.261,34.261,0,0,1,7.947-5.721A21.437,21.437,0,0,1,25,0a21.236,21.236,0,0,1,9.728,2.538A34.517,34.517,0,0,1,42.67,8.311a40.627,40.627,0,0,1,5.357,6.242A10.518,10.518,0,0,1,50,18.5c.01,1.175-2.446,5.3-6.467,9.358a35.762,35.762,0,0,1-8.228,6.3A21.562,21.562,0,0,1,25,37ZM25,2.964C13.381,2.964,3.264,16.237,3.264,18.5S13.381,34.036,25,34.036c7.276,0,13.532-5.214,16.613-8.322,3.016-3.042,5.109-6.244,5.1-7.214-.009-1.079-2.552-4.948-6.516-8.557C36.7,6.759,31.227,2.964,25,2.964Z" transform="translate(0 7)"></path><path d="M9.5,19A9.5,9.5,0,0,1,2.783,2.783,9.5,9.5,0,0,1,16.217,16.217,9.437,9.437,0,0,1,9.5,19Zm0-16.026A6.526,6.526,0,1,0,16.026,9.5,6.534,6.534,0,0,0,9.5,2.974Z" transform="translate(16 16)"></path></g></svg>
                        <span>` + commas(info["views"]) + `</span>
                    </div>
                    <div class = "menu_work_part_list_item_right_info_item">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(0 -10)"><rect width="3" height="39" rx="1.5" transform="translate(13.339 12.326) rotate(20)"></rect><rect width="3" height="39" rx="1.5" transform="translate(12.35 13.352) rotate(-20)"></rect><rect width="3" height="15.5" rx="1.5" transform="translate(22.179 33.413) rotate(90)"></rect></g><g transform="translate(4.821 6)"><rect width="3" height="23.5" rx="1.5" transform="translate(45.179 15.413) rotate(90)"></rect><rect width="3" height="6.299" rx="1.5" transform="translate(34.929 17.589) rotate(180)"></rect><path d="M6.258-1.278A1.576,1.576,0,0,1,7.282.152s-3.4,8.118-4.351,14.5A42.123,42.123,0,0,0,3,26.749a1.5,1.5,0,0,1-3,0A46.581,46.581,0,0,1,.157,14.4C1.163,7.87,4.524-.436,4.524-.436A1.37,1.37,0,0,1,6.258-1.278Z" transform="translate(30.054 41.378) rotate(-150)"></path><path d="M-4.084.024A1.4,1.4,0,0,1-2.138.58,46.577,46.577,0,0,1,2.6,12.127a40.794,40.794,0,0,1,.4,11.8,1.5,1.5,0,0,1-3,0,25.612,25.612,0,0,0,0-10.38A49.119,49.119,0,0,0-4.77,1.8,1.48,1.48,0,0,1-4.084.024Z" transform="translate(39.585 41.423) rotate(150)"></path></g></g></svg>
                        <span>` + commas(localizationCount) + `</span>
                    </div>
                </div>
            </div>
            <div class = "workspace_work_part_list_item_json" style = "display: none;">
                ` + JSON.stringify(info) + `
            </div>
            <input type = "file" onchange = "requestWorkspaceWorkPartListThumbnailUpload(` + menuNumber + `, ` + info["number"] + `, this);" accept = "image/png, image/jpeg, image/webp, image/gif" style = "display: none;">
        </div>
    `;

    return html;
}








function showWorkspaceWorkPartListMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("workspace_work_part_list_contents_loading")[0];
    loading.style.display = "block";
}
function hideWorkspaceWorkPartListMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("workspace_work_part_list_contents_loading")[0];
    loading.style.display = "none";
}
function checkWorkspaceWorkPartListMoreLoading(menuNumber) {
    if (workspaceWorkPartListLoadNumbers[menuNumber].length == 0) {
        hideWorkspaceWorkPartListMoreLoading(menuNumber);
        workspaceWorkPartListLoadNumbers[menuNumber] = null;
    } else {
        showWorkspaceWorkPartListMoreLoading(menuNumber);
    }
}




function getWorkspaceWorkPartListSortItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("workspace_work_part_list_select_sort:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("workspace_work_part_list_select_sort:1"),
        "value": 1
    }
    return items;
}
function getWorkspaceWorkPartListCategoryItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("workspace_work_part_list_select_category:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("workspace_work_part_list_select_category:1"),
        "value": 1
    }
    items[2] = {
        "title": getLanguage("workspace_work_part_list_select_category:2"),
        "value": 2
    }
    items[3] = {
        "title": getLanguage("workspace_work_part_list_select_category:3"),
        "value": 3
    }
    return items;
}








function moreLoadWorkspaceWorkPartList(menuNumber) {
    if (workspaceWorkPartListLoadNumbers[menuNumber] == null || workspaceWorkPartListLoadNumbers[menuNumber].length == 0) {
        workspaceWorkPartListLoadNumbers[menuNumber] = null;
        isWorkspaceWorkPartListMoreLoad[menuNumber] = null;
        return;
    }

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/part_list/getInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                if (info != null) {
                    for (let i = 0; i < info.length; i++) {
                        let html = getHtmlWorkspaceWorkPartList(menuNumber, info[i]);
                        addContentWorkspaceWorkPartList(menuNumber, info[i]["chapter"], html);
                
                        let array = workspaceWorkPartListLoadNumbers[menuNumber];
                        array = array.remove("" + info[i]["number"]);
                        workspaceWorkPartListLoadNumbers[menuNumber] = array;
                    }
                }                

                isWorkspaceWorkPartListMoreLoad[menuNumber] = null;
                checkWorkspaceWorkPartListMoreLoading(menuNumber);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
        }
    });

    let numbers = workspaceWorkPartListLoadNumbers[menuNumber];
    let numbersMaxCount = (numbers.length >= 25) ? 25 : numbers.length;
    numbers = numbers.splice(0, numbersMaxCount);
    
    var formData = new FormData();
    formData.append("numbers", numbers.join(","));

    xhr.send(formData);
}

function workspaceWorkPartListOptionLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let workInfo = JSON.parse(contents.getElementsByClassName("workspace_work_info_json")[0].innerHTML);
    
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/part_list/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let json = JSON.parse(xhrHtml);
                
                let numbers = contents.getElementsByClassName("workspace_work_part_list_numbers")[0];
                let info_json = contents.getElementsByClassName("workspace_work_part_list_info_json")[0];
                numbers.innerHTML = json["numbers"];
                info_json.innerHTML = json["info"];

                workspaceWorkPartListLoad(menuNumber, false);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    //옵션
    let sort = contents.getElementsByClassName("sort_box");
    
    var formData = new FormData();
    formData.append("workNumber", workInfo["number"]);
    formData.append("workType", workInfo["type"]);
    formData.append("sort", sort[0].getAttribute("value"));
    formData.append("chapter", sort[1].getAttribute("value"));

    xhr.send(formData);
}


















let isWorkspaceWorkPartListMoreLoad = new Array();

function checkWorkspaceWorkPartListLoad() {
    if (getCurrentMenuName() == "workspace_work_part_list") {
        let boxSize = 75;

        let scrollPercent = ((document.documentElement.scrollTop + window.innerHeight) / (document.documentElement.scrollHeight - boxSize)) * 100;
        if (scrollPercent >= 100) {
            let number = getCurrentMenuNumber();
            if (isWorkspaceWorkPartListMoreLoad[number] == null) {
                isWorkspaceWorkPartListMoreLoad[number] = true;
                moreLoadWorkspaceWorkPartList(number);
            }
        }
    }
}
addEventListener("scroll", checkWorkspaceWorkPartListLoad);
addEventListener("resize", checkWorkspaceWorkPartListLoad);


























function moreButtonWorkspaceWorkPartList(menuNumber, event, partNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let workInfo = JSON.parse(contents.getElementsByClassName("workspace_work_info_json")[0].innerHTML);
    let latest_number = contents.getElementsByClassName("workspace_work_part_list_latest_number")[0].innerHTML.trim();

    let work_cover = null;
    if (workInfo["cover_image"] == null) {
        work_cover = workInfo["default_cover_image"];
    } else {
        work_cover = workInfo["cover_image"];
    }

    let thumbnail_image = null;
    let part_items = contents.getElementsByClassName("menu_work_part_list_item");
    for (let i = 0; i < part_items.length; i++) {
        if (part_items[i].getAttribute("part_number") == partNumber) {
            thumbnail_image = part_items[i].getElementsByTagName("img")[0].src;
        }
    }

    let slot = new Array();
    slot[slot.length] = {
        'icon': '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>',
        'title': getLanguage("edit"),
        'onclick': 'editWorkspaceWorkPartList(' + menuNumber + ', ' + partNumber + ');',
    };
    if (latest_number == partNumber) {
        slot[slot.length] = {
            'icon': '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><rect width="50" height="3" rx="1.5" transform="translate(0 11)"></rect><path d="M31,39H5a5.006,5.006,0,0,1-5-5V0H4.932A2,2,0,0,0,3,2V34a2,2,0,0,0,2,2H31a2,2,0,0,0,2-2V2a2,2,0,0,0-1.914-2L36,0V34A5.006,5.006,0,0,1,31,39Z" transform="translate(7 11)"></path><path d="M5,14,0,14V5A5.006,5.006,0,0,1,5,0H21a5.006,5.006,0,0,1,5,5v9H21.007A2,2,0,0,0,23,12V5a2,2,0,0,0-2-2H5A2,2,0,0,0,3,5v7a2,2,0,0,0,2,2H5Z" transform="translate(12)"></path><rect width="3" height="15" rx="1.5" transform="translate(24 22)"></rect><rect width="3" height="15" rx="1.5" transform="translate(33 22)"></rect><rect width="3" height="15" rx="1.5" transform="translate(15 22)"></rect></g></svg>',
            'title': getLanguage("delete"),
            'onclick': 'deleteWorkspaceWorkPartList(' + menuNumber + ', ' + partNumber + ');',
            'class': 'more_button_item_delete',
        };
    }
    slot[slot.length] = {
        'icon': '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="a"><rect width="50" height="50"></rect></clipPath></defs><g id="b" clip-path="url(#a)"><g clip-path="url(#a)"><rect width="3" height="25" rx="1.5" transform="translate(0 25)"></rect><rect width="3" height="25" rx="1.5" transform="translate(47 25)"></rect><rect width="50" height="3" rx="1.5" transform="translate(0 47)"></rect><rect width="3" height="34" rx="1.5" transform="translate(27 35.5) rotate(180)"></rect><rect width="3" height="17.526" rx="1.5" transform="translate(37.928 12.393) rotate(135)"></rect><rect width="3" height="17" rx="1.5" transform="translate(15.193 14.142) rotate(-135)"></rect></g></g></svg>',
        'title': getLanguage("workspace_work_part_list_more_button:thumbnail_upload"),
        'onclick': 'uploadThumbnailWorkspaceWorkPartList(' + menuNumber + ', ' + partNumber + ');',
    };
    if (thumbnail_image != work_cover) {
        slot[slot.length] = {
            'icon': '',
            'title': getLanguage("workspace_work_part_list_more_button:use_work_cover"),
            'onclick': 'requestUseWorkCoverWorkspaceWorkPartList(' + menuNumber + ', ' + partNumber + ');',
        };
    }
    moreButton(null, slot, event);
}

function editWorkspaceWorkPartList(menuNumber, partNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_work_part_list_item");

    for (let i = 0; i < items.length; i++) {
        if (items[i].getAttribute("part_number") == partNumber) {
            let info = JSON.parse(items[i].getElementsByClassName("workspace_work_part_list_item_json")[0].innerHTML);
            info["edit"] = true;
            info["partNumber"] = partNumber;
            openPopupContents("upload_work_part", null, info);
        }
    }
}









function openUploadWorkPartList(workNumber, workType, chapter) {
    let data = {
        "number": workNumber,
        "type": workType,
        "chapter": chapter,
    }

    if (workType == "novel" || workType == "image_format") {
        openPopupContents('upload_work_part', null, data);
    } else if (workType == "video") {
        openPopupContents('upload_work_part_video', null, data);
    }
}









var isUploadThumbnailWorkspaceWorkPartList = false;
function uploadThumbnailWorkspaceWorkPartList(menuNumber, partNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_work_part_list_item");

    isUploadThumbnailWorkspaceWorkPartList = true;
    function callback() {
        isUploadThumbnailWorkspaceWorkPartList = false;
    }
    window.requestAnimationFrame(callback);

    for (let i = 0; i < items.length; i++) {
        if (items[i].getAttribute("part_number") == partNumber) {
            items[i].getElementsByTagName("input")[0].click();
        }
    }
}

function deleteItemWorkspaceWorkPart(menuNumber, partNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_work_part_list_item");

    //-- -- -- -- -- 화면에서 보이지 않아도 해당 앨리먼트는 삭제하지 않는다 -- -- -- -- --
    for (let i = 0; i < items.length; i++) {
        if (items[i].getAttribute("part_number") == partNumber) {
            registerAllowVisibleElement(items[i], 210);
        }
    }

    for (let i = 0; i < items.length; i++) {
        if (items[i].getAttribute("part_number") == partNumber) {
            let height = items[i].clientHeight;
            items[i].parentElement.style.height = height + "px";
            items[i].parentElement.style.transform = "scale(1)";
            items[i].parentElement.style.transition = "all 0.2s";
            setTimeout(() => {
                items[i].parentElement.style.height = "0px";
                items[i].parentElement.style.transform = "scale(0.95)";
                items[i].parentElement.style.opacity = "0";
            }, 10);
            setTimeout(() => {
                items[i].parentElement.remove();

                let chapter_contents = contents.getElementsByClassName("workspace_work_part_list_chapter_contents")[0];
                let chapter_child = chapter_contents.children;
                for (let i = 0; i < chapter_child.length; i++) {
                    let chapter_items = chapter_child[i].getElementsByClassName("workspace_work_part_list_chapter_contents_items")[0];
                    if (chapter_items.children.length == 0) {
                        let chapter_child_height = chapter_child[i].clientHeight;
                        chapter_child[i].style.transition = "all 0.2s";
                        chapter_child[i].style.height = chapter_child_height + "px";
                        setTimeout(() => {
                            chapter_child[i].style.height = "0px";
                            chapter_child[i].style.marginTop = "-10px";
                            chapter_child[i].style.opacity = "0";
                        }, 10);
                        setTimeout(() => {
                            chapter_child[i].remove();

                            if (chapter_child.length == 0) {
                                noDataWorkspaceWorkPartList(menuNumber);
                            }
                        }, 210);
                    }
                }
            }, 210);
        }
    }
    checkChapterUploadButtonWorkspaceWorkPartList(menuNumber);
}

function deleteWorkspaceWorkPartList(menuNumber, partNumber) {
    confirmPopup(getLanguage("confirm_popup_title:delete"), getLanguage("confirm_popup_subject:delete"), 'requestDeleteWorkspaceWorkPartList(' + menuNumber + ', ' + partNumber + ');');
}

function requestDeleteWorkspaceWorkPartList(menuNumber, partNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let latest_number = contents.getElementsByClassName("workspace_work_part_list_latest_number")[0];
    let latest_chapter = contents.getElementsByClassName("workspace_work_part_list_latest_chapter")[0];

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work/delete_part.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let latestInfo = JSON.parse(xhrHtml);
                
                if (latestInfo != null) {
                    latest_number.innerHTML = latestInfo["latest_number"];
                    latest_chapter.innerHTML = latestInfo["latest_chapter"];
                } else {
                    latest_number.innerHTML = "";
                    latest_chapter.innerHTML = "";
                }
                
                deleteItemWorkspaceWorkPart(menuNumber, partNumber);
                actionMessage(getLanguage("permanently_delete_item_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();

            //-- -- -- -- -- 화면에서 보이지 않아도 삭제되지 않는다를 취소한다 -- -- -- -- --
            setTimeout(() => {
                deleteAllowVisibleElement(allowInfo["index"]);
            }, 210);
        }
    });
    
    var formData = new FormData();
    formData.append("partNumber", partNumber);

    xhr.send(formData);
}

















function checkChapterUploadButtonWorkspaceWorkPartList(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("workspace_work_part_list_chapter_contents")[0].children;
    let latest_chapter = contents.getElementsByClassName("workspace_work_part_list_latest_chapter")[0].innerHTML.trim();

    for (let i = 0; i < items.length; i++) {
        let chapter_upload = items[i].getElementsByClassName("workspace_work_contents_left_work_part_list_top_chapter_upload")[1];
        if (chapter_upload != null) {
            if (items[i].getAttribute("chapter") == latest_chapter) {
                chapter_upload.classList.remove("workspace_work_contents_left_work_part_list_top_chapter_upload_disabled");
            } else {
                chapter_upload.classList.add("workspace_work_contents_left_work_part_list_top_chapter_upload_disabled");
            }
        }
    }
}
















function requestUseWorkCoverWorkspaceWorkPartList(menuNumber, partNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let part_items = contents.getElementsByClassName("menu_work_part_list_item");

    //-- -- -- -- -- 화면에서 보이지 않아도 해당 앨리먼트는 삭제하지 않는다 -- -- -- -- --
    let allowInfo = null;
    for (let i = 0; i < part_items.length; i++) {
        if (part_items[i].getAttribute("part_number") == partNumber) {
            allowInfo = registerAllowVisibleElement(part_items[i]);
        }
    }

    let thumbnail_image = null;
    let dm_thumbnail_image = null;
    for (let i = 0; i < part_items.length; i++) {
        if (part_items[i].getAttribute("part_number") == partNumber) {
            dm_thumbnail_image = part_items[i].getElementsByTagName("img")[0];
            thumbnail_image = dm_thumbnail_image.src;
        }
    }

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work/use_work_cover_part.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                
                dm_thumbnail_image.src = xhrHtml;
                actionMessage(getLanguage("thumbnail_change"), 'requestChangeThumbnailWorkspaceWorkPartList(' + menuNumber + ', ' + partNumber + ', \'' + thumbnail_image + '\', true);');

                //-- -- -- -- -- 화면에서 보이지 않아도 삭제되지 않는다를 취소한다 -- -- -- -- --
                deleteAllowVisibleElement(allowInfo["index"]);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("partNumber", partNumber);

    xhr.send(formData);
}

function requestChangeThumbnailWorkspaceWorkPartList(menuNumber, partNumber, url, isUndo) {
    (isUndo == null) ? isUndo = false : null;

    let contents = document.getElementById("contents_" + menuNumber);
    let part_items = contents.getElementsByClassName("menu_work_part_list_item");

    //-- -- -- -- -- 화면에서 보이지 않아도 해당 앨리먼트는 삭제하지 않는다 -- -- -- -- --
    let allowInfo = null;
    for (let i = 0; i < part_items.length; i++) {
        if (part_items[i].getAttribute("part_number") == partNumber) {
            allowInfo = registerAllowVisibleElement(part_items[i]);
        }
    }

    let thumbnail_image = null;
    let dm_thumbnail_image = null;
    for (let i = 0; i < part_items.length; i++) {
        if (part_items[i].getAttribute("part_number") == partNumber) {
            dm_thumbnail_image = part_items[i].getElementsByTagName("img")[0];
            if (isUndo == false) {
                thumbnail_image = dm_thumbnail_image.src;
            }
        }
    }

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work/change_thumbnail_part.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                
                if (thumbnail_image == null) {
                    actionMessage(getLanguage("thumbnail_change"));
                } else {
                    actionMessage(getLanguage("thumbnail_change"), 'requestChangeThumbnailWorkspaceWorkPartList(' + menuNumber + ', ' + partNumber + ', \'' + thumbnail_image + '\', true);');
                }

                dm_thumbnail_image.style.animation = null;
                dm_thumbnail_image.src = url;

                //-- -- -- -- -- 화면에서 보이지 않아도 삭제되지 않는다를 취소한다 -- -- -- -- --
                deleteAllowVisibleElement(allowInfo["index"]);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("partNumber", partNumber);
    formData.append("url", url);

    xhr.send(formData);
}


function requestWorkspaceWorkPartListThumbnailUpload(menuNumber, partNumber, input) {
    let file = input.files[0];
    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "https://img.louibooks.com/upload.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let json = JSON.parse(xhrHtml);
                
                requestChangeThumbnailWorkspaceWorkPartList(menuNumber, partNumber, json["url"]);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("imgFile", file);
    formData.append("type", "work_part_thumbnail");

    xhr.send(formData);

    input.value = null;
}


















































function getSelectItemsWorkspaceWorkPartListChapter(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let latestChapter = contents.getElementsByClassName("workspace_work_part_list_latest_chapter")[0];
    let chapterInfo = new Array();
    if (contents.getElementsByClassName("workspace_work_part_list_chapter_info")[0].innerHTML.trim() != "") {
        chapterInfo = JSON.parse(contents.getElementsByClassName("workspace_work_part_list_chapter_info")[0].innerHTML);
    }
    latestChapter = Number.parseInt(latestChapter.innerHTML.trim());
    return getSelectItemsPartListChapter(latestChapter, chapterInfo);
}