

var myWorkListLoadNumbers = new Array();

function myWorkListLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);

    let numbers = contents.getElementsByClassName("work_list_numbers")[0].innerHTML.trim().split(",");
    let info = JSON.parse(contents.getElementsByClassName("work_list_info")[0].innerHTML);

    myWorkListLoadNumbers[menuNumber] = numbers;

    if (info != null) {
        for (let i = 0; i < info.length; i++) {
            addItemMyWorkList(menuNumber, info[i])
    
            let array = myWorkListLoadNumbers[menuNumber];
            array = array.remove("" + info[i]["number"]);
            myWorkListLoadNumbers[menuNumber] = array;
        }
        checkMyWorkListMoreLoading(menuNumber);
    } else {
        myWorkListNoData(menuNumber);
    }

    //정렬
    let sort_box_title = contents.getElementsByClassName("sort_box_title");
    sort_box_title[0].innerHTML = getLanguage("my_work_list_select_sort:1");

    //데이터 없음
    let no_data = contents.getElementsByClassName("menu_my_work_list_no_data")[0];
    no_data.getElementsByClassName("menu_my_work_list_no_data_title")[0].innerHTML = getLanguage("my_work_list_no_data");
    no_data.getElementsByClassName("menu_my_work_list_no_data_description")[0].innerHTML = getLanguage("no_data_description");
}
function myWorkListNoData(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let no_data = contents.getElementsByClassName("menu_my_work_list_no_data")[0];
    no_data.style.display = "flex";
}

function addItemMyWorkList(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let workListContents = contents.getElementsByClassName("work_list_contents")[0];
    let no_data = contents.getElementsByClassName("menu_my_work_list_no_data")[0];

    let newEl = document.createElement("div");
    newEl.setAttribute("oncontextmenu", "myWorkListMoreItems(event, " + menuNumber + ", " + info["number"] + ", " + info["user_number"] + ");");
    newEl.setAttribute("work_list_number", info["number"]);
    newEl.classList.add("visible_element");
    newEl.innerHTML = getHtmlWorkList(info);
    workListContents.appendChild(newEl);

    //작품 목록 없음 숨기기
    no_data.style.display = "none";
}
function myWorkListMoreItems(event, menuNumber, workListNumber, userNumber) {
    let slot = new Array();

    if (loginStatus["number"] == userNumber) {
        slot[0] = {
            'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>',
            'title': getLanguage("delete"),
            'onclick': 'deleteWorkListMyWorkList(' + menuNumber + ', ' + workListNumber + ');',
            'class': 'more_button_item_delete',
        };
    } else {
        slot[0] = {
            'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>',
            'title': getLanguage("my_work_list_contextmenu_button:save_delete"),
            'onclick': 'requestMyWorkListSaveDelete(' + menuNumber + ', ' + workListNumber + ');',
            'class': 'more_button_item_delete',
        };
    }

    moreButton(null, slot, event);
}



function showMyWorkListMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("my_work_list_contents_loading")[0];
    loading.style.display = "block";
}
function hideMyWorkListMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("my_work_list_contents_loading")[0];
    loading.style.display = "none";
}
function checkMyWorkListMoreLoading(menuNumber) {
    if (myWorkListLoadNumbers[menuNumber].length == 0) {
        hideMyWorkListMoreLoading(menuNumber);
        myWorkListLoadNumbers[menuNumber] = null;
    } else {
        showMyWorkListMoreLoading(menuNumber);
    }
}

let isMyWorkListMoreLoad = new Array();

function checkMyWorkListLoad() {
    if (getCurrentMenuName() == "my_work_list") {
        let boxSize = 75;

        let scrollPercent = ((document.documentElement.scrollTop + window.innerHeight) / (document.documentElement.scrollHeight - boxSize)) * 100;
        if (scrollPercent >= 100) {
            let number = getCurrentMenuNumber();
            if (isMyWorkListMoreLoad[number] == null) {
                isMyWorkListMoreLoad[number] = true;
                moreLoadMyWorkList(number);
            }
        }
    }
}
addEventListener("scroll", checkMyWorkListLoad);
addEventListener("resize", checkMyWorkListLoad);
addEventListener("focus", checkMyWorkListLoad);





function moreLoadMyWorkList(menuNumber) {
    if (myWorkListLoadNumbers[menuNumber] == null || myWorkListLoadNumbers[menuNumber].length == 0) {
        myWorkListLoadNumbers[menuNumber] = null;
        isMyWorkListMoreLoad[menuNumber] = null;
        return;
    }

    let numbers = myWorkListLoadNumbers[menuNumber];
    let numbersMaxCount = (numbers.length >= 24) ? 24 : numbers.length;
    numbers = numbers.splice(0, numbersMaxCount);

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work_list/getInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                for (let i = 0; i < info.length; i++) {
                    addItemMyWorkList(menuNumber, info[i]);
                }

                //
                for (let i = 0; i < numbers.length; i++) {
                    let array = myWorkListLoadNumbers[menuNumber];
                    array = array.remove("" + numbers[i]);
                    myWorkListLoadNumbers[menuNumber] = array;
                }

                isMyWorkListMoreLoad[menuNumber] = null;
                checkMyWorkListMoreLoading(menuNumber);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
        }
    });
    
    var formData = new FormData();
    formData.append("numbers", numbers.join(","));

    xhr.send(formData);
}























function myWorkListOptionLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_contents = contents.getElementsByClassName("work_list_contents")[0];
    let sort_box = contents.getElementsByClassName("sort_box");

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/my_work_list/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let data = JSON.parse(xhrHtml);
                let info = data["info"];
                let numbers = data["numbers"].split(",");

                work_contents.textContent = "";
                myWorkListLoadNumbers[menuNumber] = null;

                //
                if (info != null) {
                    myWorkListLoadNumbers[menuNumber] = numbers;

                    for (let i = 0; i < info.length; i++) {
                        addItemMyWorkList(menuNumber, info[i]);
    
                        let array = myWorkListLoadNumbers[menuNumber];
                        array = array.remove("" + info[i]["number"]);
                        myWorkListLoadNumbers[menuNumber] = array;
                    }
                    checkMyWorkListMoreLoading(menuNumber);
                } else {
                    myWorkListNoData(menuNumber);
                }

                isMyWorkListMoreLoad[menuNumber] = null;
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("sort", sort_box[0].getAttribute("value"));

    xhr.send(formData);
}


































function requestMyWorkListSaveDelete(menuNumber, workListNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_list_contents = contents.getElementsByClassName("work_list_contents")[0];

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work_list/save_delete.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                let children = work_list_contents.children;
                for (let i = 0; i < children.length; i++) {
                    let work_list_number = children[i].getAttribute("work_list_number");
                    if (work_list_number == workListNumber) {
                        children[i].remove();
                    }
                }
                deleteMyWorkList(workListNumber);

                //체크
                if (children.length == 0 && (myWorkListLoadNumbers[menuNumber] == null || myWorkListLoadNumbers[menuNumber].length == 0)) {
                    myWorkListNoData(menuNumber);
                }

                actionMessage(getLanguage("work_list_save_delete_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("workListNumber", workListNumber);

    xhr.send(formData);
}


function deleteWorkListMyWorkList(menuNumber, workListNumber) {
    confirmPopup(getLanguage("confirm_popup_title:delete"), getLanguage("confirm_popup_subject:delete"), 'requestMyWorkListDelete(' + menuNumber + ', ' + workListNumber + ');');
}
function requestMyWorkListDelete(menuNumber, workListNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_list_contents = contents.getElementsByClassName("work_list_contents")[0];

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work_list/delete.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                let children = work_list_contents.children;
                for (let i = 0; i < children.length; i++) {
                    let work_list_number = children[i].getAttribute("work_list_number");
                    if (work_list_number == workListNumber) {
                        children[i].remove();
                    }
                }
                deleteMyWorkList(workListNumber);

                //체크
                if (children.length == 0 && (myWorkListLoadNumbers[menuNumber] == null || myWorkListLoadNumbers[menuNumber].length == 0)) {
                    myWorkListNoData(menuNumber);
                }

                actionMessage(getLanguage("work_list_delete_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("workListNumber", workListNumber);

    xhr.send(formData);
}

































function getMyWorkListSortItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("my_work_list_select_sort:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("my_work_list_select_sort:1"),
        "value": 1
    }
    items[2] = {
        "title": getLanguage("my_work_list_select_sort:2"),
        "value": 2
    }
    items[3] = {
        "title": getLanguage("my_work_list_select_sort:3"),
        "value": 3
    }
    return items;
}