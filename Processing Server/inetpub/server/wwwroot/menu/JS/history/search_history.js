

var historySearchHistoryLoadNumbers = new Array();

function historySearchHistoryLoad(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let right = contents.getElementsByClassName("menu_history_right")[0];
    right.setAttribute("type", "search_history");
    right.innerHTML = `
        <div class = "menu_history_search_history">
            <div class = "menu_search_history_sort">
                <div class = "sort_box md-ripples" popupwidth = "max-content" value = "0" onchange = "historySearchHistoryOptionLoad(` + menuNumber + `);" onclick = "selectList(this, getHistorySearchHistorySortItems());">
                    <div class = "sort_box_title value_title">` + getLanguage("history_search_history_select_sort:0") + `</div>
                    <div class = "sort_box_icon">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.418 6.109c0.272-0.268 0.709-0.268 0.979 0s0.271 0.701 0 0.969l-7.908 7.83c-0.27 0.268-0.707 0.268-0.979 0l-7.908-7.83c-0.27-0.268-0.27-0.701 0-0.969s0.709-0.268 0.979 0l7.419 7.141 7.418-7.141z"></path></svg>
                    </div>
                </div>
            </div>
            <div class = "menu_search_history_contents"></div>
            <div class = "history_search_history_contents_loading" style = "padding: 20px; display: none;">
                <div class="showbox"><div class="loader" style="width: 35px;"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="5" stroke-miterlimit="10"></circle></svg></div></div>
            </div>
            <div class = "menu_history_right_search_history_no_data" style = "display: none;">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-3094.635,49.5H-3116.5a3,3,0,0,1-3-3V3.5a3,3,0,0,1,3-3h31a3,3,0,0,1,3,3V37.365L-3094.635,49.5Z" transform="translate(3126)" opacity="0.7"/><path d="M3151.333,49.5l12.293-12.293h-9.846a2.517,2.517,0,0,0-1.983.575,2.884,2.884,0,0,0-.464,2.039Z" transform="translate(-3120)" opacity="0.6"/></g></svg>
                <div class = "menu_history_right_search_history_no_data_title">
                    ` + getLanguage("history_search_history_no_data") + `
                </div>
                <div class = "menu_history_right_search_history_no_data_description">
                    ` + getLanguage("no_data_description") + `
                </div>
            </div>
        </div>
    `;
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0];
    option_items.innerHTML = `
        <div class = "menu_history_left_wrap_option_item md-ripples" onclick = "clearHistorySearchHistory(` + menuNumber + `);">
            <div class = "menu_history_left_wrap_option_item_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>
            </div>
            <div class = "menu_history_left_wrap_option_item_right">
                <div class = "menu_history_left_wrap_option_item_right_title">
                    ` + getLanguage("history_search_history_option_title:clear") + `
                </div>
                <div class = "menu_history_left_wrap_option_item_right_description">
                    ` + getLanguage("history_search_history_option_description:clear") + `
                </div>
            </div>
        </div>
        <div class = "menu_history_left_wrap_option_item md-ripples" style = "display: none;" onclick = "historySearchHistoryPause(` + menuNumber + `);">
            <div class = "menu_history_left_wrap_option_item_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23 12c0-3.037-1.232-5.789-3.222-7.778s-4.741-3.222-7.778-3.222-5.789 1.232-7.778 3.222-3.222 4.741-3.222 7.778 1.232 5.789 3.222 7.778 4.741 3.222 7.778 3.222 5.789-1.232 7.778-3.222 3.222-4.741 3.222-7.778zM21 12c0 2.486-1.006 4.734-2.636 6.364s-3.878 2.636-6.364 2.636-4.734-1.006-6.364-2.636-2.636-3.878-2.636-6.364 1.006-4.734 2.636-6.364 3.878-2.636 6.364-2.636 4.734 1.006 6.364 2.636 2.636 3.878 2.636 6.364zM11 15v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1v6c0 0.552 0.448 1 1 1s1-0.448 1-1zM15 15v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1v6c0 0.552 0.448 1 1 1s1-0.448 1-1z"></path></svg>
            </div>
            <div class = "menu_history_left_wrap_option_item_right">
                <div class = "menu_history_left_wrap_option_item_right_title">
                    ` + getLanguage("history_search_history_option_title:history_pause") + `
                </div>
                <div class = "menu_history_left_wrap_option_item_right_description">
                    ` + getLanguage("history_search_history_option_description:history_pause") + `
                </div>
            </div>
        </div>
        <div class = "menu_history_left_wrap_option_item md-ripples" style = "display: none;" onclick = "historySearchHistoryUse(` + menuNumber + `);">
            <div class = "menu_history_left_wrap_option_item_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM9.984 16.5v-9l6 4.5z"></path></svg>
            </div>
            <div class = "menu_history_left_wrap_option_item_right">
                <div class = "menu_history_left_wrap_option_item_right_title">
                    ` + getLanguage("history_search_history_option_title:history_use") + `
                </div>
                <div class = "menu_history_left_wrap_option_item_right_description">
                    ` + getLanguage("history_search_history_option_description:history_use") + `
                </div>
            </div>
        </div>
    `;
    let wrap_line = contents.getElementsByClassName("menu_history_left_wrap_line")[0];
    wrap_line.style.display = null;

    historySearchHistoryLoadNumbers[menuNumber] = info["numbers"].split(",");
    isHistorySearchHistoryMoreLoad[menuNumber] = null;

    let searchHistoryInfo = info["info"];
    if (searchHistoryInfo != null && searchHistoryInfo.length != 0) {
        for (let i = 0; i < searchHistoryInfo.length; i++) {
            addHistorySearchHistoryItem(menuNumber, searchHistoryInfo[i]);
    
            let array = historySearchHistoryLoadNumbers[menuNumber];
            array = array.remove("" + searchHistoryInfo[i]["number"]);
            historySearchHistoryLoadNumbers[menuNumber] = array;
        }
        checkHistorySearchHistoryMoreLoading(menuNumber);
    } else {
        historySearchHistoryNoData(menuNumber);
    }

    if (info["searchHistoryUse"] == true) {
        historySearchHistoryPauseActivate(menuNumber);
    } else {
        historySearchHistoryUseActivate(menuNumber);
    }
}
function historySearchHistoryNoData(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let history_contents = contents.getElementsByClassName("menu_search_history_contents")[0];
    history_contents.textContent = "";
    hideHistorySearchHistoryMoreLoading(menuNumber);

    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[0].classList.add("menu_history_left_wrap_option_item_disabled");

    let no_data = contents.getElementsByClassName("menu_history_right_search_history_no_data")[0];
    no_data.style.display = "flex";
}
function historySearchHistoryPauseActivate(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[1].style.display = null;
    option_items[2].style.display = "none";
}
function historySearchHistoryUseActivate(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[1].style.display = "none";
    option_items[2].style.display = null;
}
function addHistorySearchHistoryItem(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let history_contents = contents.getElementsByClassName("menu_search_history_contents")[0];

    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[0].classList.remove("menu_history_left_wrap_option_item_disabled");
    
    let newEl = document.createElement("div");
    newEl.setAttribute("number", info["number"]);
    newEl.classList.add("visible_element");
    newEl.classList.add("variable_element");
    newEl.innerHTML = `
        <div class = "menu_search_history_item">
            <div class = "menu_search_history_item_left md-ripples" onclick = "pcSearch('` + info["content"] + `');">
                <div class = "menu_search_history_item_left_icon immutable_element">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M25-20a24.846,24.846,0,0,1-9.731-1.965,24.915,24.915,0,0,1-7.947-5.358,24.915,24.915,0,0,1-5.358-7.947A24.837,24.837,0,0,1,0-45H3A21.852,21.852,0,0,0,9.451-29.451,21.852,21.852,0,0,0,25-23,22.025,22.025,0,0,0,47-45,22.025,22.025,0,0,0,25-67,21.939,21.939,0,0,0,5.407-55H2.08a24.925,24.925,0,0,1,5.242-7.678,24.915,24.915,0,0,1,7.947-5.358A24.831,24.831,0,0,1,25-70a24.831,24.831,0,0,1,9.731,1.965,24.915,24.915,0,0,1,7.947,5.358,24.92,24.92,0,0,1,5.358,7.946A24.839,24.839,0,0,1,50-45a24.837,24.837,0,0,1-1.965,9.731,24.915,24.915,0,0,1-5.358,7.947,24.915,24.915,0,0,1-7.947,5.358A24.846,24.846,0,0,1,25-20Zm9.99-16.451a1.494,1.494,0,0,1-.749-.2L23.877-42.636A1.5,1.5,0,0,1,23-44V-59a1.5,1.5,0,0,1,1.5-1.5A1.5,1.5,0,0,1,26-59v14.126l9.742,5.623a1.5,1.5,0,0,1,.549,2.049A1.506,1.506,0,0,1,34.99-36.451Z" transform="translate(0 70)"></path><g transform="translate(-2 4)"><rect width="3" height="12" rx="1.5" transform="translate(2.871 2.017)"></rect><rect width="3" height="12" rx="1.5" transform="matrix(0.259, 0.966, -0.966, 0.259, 14.462, 8.276)"></rect></g></g></svg>
                </div>
                <div class = "menu_search_history_item_left_info">
                    <div class = "menu_search_history_item_left_info_content">
                        ` + info["content"] + `
                    </div>
                    <div class = "menu_search_history_item_left_info_date">
                        ` + getTimePast(new Date(info["search_date"])) + `
                    </div>
                </div>
            </div>
            <div class = "menu_search_history_item_right immutable_element">
                <div class = "menu_search_history_item_right_items">
                    <div class = "menu_search_history_item_right_item md-ripples" onclick = "menuHistorySearchHistoryContentComplete('` + info["content"] + `');" onmouseenter = "hoverInformation(this, getLanguage('search_complete_button'));">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(8.029 8.029)"><rect width="3" height="30" rx="1.5"></rect><rect width="3" height="45" rx="1.5" transform="translate(0 2.121) rotate(-45)"></rect><rect width="3" height="30" rx="1.5" transform="translate(0 3) rotate(-90)"></rect></g></g></svg>
                    </div>
                    <div class = "menu_search_history_item_right_item md-ripples" onclick = "menuHistorySearchHistoryDeleteRecentSearches(` + menuNumber + `, ` + info["number"] + `, '` + info["content"] + `');" onmouseenter = "hoverInformation(this, getLanguage('search_delete_history'));">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>
                    </div>
                </div>
            </div>
        </div>
    `;
    history_contents.appendChild(newEl);

    //데이터 없음 숨기기
    let no_data = contents.getElementsByClassName("menu_history_right_search_history_no_data")[0];
    no_data.style.display = "none";
}
function menuHistorySearchHistoryContentComplete(content) {
    if ((window.orientation == null || window.orientation == undefined) == false) {
        showMobileSearch(null, content);
    } else {
        insertContentSearchAutoComplete('desktop', null, content);
    }
}
function menuHistorySearchHistoryDeleteRecentSearches(menuNumber, number, content) {
    let contents = document.getElementById("contents_" + menuNumber);
    let history_contents = contents.getElementsByClassName("menu_search_history_contents")[0];
    
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, '/php/history/search/delete.php');
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                
                //삭제
                deleteMyRecentSearches(content);

                //콘텐츠 삭제
                let deleteEl = null;
                let children = history_contents.children;
                for (let i = 0; i < children.length; i++) {
                    if (Number.parseInt(children[i].getAttribute("number")) == number) {
                        deleteEl = children[i];
                    }
                }

                let height = deleteEl.clientHeight;
                deleteEl.style.maxHeight = height + "px";
                deleteEl.style.transition = "all 0.2s";
                deleteEl.style.pointerEvents = "none";
                function callback() {
                    deleteEl.style.animation = "deleteMenuSearchHistoryItem 0.2s forwards";
                    deleteEl.style.maxHeight = "0px";
                    deleteEl.style.marginBottom = "-5px";
                    setTimeout(() => {
                        deleteEl.remove();
                    }, 200);
                    setTimeout(() => {
                        if (history_contents.innerHTML.trim() == "" && (historySearchHistoryLoadNumbers[menuNumber] == null || historySearchHistoryLoadNumbers[menuNumber] == '' || historySearchHistoryLoadNumbers[menuNumber].length == 0)) {
                            historySearchHistoryNoData(menuNumber);
                        }
                    }, 200);
                }
                window.requestAnimationFrame(callback);

                actionMessage(getLanguage("search_delete_history_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("content", content);

    xhr.send(formData);
}













function showHistorySearchHistoryMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("history_search_history_contents_loading")[0];
    loading.style.display = "block";
}
function hideHistorySearchHistoryMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("history_search_history_contents_loading")[0];
    loading.style.display = "none";
}
function checkHistorySearchHistoryMoreLoading(menuNumber) {
    if (historySearchHistoryLoadNumbers[menuNumber] == null || historySearchHistoryLoadNumbers[menuNumber].length == 0) {
        hideHistorySearchHistoryMoreLoading(menuNumber);
        historySearchHistoryLoadNumbers[menuNumber] = null;
    } else {
        showHistorySearchHistoryMoreLoading(menuNumber);
    }
}

let isHistorySearchHistoryMoreLoad = new Array();

function checkHistorySearchHistoryLoad() {
    if (getCurrentMenuName() == "history") {
        let right = contents.getElementsByClassName("menu_history_right")[0];
        if (right.getAttribute("type") == "search_history") {
            let boxSize = 75;

            let scrollPercent = ((document.documentElement.scrollTop + window.innerHeight) / (document.documentElement.scrollHeight - boxSize)) * 100;
            if (scrollPercent >= 100) {
                let number = getCurrentMenuNumber();
                if (isHistorySearchHistoryMoreLoad[number] == null) {
                    isHistorySearchHistoryMoreLoad[number] = true;
                    moreLoadHistorySearchHistory(number);
                }
            }
        }
    }
}
addEventListener("scroll", checkHistorySearchHistoryLoad);
addEventListener("resize", checkHistorySearchHistoryLoad);
addEventListener("focus", checkHistorySearchHistoryLoad);

function moreLoadHistorySearchHistory(menuNumber) {
    if (historySearchHistoryLoadNumbers[menuNumber] == null || historySearchHistoryLoadNumbers[menuNumber] == '' || historySearchHistoryLoadNumbers[menuNumber].length == 0) {
        historySearchHistoryLoadNumbers[menuNumber] = null;
        isHistorySearchHistoryMoreLoad[menuNumber] = null;
        return;
    }

    let numbers = historySearchHistoryLoadNumbers[menuNumber];
    let numbersMaxCount = (numbers.length >= 30) ? 30 : numbers.length;
    numbers = numbers.splice(0, numbersMaxCount);

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/search/getInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                for (let i = 0; i < info.length; i++) {
                    addHistorySearchHistoryItem(menuNumber, info[i]);

                    let array = historySearchHistoryLoadNumbers[menuNumber];
                    array = array.remove("" + info[i]["number"]);
                    historySearchHistoryLoadNumbers[menuNumber] = array;
                }

                isHistorySearchHistoryMoreLoad[menuNumber] = null;
                checkHistorySearchHistoryMoreLoading(menuNumber);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
        }
    });
    
    var formData = new FormData();
    formData.append("numbers", numbers.join(","));

    xhr.send(formData);
}



























//검색 기록 삭제
function clearHistorySearchHistory(menuNumber) {
    confirmPopup(getLanguage("history_search_history_option_description:clear"), getLanguage("confirm_popup_subject:delete"), 'requestClearHistorySearchHistory(' + menuNumber + ');');
}
function requestClearHistorySearchHistory(menuNumber) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/search/clear.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                historySearchHistoryLoadNumbers[menuNumber] = null;
                isHistorySearchHistoryMoreLoad[menuNumber] = null;
                historySearchHistoryNoData(menuNumber);

                actionMessage(getLanguage("search_delete_history_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();

    xhr.send(formData);
}






























function historySearchHistoryPause(menuNumber) {
    confirmPopup(getLanguage("history_search_history_option_title:history_pause"), getLanguage("history_search_history_option_description:history_pause"), 'requestHistoryPauseUseSearchHistory(' + menuNumber + ', false);');
}
function historySearchHistoryUse(menuNumber) {
    confirmPopup(getLanguage("history_search_history_option_title:history_use"), getLanguage("history_search_history_option_description:history_use"), 'requestHistoryPauseUseSearchHistory(' + menuNumber + ', true);');
}
function requestHistoryPauseUseSearchHistory(menuNumber, isUse) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    if (isUse == false) {
        xhr.open(method, "/php/history/search/pause.php");
    } else {
        xhr.open(method, "/php/history/search/use.php");
    }
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                if (isUse == false) {
                    historySearchHistoryUseActivate(menuNumber);
                    actionMessage(getLanguage("history_search_history_pause_message"));
                } else {
                    historySearchHistoryPauseActivate(menuNumber);
                    actionMessage(getLanguage("history_search_history_use_message"));
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();

    xhr.send(formData);
}




































function requestHistorySearchHistoryLoad(menuNumber) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/search/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                document.body.scrollTo(0, 0);
                historySearchHistoryLoad(menuNumber, info);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("sort", 0);

    xhr.send(formData);
}


























function historySearchHistoryOptionLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let history_contents = contents.getElementsByClassName("menu_search_history_contents")[0];
    let sort_box = contents.getElementsByClassName("sort_box");

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/search/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);
                let hisyoryInfo = info["info"];

                history_contents.textContent = "";
                historySearchHistoryLoadNumbers[menuNumber] = info["numbers"].split(",");

                if (hisyoryInfo != null && hisyoryInfo.length != 0) {
                    for (let i = 0; i < hisyoryInfo.length; i++) {
                        addHistorySearchHistoryItem(menuNumber, hisyoryInfo[i]);
                
                        let array = historySearchHistoryLoadNumbers[menuNumber];
                        array = array.remove("" + hisyoryInfo[i]["number"]);
                        historySearchHistoryLoadNumbers[menuNumber] = array;
                    }
                    checkHistorySearchHistoryMoreLoading(menuNumber);
                } else {
                    historySearchHistoryNoData(menuNumber);
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("sort", sort_box[0].getAttribute("value"));

    xhr.send(formData);
}











































































function getHistorySearchHistorySortItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("history_search_history_select_sort:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("history_search_history_select_sort:1"),
        "value": 1
    }
    return items;
}