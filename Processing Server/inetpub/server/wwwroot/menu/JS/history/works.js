

var historyWorksLoadNumbers = new Array();

function historyWorksLoad(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let right = contents.getElementsByClassName("menu_history_right")[0];
    right.setAttribute("type", "works");
    right.innerHTML = `
        <div class = "menu_history_right_works_sort">
            <div class = "sort_box md-ripples" popupwidth = "max-content" value = "0" onchange = "historyWorksOptionLoad(` + menuNumber + `);" onclick = "selectList(this, getHistoryWorksSortItems());">
                <div class = "sort_box_title value_title">` + getLanguage("history_works_select_sort:0") + `</div>
                <div class = "sort_box_icon">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.418 6.109c0.272-0.268 0.709-0.268 0.979 0s0.271 0.701 0 0.969l-7.908 7.83c-0.27 0.268-0.707 0.268-0.979 0l-7.908-7.83c-0.27-0.268-0.27-0.701 0-0.969s0.709-0.268 0.979 0l7.419 7.141 7.418-7.141z"></path></svg>
                </div>
            </div>
            <div class = "sort_box md-ripples" popupwidth = "max-content" value = "0" onchange = "historyWorksOptionLoad(` + menuNumber + `);" onclick = "selectList(this, getHistoryWorksTypeItems());">
                <div class = "sort_box_title value_title">` + getLanguage("history_works_select_work_type:0") + `</div>
                <div class = "sort_box_icon">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.418 6.109c0.272-0.268 0.709-0.268 0.979 0s0.271 0.701 0 0.969l-7.908 7.83c-0.27 0.268-0.707 0.268-0.979 0l-7.908-7.83c-0.27-0.268-0.27-0.701 0-0.969s0.709-0.268 0.979 0l7.419 7.141 7.418-7.141z"></path></svg>
                </div>
            </div>
        </div>
        <div class = "work_resizing work_contents"></div>
        <div class = "history_works_contents_loading" style = "padding: 20px; display: none;">
            <div class="showbox"><div class="loader" style="width: 35px;"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="5" stroke-miterlimit="10"></circle></svg></div></div>
        </div>
        <div class = "menu_history_right_works_no_data" style = "display: none;">
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-3094.635,49.5H-3116.5a3,3,0,0,1-3-3V3.5a3,3,0,0,1,3-3h31a3,3,0,0,1,3,3V37.365L-3094.635,49.5Z" transform="translate(3126)" opacity="0.7"/><path d="M3151.333,49.5l12.293-12.293h-9.846a2.517,2.517,0,0,0-1.983.575,2.884,2.884,0,0,0-.464,2.039Z" transform="translate(-3120)" opacity="0.6"/></g></svg>
            <div class = "menu_history_right_works_no_data_title">
                ` + getLanguage("history_works_no_data") + `
            </div>
            <div class = "menu_history_right_works_no_data_description">
                ` + getLanguage("no_data_description") + `
            </div>
        </div>
    `;
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0];
    option_items.innerHTML = `
        <div class = "menu_history_left_wrap_option_item md-ripples" onclick = "clearHistoryWorks(` + menuNumber + `);">
            <div class = "menu_history_left_wrap_option_item_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>
            </div>
            <div class = "menu_history_left_wrap_option_item_right">
                <div class = "menu_history_left_wrap_option_item_right_title">
                    ` + getLanguage("history_works_option_title:clear") + `
                </div>
                <div class = "menu_history_left_wrap_option_item_right_description">
                    ` + getLanguage("history_works_option_description:clear") + `
                </div>
            </div>
        </div>
        <div class = "menu_history_left_wrap_option_item md-ripples" style = "display: none;" onclick = "historyWorksPause(` + menuNumber + `);">
            <div class = "menu_history_left_wrap_option_item_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23 12c0-3.037-1.232-5.789-3.222-7.778s-4.741-3.222-7.778-3.222-5.789 1.232-7.778 3.222-3.222 4.741-3.222 7.778 1.232 5.789 3.222 7.778 4.741 3.222 7.778 3.222 5.789-1.232 7.778-3.222 3.222-4.741 3.222-7.778zM21 12c0 2.486-1.006 4.734-2.636 6.364s-3.878 2.636-6.364 2.636-4.734-1.006-6.364-2.636-2.636-3.878-2.636-6.364 1.006-4.734 2.636-6.364 3.878-2.636 6.364-2.636 4.734 1.006 6.364 2.636 2.636 3.878 2.636 6.364zM11 15v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1v6c0 0.552 0.448 1 1 1s1-0.448 1-1zM15 15v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1v6c0 0.552 0.448 1 1 1s1-0.448 1-1z"></path></svg>
            </div>
            <div class = "menu_history_left_wrap_option_item_right">
                <div class = "menu_history_left_wrap_option_item_right_title">
                    ` + getLanguage("history_works_option_title:history_pause") + `
                </div>
                <div class = "menu_history_left_wrap_option_item_right_description">
                    ` + getLanguage("history_works_option_description:history_pause") + `
                </div>
            </div>
        </div>
        <div class = "menu_history_left_wrap_option_item md-ripples" style = "display: none;" onclick = "historyWorksUse(` + menuNumber + `);">
            <div class = "menu_history_left_wrap_option_item_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM9.984 16.5v-9l6 4.5z"></path></svg>
            </div>
            <div class = "menu_history_left_wrap_option_item_right">
                <div class = "menu_history_left_wrap_option_item_right_title">
                    ` + getLanguage("history_works_option_title:history_use") + `
                </div>
                <div class = "menu_history_left_wrap_option_item_right_description">
                    ` + getLanguage("history_works_option_description:history_use") + `
                </div>
            </div>
        </div>
    `;
    let wrap_line = contents.getElementsByClassName("menu_history_left_wrap_line")[0];
    wrap_line.style.display = null;

    historyWorksLoadNumbers[menuNumber] = info["numbers"].split(",");
    isHistoryWorksMoreLoad[menuNumber] = null;
    
    let worksInfo = info["info"];
    if (worksInfo != null && worksInfo.length != 0) {
        for (let i = 0; i < worksInfo.length; i++) {
            addWorkItemHistoryWorks(menuNumber, worksInfo[i]);
    
            let array = historyWorksLoadNumbers[menuNumber];
            array = array.remove("" + worksInfo[i]["number"]);
            historyWorksLoadNumbers[menuNumber] = array;
        }
        checkHistoryWorksMoreLoading(menuNumber);
    } else {
        historyWorksNoData(menuNumber);
    }

    if (info["worksHistoryUse"] == true) {
        historyWorksPauseActivate(menuNumber);
    } else {
        historyWorksUseActivate(menuNumber);
    }
}
function historyWorksNoData(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_contents = contents.getElementsByClassName("work_contents")[0];
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[0].classList.add("menu_history_left_wrap_option_item_disabled");

    work_contents.textContent = "";
    hideHistoryWorksMoreLoading(menuNumber);

    let no_data = contents.getElementsByClassName("menu_history_right_works_no_data")[0];
    no_data.style.display = "flex";
}
function historyWorksPauseActivate(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[1].style.display = null;
    option_items[2].style.display = "none";
}
function historyWorksUseActivate(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[1].style.display = "none";
    option_items[2].style.display = null;
}
function addWorkItemHistoryWorks(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_contents = contents.getElementsByClassName("work_contents")[0];
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[0].classList.remove("menu_history_left_wrap_option_item_disabled");

    let newEl = document.createElement("div");
    newEl.setAttribute("oncontextmenu", "historyWorksMoreItems(event, " + menuNumber + ", " + info["number"] + ");");
    newEl.setAttribute("work_number", info["number"]);
    newEl.classList.add("visible_element");
    newEl.innerHTML = getHtmlWork(info);
    work_contents.appendChild(newEl);

    //데이터 없음 숨기기
    let no_data = contents.getElementsByClassName("menu_history_right_works_no_data")[0];
    no_data.style.display = "none";
}

function showHistoryWorksMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("history_works_contents_loading")[0];
    loading.style.display = "block";
}
function hideHistoryWorksMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("history_works_contents_loading")[0];
    loading.style.display = "none";
}
function checkHistoryWorksMoreLoading(menuNumber) {
    if (historyWorksLoadNumbers[menuNumber] == null || historyWorksLoadNumbers[menuNumber].length == 0) {
        hideHistoryWorksMoreLoading(menuNumber);
        historyWorksLoadNumbers[menuNumber] = null;
    } else {
        showHistoryWorksMoreLoading(menuNumber);
    }
}

let isHistoryWorksMoreLoad = new Array();

function checkHistoryWorksLoad() {
    if (getCurrentMenuName() == "history") {
        let right = contents.getElementsByClassName("menu_history_right")[0];
        if (right.getAttribute("type") == "works") {
            let boxSize = 75;

            let scrollPercent = ((document.documentElement.scrollTop + window.innerHeight) / (document.documentElement.scrollHeight - boxSize)) * 100;
            if (scrollPercent >= 100) {
                let number = getCurrentMenuNumber();
                if (isHistoryWorksMoreLoad[number] == null) {
                    isHistoryWorksMoreLoad[number] = true;
                    moreLoadHistoryWorks(number);
                }
            }
        }
    }
}
addEventListener("scroll", checkHistoryWorksLoad);
addEventListener("resize", checkHistoryWorksLoad);
addEventListener("focus", checkHistoryWorksLoad);

function moreLoadHistoryWorks(menuNumber) {
    if (historyWorksLoadNumbers[menuNumber] == null || historyWorksLoadNumbers[menuNumber] == '' || historyWorksLoadNumbers[menuNumber].length == 0) {
        historyWorksLoadNumbers[menuNumber] = null;
        isHistoryWorksMoreLoad[menuNumber] = null;
        return;
    }

    let numbers = historyWorksLoadNumbers[menuNumber];
    let numbersMaxCount = (numbers.length >= 24) ? 24 : numbers.length;
    numbers = numbers.splice(0, numbersMaxCount);

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work/getInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                for (let i = 0; i < info.length; i++) {
                    addWorkItemHistoryWorks(menuNumber, info[i]);

                    let array = historyWorksLoadNumbers[menuNumber];
                    array = array.remove("" + info[i]["number"]);
                    historyWorksLoadNumbers[menuNumber] = array;
                }

                isHistoryWorksMoreLoad[menuNumber] = null;
                checkHistoryWorksMoreLoading(menuNumber);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
        }
    });
    
    var formData = new FormData();
    formData.append("lang", userLanguage);
    formData.append("numbers", numbers.join(","));

    xhr.send(formData);
}








































function historyWorksOptionLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_contents = contents.getElementsByClassName("work_contents")[0];
    let sort_box = contents.getElementsByClassName("sort_box");

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/works/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);
                let worksInfo = info["info"];

                work_contents.textContent = "";
                historyWorksLoadNumbers[menuNumber] = info["numbers"].split(",");

                if (worksInfo != null && worksInfo.length != 0) {
                    for (let i = 0; i < worksInfo.length; i++) {
                        addWorkItemHistoryWorks(menuNumber, worksInfo[i]);
                
                        let array = historyWorksLoadNumbers[menuNumber];
                        array = array.remove("" + worksInfo[i]["number"]);
                        historyWorksLoadNumbers[menuNumber] = array;
                    }
                    checkHistoryWorksMoreLoading(menuNumber);
                } else {
                    historyWorksNoData(menuNumber);
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("lang", userLanguage);
    formData.append("sort", sort_box[0].getAttribute("value"));
    formData.append("workType", sort_box[1].getAttribute("value"));

    xhr.send(formData);
}













function historyWorksMoreItems(event, menuNumber, workNumber) {
    let slot = new Array();

    slot[slot.length] = {
        'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>',
        'title': getLanguage("history_works_more_item:delete"),
        'onclick': 'requestHistoryWorksDelete(' + menuNumber + ', ' + workNumber + ');',
        'class': 'more_button_item_delete',
    };

    let items = getMoreItemsWorkElement(workNumber);
    for (let i = 0; i < items.length; i++) {
        slot[slot.length] = items[i];
    }

    moreButton(null, slot, event);
}
function requestHistoryWorksDelete(menuNumber, workNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let work_contents = contents.getElementsByClassName("work_contents")[0];

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/works/delete.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                let children = work_contents.children;
                for (let i = 0; i < children.length; i++) {
                    if (children[i].getAttribute("work_number") == workNumber) {
                        children[i].remove();
                    }
                }

                //체크
                if (children.length == 0 && (historyWorksLoadNumbers[menuNumber] == null || historyWorksLoadNumbers[menuNumber].length == 0)) {
                    historyWorksNoData(menuNumber);
                }

                actionMessage(getLanguage("history_works_delete_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("workNumber", workNumber);

    xhr.send(formData);
}






























function getHistoryWorksSortItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("history_works_select_sort:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("history_works_select_sort:1"),
        "value": 1
    }
    return items;
}
function getHistoryWorksTypeItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("popup_search_filter_value_work_type:0"),
        "icon": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M25,700a1.5,1.5,0,0,1,.844.26l23.5,16A1.5,1.5,0,0,1,49.4,718.7L25.9,736.2a1.5,1.5,0,0,1-1.792,0L.6,718.7a1.5,1.5,0,0,1,.052-2.443l23.5-16A1.5,1.5,0,0,1,25,700Zm20.915,17.555L25,703.315,4.085,717.555,25,733.13Z" transform="translate(0 -700)"/><path d="M24.953,736.551a1.5,1.5,0,0,1-.9-.3L.6,718.754a1.5,1.5,0,0,1,1.794-2.4l22.558,16.832,22.65-16.834a1.5,1.5,0,1,1,1.789,2.408l-23.547,17.5A1.5,1.5,0,0,1,24.953,736.551Z" transform="translate(0 -686.551)"/></g></svg>',
        "value": 0
    }
    items[1] = {
        "title": getLanguage("work_settings_contents_type:0"),
        "icon": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-72.583-761.2c-2.946-3.826-6.227-5.765-9.755-5.765h0c-6.133,0-11.229,5.774-11.281,5.833a1.5,1.5,0,0,1-1.126.517h-.006a1.5,1.5,0,0,1-1.124-.506c-3.431-3.877-7.015-5.844-10.651-5.844h0c-6.23,0-10.743,5.713-10.788,5.771a1.5,1.5,0,0,1-1.67.5A1.5,1.5,0,0,1-120-762.116v-30.063a1.5,1.5,0,0,1,.318-.922c3.574-4.578,7.7-6.9,12.273-6.9h0c5.73,0,10.491,3.7,12.606,5.656C-91.165-798.1-87.269-800-83.2-800c7.569,0,12.778,6.622,13,6.9a1.5,1.5,0,0,1,.313.917v30.063a1.5,1.5,0,0,1-1.017,1.42,1.5,1.5,0,0,1-.483.08A1.5,1.5,0,0,1-72.583-761.2Zm-20.812-4.26c2.423-1.988,6.408-4.5,11.056-4.5h0a13.728,13.728,0,0,1,9.444,3.972v-25.638a19,19,0,0,0-2.779-2.56A12.553,12.553,0,0,0-83.2-797c-3.485,0-6.913,1.867-10.191,5.549ZM-117-791.653v25.91a16.593,16.593,0,0,1,10.471-4.223h0a15.532,15.532,0,0,1,10.132,4.125v-25.873c-1.474-1.438-5.9-5.285-11.013-5.285h0C-110.882-797-114.105-795.2-117-791.653Z" transform="translate(119.895 805.308)"/></g></svg>',
        "value": 1
    }
    items[2] = {
        "title": getLanguage("work_settings_contents_type:1"),
        "icon": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M3,3H3V18H47V3H3M3,0H47a3,3,0,0,1,3,3V18a3,3,0,0,1-3,3H3a3,3,0,0,1-3-3V3A3,3,0,0,1,3,0Z"/><path d="M1.5,925H27a1.5,1.5,0,0,1,1.329,2.195l-11.5,22A1.5,1.5,0,0,1,15.5,950H1.508a1.5,1.5,0,0,1-1.5-1.5L0,926.5A1.5,1.5,0,0,1,1.5,925Zm23.023,3H3l.007,19H14.592Z" transform="translate(0 -900)"/><path d="M1.5,927H26a1.5,1.5,0,0,1,1.33,2.194l-11.5,22.03a1.5,1.5,0,0,1-1.33.806h-.006l-13.5-.053A1.5,1.5,0,0,1-.5,950.442L0,928.466A1.5,1.5,0,0,1,1.5,927Zm22.025,3H2.966l-.432,18.982,11.058.044Z" transform="translate(49.5 977) rotate(180)"/></g></svg>',
        "value": 2
    }
    items[3] = {
        "title": getLanguage("work_settings_contents_type:2"),
        "icon": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M121.5,500h47a1.5,1.5,0,0,1,1.5,1.5V516a1.5,1.5,0,0,1-1.218,1.473l-47,9A1.5,1.5,0,0,1,120,525V501.5A1.5,1.5,0,0,1,121.5,500Zm45.5,3H123v20.186l44-8.426Z" transform="translate(-120 -500)"></path><path d="M121.5,500h47a1.5,1.5,0,0,1,1.5,1.5V516a1.5,1.5,0,0,1-1.218,1.473l-47,9A1.5,1.5,0,0,1,120,525V501.5A1.5,1.5,0,0,1,121.5,500Zm45.5,3H123v20.186l44-8.426Z" transform="translate(170 550) rotate(180)"></path></g></svg>',
        "value": 3
    }
    items[4] = {
        "title": getLanguage("work_settings_contents_type:3"),
        "icon": '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M6.712,1000a1.5,1.5,0,0,1,.745.2l41.052,23.5a1.5,1.5,0,0,1,0,2.6L7.458,1049.8a1.5,1.5,0,0,1-2.245-1.3v-47a1.5,1.5,0,0,1,1.5-1.5Zm38.032,25L8.212,1004.087v41.826Z" transform="translate(0.736 -1000)"/></g></svg>',
        "value": 3
    }
    return items;
}
























































//최근 기록 삭제
function clearHistoryWorks(menuNumber) {
    confirmPopup(getLanguage("history_works_option_description:clear"), getLanguage("confirm_popup_subject:delete"), 'requestClearHistoryWorks(' + menuNumber + ');');
}
function requestClearHistoryWorks(menuNumber) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/works/clear.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                historyWorksLoadNumbers[menuNumber] = null;
                isHistoryWorksMoreLoad[menuNumber] = null;
                historyWorksNoData(menuNumber);

                actionMessage(getLanguage("history_works_delete_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();

    xhr.send(formData);
}















function historyWorksPause(menuNumber) {
    confirmPopup(getLanguage("history_works_option_title:history_pause"), getLanguage("history_works_option_description:history_pause"), 'requestHistoryPauseUseWorks(' + menuNumber + ', false);');
}
function historyWorksUse(menuNumber) {
    confirmPopup(getLanguage("history_works_option_title:history_use"), getLanguage("history_works_option_description:history_use"), 'requestHistoryPauseUseWorks(' + menuNumber + ', true);');
}
function requestHistoryPauseUseWorks(menuNumber, isUse) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    if (isUse == false) {
        xhr.open(method, "/php/history/works/pause.php");
    } else {
        xhr.open(method, "/php/history/works/use.php");
    }
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                if (isUse == false) {
                    historyWorksUseActivate(menuNumber);
                    actionMessage(getLanguage("history_works_pause_message"));
                } else {
                    historyWorksPauseActivate(menuNumber);
                    actionMessage(getLanguage("history_works_use_message"));
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();

    xhr.send(formData);
}





















































































































function requestHistoryWorksLoad(menuNumber) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/works/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                document.body.scrollTo(0, 0);
                historyWorksLoad(menuNumber, info);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("sort", 0);
    formData.append("workType", 0);

    xhr.send(formData);
}