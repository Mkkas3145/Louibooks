

var menuHistoryPaymentHistoryLoadNumbers = new Array();

function menuHistoryPaymentHistoryLoad(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let right = contents.getElementsByClassName("menu_history_right")[0];
    right.setAttribute("type", "payment_history");
    right.innerHTML = `
        <div class = "menu_history_payment_history">
            <div class = "menu_history_payment_history_sort">
                <div class = "sort_box md-ripples" popupwidth = "max-content" value = "0" onchange = "historyPaymentHistoryOptionLoad(` + menuNumber + `);" onclick = "selectList(this, getHistoryPaymentHistorySortItems());">
                    <div class = "sort_box_title value_title">` + getLanguage("history_search_history_select_sort:0") + `</div>
                    <div class = "sort_box_icon">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.418 6.109c0.272-0.268 0.709-0.268 0.979 0s0.271 0.701 0 0.969l-7.908 7.83c-0.27 0.268-0.707 0.268-0.979 0l-7.908-7.83c-0.27-0.268-0.27-0.701 0-0.969s0.709-0.268 0.979 0l7.419 7.141 7.418-7.141z"></path></svg>
                    </div>
                </div>
            </div>
            <div class = "menu_history_payment_history_items"></div>
            <div class = "menu_history_payment_history_contents_loading" style = "padding: 20px; display: none;">
                <div class="showbox"><div class="loader" style="width: 35px;"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="5" stroke-miterlimit="10"></circle></svg></div></div>
            </div>
            <div class = "menu_history_payment_history_no_data" style = "display: none;">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-3094.635,49.5H-3116.5a3,3,0,0,1-3-3V3.5a3,3,0,0,1,3-3h31a3,3,0,0,1,3,3V37.365L-3094.635,49.5Z" transform="translate(3126)" opacity="0.7"/><path d="M3151.333,49.5l12.293-12.293h-9.846a2.517,2.517,0,0,0-1.983.575,2.884,2.884,0,0,0-.464,2.039Z" transform="translate(-3120)" opacity="0.6"/></g></svg>
                <div class = "menu_history_payment_history_no_data_title">
                    ` + getLanguage("menu_history_payment_history_no_data") + `
                </div>
                <div class = "menu_history_payment_history_no_data_description">
                    ` + getLanguage("no_data_description") + `
                </div>
            </div>
        </div>
    `;
    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0];
    option_items.innerHTML = `
        <div class = "menu_history_left_wrap_option_item md-ripples" onclick = "AllDeleteMenuHistoryPaymentHistory(` + menuNumber + `);">
            <div class = "menu_history_left_wrap_option_item_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>
            </div>
            <div class = "menu_history_left_wrap_option_item_right">
                <div class = "menu_history_left_wrap_option_item_right_title">
                    ` + getLanguage("menu_history_payment_history_option_title:clear") + `
                </div>
                <div class = "menu_history_left_wrap_option_item_right_description">
                    ` + getLanguage("menu_history_payment_history_option_description:clear") + `
                </div>
            </div>
        </div>
    `;
    let wrap_line = contents.getElementsByClassName("menu_history_left_wrap_line")[0];
    wrap_line.style.display = null;

    menuHistoryPaymentHistoryLoadNumbers[menuNumber] = info["numbers"].split(",");
    isMenuHistoryPaymentHistoryMoreLoad[menuNumber] = null;

    let paymentHistoryInfo = info["info"];
    if (paymentHistoryInfo != null && paymentHistoryInfo.length != 0) {
        for (let i = 0; i < paymentHistoryInfo.length; i++) {
            addMenuHistoryPaymentHistoryItem(menuNumber, paymentHistoryInfo[i]);
    
            let array = menuHistoryPaymentHistoryLoadNumbers[menuNumber];
            array = array.remove("" + paymentHistoryInfo[i]["number"]);
            menuHistoryPaymentHistoryLoadNumbers[menuNumber] = array;
        }
        checkMenuHistoryPaymentHistoryMoreLoading(menuNumber);
    } else {
        menuHistoryPaymentHistoryNoData(menuNumber);
    }
}
function menuHistoryPaymentHistoryNoData(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let history_items = contents.getElementsByClassName("menu_history_payment_history_items")[0];
    history_items.textContent = "";
    hideMenuHistoryPaymentHistoryMoreLoading(menuNumber);

    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[0].classList.add("menu_history_left_wrap_option_item_disabled");

    let no_data = contents.getElementsByClassName("menu_history_payment_history_no_data")[0];
    no_data.style.display = "flex";
}
function addMenuHistoryPaymentHistoryItem(menuNumber, info) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_history_payment_history_items")[0];

    let option_items = contents.getElementsByClassName("menu_history_left_wrap_option_items")[0].children;
    option_items[0].classList.remove("menu_history_left_wrap_option_item_disabled");

    //데이터 없음 숨기기
    let no_data = contents.getElementsByClassName("menu_history_payment_history_no_data")[0];
    no_data.style.display = "none";

    let newEl = document.createElement("div");
    newEl.setAttribute("number", info["number"]);
    newEl.classList.add("menu_history_payment_history_item");
    newEl.classList.add("visible_element");
    newEl.classList.add("variable_element");
    newEl.innerHTML = getPaymentHistoryElement(info).outerHTML;

    items.appendChild(newEl);
}




























function showMenuHistoryPaymentHistoryMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("menu_history_payment_history_contents_loading")[0];
    loading.style.display = "block";
}
function hideMenuHistoryPaymentHistoryMoreLoading(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let loading = contents.getElementsByClassName("menu_history_payment_history_contents_loading")[0];
    loading.style.display = "none";
}
function checkMenuHistoryPaymentHistoryMoreLoading(menuNumber) {
    if (menuHistoryPaymentHistoryLoadNumbers[menuNumber] == null || menuHistoryPaymentHistoryLoadNumbers[menuNumber].length == 0) {
        hideMenuHistoryPaymentHistoryMoreLoading(menuNumber);
        menuHistoryPaymentHistoryLoadNumbers[menuNumber] = null;
    } else {
        showMenuHistoryPaymentHistoryMoreLoading(menuNumber);
    }
}

let isMenuHistoryPaymentHistoryMoreLoad = new Array();

function checkMenuHistoryPaymentHistoryLoad() {
    if (getCurrentMenuName() == "history") {
        let right = contents.getElementsByClassName("menu_history_right")[0];
        if (right.getAttribute("type") == "payment_history") {
            let boxSize = 75;

            let scrollPercent = ((document.documentElement.scrollTop + window.innerHeight) / (document.documentElement.scrollHeight - boxSize)) * 100;
            if (scrollPercent >= 100) {
                let number = getCurrentMenuNumber();
                if (isMenuHistoryPaymentHistoryMoreLoad[number] == null) {
                    isMenuHistoryPaymentHistoryMoreLoad[number] = true;
                    moreLoadMenuHistoryPaymentHistory(number);
                }
            }
        }
    }
}
addEventListener("scroll", checkMenuHistoryPaymentHistoryLoad);
addEventListener("resize", checkMenuHistoryPaymentHistoryLoad);
addEventListener("focus", checkMenuHistoryPaymentHistoryLoad);

function moreLoadMenuHistoryPaymentHistory(menuNumber) {
    if (menuHistoryPaymentHistoryLoadNumbers[menuNumber] == null || menuHistoryPaymentHistoryLoadNumbers[menuNumber] == '' || menuHistoryPaymentHistoryLoadNumbers[menuNumber].length == 0) {
        menuHistoryPaymentHistoryLoadNumbers[menuNumber] = null;
        isMenuHistoryPaymentHistoryMoreLoad[menuNumber] = null;
        return;
    }

    let numbers = menuHistoryPaymentHistoryLoadNumbers[menuNumber];
    let numbersMaxCount = (numbers.length >= 20) ? 20 : numbers.length;
    numbers = numbers.splice(0, numbersMaxCount);

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/payment_history/getInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                for (let i = 0; i < info.length; i++) {
                    addMenuHistoryPaymentHistoryItem(menuNumber, info[i]);

                    let array = menuHistoryPaymentHistoryLoadNumbers[menuNumber];
                    array = array.remove("" + info[i]["number"]);
                    menuHistoryPaymentHistoryLoadNumbers[menuNumber] = array;
                }

                isMenuHistoryPaymentHistoryMoreLoad[menuNumber] = null;
                checkMenuHistoryPaymentHistoryMoreLoading(menuNumber);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
        }
    });
    
    var formData = new FormData();
    formData.append("lang", userLanguage);
    formData.append("numbers", numbers.join(","));

    xhr.send(formData);
}




































































function AllDeleteMenuHistoryPaymentHistory(menuNumber) {
    confirmPopup(getLanguage("menu_history_payment_history_option_title:clear"), getLanguage("menu_history_payment_history_option_description:clear"), 'requestAllDeleteMenuHistoryPaymentHistory(' + menuNumber + ');');
}
function requestAllDeleteMenuHistoryPaymentHistory(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);

    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/payment_history/clear.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                //데이터 없음
                menuHistoryPaymentHistoryNoData(menuNumber);
                
                //액션 메세지
                actionMessage(getLanguage("menu_history_payment_history_clear_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    xhr.send(formData);
}






























































function requestMenuHistoryPaymentHistoryLoad(menuNumber) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/payment_history/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                menuHistoryPaymentHistoryLoad(menuNumber, info);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("lang", userLanguage);
    formData.append("sort", 0);

    xhr.send(formData);
}

















































function historyPaymentHistoryOptionLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("menu_history_payment_history_items")[0];
    let sort_box = contents.getElementsByClassName("sort_box");

    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/history/payment_history/getInfoNumbers.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);
                let hisyoryInfo = info["info"];

                items.textContent = "";
                menuHistoryPaymentHistoryLoadNumbers[menuNumber] = info["numbers"].split(",");

                if (hisyoryInfo != null && hisyoryInfo.length != 0) {
                    for (let i = 0; i < hisyoryInfo.length; i++) {
                        addMenuHistoryPaymentHistoryItem(menuNumber, hisyoryInfo[i]);
                
                        let array = menuHistoryPaymentHistoryLoadNumbers[menuNumber];
                        array = array.remove("" + hisyoryInfo[i]["number"]);
                        menuHistoryPaymentHistoryLoadNumbers[menuNumber] = array;
                    }
                    checkMenuHistoryPaymentHistoryMoreLoading(menuNumber);
                } else {
                    menuHistoryPaymentHistoryNoData(menuNumber);
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });

    var formData = new FormData();
    formData.append("sort", sort_box[0].getAttribute("value"));

    xhr.send(formData);
}







































function getHistoryPaymentHistorySortItems() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("menu_history_payment_history_select_sort:0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("menu_history_payment_history_select_sort:1"),
        "value": 1
    }
    return items;
}