

function imageFormatEditorLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let editor_json = contents.getElementsByClassName("editor_json")[0];
    let json = JSON.parse(editor_json.innerHTML);

    let lines = json["lines"];
    for (let i = 0; i < lines.length; i++) {
        addItemImageFormatEditor(menuNumber, lines[i], false);
    }
    checkImageFormatEditorEmpty(menuNumber);
}
function checkImageFormatEditorEmpty(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("image_format_editor_contents_items")[0];
    let item = items.getElementsByClassName("image_format_editor_contents_item");

    if (item.length == 0) {
        items.innerHTML = `
            <div class = "image_format_editor_contents_items_empty">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-3094.635,49.5H-3116.5a3,3,0,0,1-3-3V3.5a3,3,0,0,1,3-3h31a3,3,0,0,1,3,3V37.365L-3094.635,49.5Z" transform="translate(3126)" opacity="0.7"/><path d="M3151.333,49.5l12.293-12.293h-9.846a2.517,2.517,0,0,0-1.983.575,2.884,2.884,0,0,0-.464,2.039Z" transform="translate(-3120)" opacity="0.6"/></g></svg>
                <div class = "menu_home_no_data_title">
                    ` + getLanguage("image_format_editor_contents_items_empty_title") + `
                </div>
                <div class = "menu_home_no_data_description">
                    ` + getLanguage("image_format_editor_contents_items_empty_description") + `
                </div>
                <div class = "image_format_editor_contents_items_empty_button md-ripples" onclick = "imageFormatEditorPopupOpen();">
                    <!-- Generated by IcoMoon.io -->
                    <svg style="transform: rotate(180deg);" version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 2c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v14c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h14c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-14c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879zM10 20v-16h9c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v14c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293zM8 4v16h-3c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-14c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293z"></path></svg>
                    ` + getLanguage("image_format_editor_contents_items_empty_button"); + `
                </div>
            </div>
        `;
    } else {
        let empty = items.getElementsByClassName("image_format_editor_contents_items_empty");
        if (empty.length != 0) {
            empty[0].remove();
        }
    }
}

function addItemImageFormatEditor(menuNumber, info, isAni) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("image_format_editor_contents_items")[0];

    let newEl = document.createElement("div");
    newEl.classList.add("image_format_editor_contents_item");
    newEl.classList.add("img_wrap");
    //newEl.classList.add("visible_element");
    //newEl.classList.add("variable_element");
    newEl.setAttribute("info", JSON.stringify(info));

    let resolutions = info["resolutions"];
    let maxIndex = (resolutions.length - 1);

    //이미지 비율
    let width = resolutions[maxIndex]["width"];
    let height = resolutions[maxIndex]["height"];
    let ratio = width / height;

    newEl.innerHTML = `
        <div class = "image_enhancement" style = "aspect-ratio: ` + ratio + `;">
            <img src = "` + resolutions[0]["url"] + `" quality = "low" onload = "imageLoad(event);">
            <img src = "` + resolutions[maxIndex]["url"] + `" quality = "original" onload = "imageLoad(event);">
        </div>
    `;

    items.appendChild(newEl);

    //체크
    checkImageFormatEditorEmpty(menuNumber);
}

function getImageFormatJson(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("image_format_editor_contents_items")[0];
    if (items != null) {
        let item = items.getElementsByClassName("image_format_editor_contents_item");

        let data = {};
    
        let lines = new Array();
        for (let i = 0; i < item.length; i++) {
            lines[lines.length] = JSON.parse(item[i].getAttribute("info"));
        }
        data["lines"] = lines;
    
        return data;
    }
}

function checkImageFormatEditorSaveButton(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let header_right_save = contents.getElementsByClassName("image_format_editor_header_right_save")[0];

    if (header_right_save != null) {
        if (isImageFormatSavePossible(menuNumber) == false) {
            header_right_save.classList.remove("image_format_editor_header_right_save_activate");
        } else {
            header_right_save.classList.add("image_format_editor_header_right_save_activate");
        }
    }
}

setInterval(() => {
    if (getCurrentMenuName() == "image_format_editor") {
        checkImageFormatEditorSaveButton(getCurrentMenuNumber());
    }
}, 100);

function isImageFormatSavePossible(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let current_json = JSON.stringify(getImageFormatJson(menuNumber));
    let editor_json = JSON.stringify(JSON.parse(contents.getElementsByClassName("editor_json")[0].innerHTML));
    if (current_json.trim() == editor_json.trim()) {
        return false;
    } else {
        return true;
    }
}


function imageFormatSaveKeydown(event) {
    if (getCurrentMenuName() == "image_format_editor") {
        if (event.ctrlKey && event.keyCode == 83) {
            let menuNumber = getCurrentMenuNumber();
            if (isImageFormatSavePossible(menuNumber) == true) {
                imageFormatEditorSave(menuNumber);
            } else {
                actionMessage(getLanguage("save_no_change"));
            }
            event.preventDefault();
        }
    }
}
window.addEventListener("keydown", imageFormatSaveKeydown);


function imageFormatEditorSave(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let number = document.getElementById("image_format_editor_number_" + menuNumber).value;
    let json = JSON.stringify(getImageFormatJson(menuNumber));
    
    loading();

    //요청
    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/cloud/save.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                let editor_json = contents.getElementsByClassName("editor_json")[0];
                editor_json.innerText = json;

                if (xhrHtml == "max cloud size") {
                    actionMessage(getLanguage("cloud_max_cloud_size"));
                } else if (xhrHtml == "saved") {
                    actionMessage(getLanguage("save_saved"));
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("number", number);
    formData.append("data", json);
    
    xhr.send(formData);
}









function imageFormatEditorPopupOpen() {
    let editor_popup = document.getElementsByClassName("image_format_editor_popup")[0];
    let editor_popup_box = document.getElementsByClassName("image_format_editor_popup_box")[0];

    editor_popup.style.display = "flex";
    editor_popup_box.style.left = editor_popup_box.clientWidth + "px";
    editor_popup.style.animation = "showImageFormatEditorPopup 0.2s forwards";
    function callback() {
        editor_popup_box.style.left = '0px';
    }
    window.requestAnimationFrame(callback);

    //
    let popup_items = editor_popup_box.getElementsByClassName("image_format_editor_popup_box_items")[0];
    let json = getImageFormatJson(getCurrentMenuNumber());
    let lines = json["lines"];
    for (let i = 0; i < lines.length; i++) {
        let info = lines[i];
        let resolutions = info["resolutions"];

        let index = 0; //256px
        if (resolutions.length >= 3) {
            index = 2; //480px
        } else if (resolutions.length >= 2) {
            index = 1; //640px
        }

        let newEl = document.createElement("div");
        newEl.classList.add('image_format_editor_popup_box_item');
        newEl.classList.add('md-ripples');
        newEl.setAttribute("order", i);
        newEl.setAttribute("oncontextmenu", "imageFormatEditorPopupItemMoreButton(this, event);");
        newEl.setAttribute("onclick", "moveItemImageFormatEditor(this);");
        newEl.innerHTML = `
            <div class = "image_format_editor_popup_box_item_image img_wrap">
                <img src = "` + resolutions[index]["url"] + `" width = "` + resolutions[index]["width"] + `" height = "` + resolutions[index]["height"] + `" onload = "imageLoad(event);">
            </div>
            <div class = "image_format_editor_popup_box_item_bottom">
                <div class = "image_format_editor_popup_box_item_bottom_title">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 13h6v6c0 0.552 0.448 1 1 1s1-0.448 1-1v-6h6c0.552 0 1-0.448 1-1s-0.448-1-1-1h-6v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1v6h-6c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path></svg>
                    <span>` + (i + 1) + `</span>
                </div>
                <div class = "image_format_editor_popup_box_item_bottom_quality">
                    ` + getMaxQualityImageFormat(info)["name"] + `
                </div>
            </div>
        `;
        popup_items.appendChild(newEl);
    }

    //
    checkImageFormatEditorPopupEmpty();
}
function checkImageFormatEditorPopupEmpty() {
    let editor_popup_box = document.getElementsByClassName("image_format_editor_popup_box")[0];

    let popup_items = editor_popup_box.getElementsByClassName("image_format_editor_popup_box_items")[0];
    let item = popup_items.getElementsByClassName("image_format_editor_popup_box_item");

    if (item.length == 0) {
        popup_items.innerHTML = `
            <div class = "image_format_editor_popup_box_items_empty">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-3094.635,49.5H-3116.5a3,3,0,0,1-3-3V3.5a3,3,0,0,1,3-3h31a3,3,0,0,1,3,3V37.365L-3094.635,49.5Z" transform="translate(3126)" opacity="0.7"/><path d="M3151.333,49.5l12.293-12.293h-9.846a2.517,2.517,0,0,0-1.983.575,2.884,2.884,0,0,0-.464,2.039Z" transform="translate(-3120)" opacity="0.6"/></g></svg>
                <div class = "menu_home_no_data_title">
                    ` + getLanguage("image_format_editor_popup_items_empty_title") + `
                </div>
                <div class = "menu_home_no_data_description">
                    ` + getLanguage("image_format_editor_popup_items_empty_description") + `
                </div>
            </div>
        `;
    }
}

var isCancelImageFormatEditorPopupClose = false;
function imageFormatEditorPopupClose() {
    if (isCancelImageFormatEditorPopupClose == false) {
        let editor_popup = document.getElementsByClassName("image_format_editor_popup")[0];
        let editor_popup_box = document.getElementsByClassName("image_format_editor_popup_box")[0];
        let items = editor_popup_box.getElementsByClassName("image_format_editor_popup_box_items")[0];
    
        editor_popup_box.style.left = "0px";
        editor_popup.style.animation = "hideImageFormatEditorPopup 0.2s forwards";
        function callback() {
            editor_popup_box.style.left = editor_popup_box.clientWidth + "px";
    
            setTimeout(() => {
                editor_popup_box.style.left = null;
                editor_popup.style.display = null;

                items.textContent = '';
            }, 200);
        }
        window.requestAnimationFrame(callback);
    } else {
        isCancelImageFormatEditorPopupClose = false;
    }
}





function imageFormatUploadButton() {
    let menuNumber = getCurrentMenuNumber();
    let contents = document.getElementById("contents_" + menuNumber);
    let input = contents.getElementsByClassName("image_format_image_input")[0];
    input.value = '';
    input.click();
}

function imageFormatUpload(input, menuNumber) {
    let files = input.files;

    let info = new Array();
    for (let i = 0; i < files.length; i++) {
        info[info.length] = {
            'name': files[i].name,
            'size': files[i].size,
            'type': files[i].type,
            'lastModified': files[i].lastModified,
        };
    }

    imageFormatEditorPopupClose();
    createLoadingImageFormat(info);

    xhrRequestImageFormatUpload = new Array();
    for (let i = 0; i < files.length; i++) {
        requestImageFormatUpload(files[i], menuNumber);
    }
}

var xhrRequestImageFormatUpload = new Array();

function requestImageFormatUpload(file, menuNumber) {
    let uid = file.name + "," + file.size + "," + file.type + "," + file.lastModified;

    let item = getItemElementLoadingImageFormat(uid);
    let state = item.getElementsByClassName("image_format_editor_upload_loading_box_contents_item_right_state")[0];
    item.setAttribute("state", "uploading");
    state.innerHTML = getLanguage("image_format_editor_upload_loading_contents_item:uploading").replaceAll("{R:0}", 0);
    checkImageFormatUploadProgress();

    const xhr = new XMLHttpRequest();
    xhrRequestImageFormatUpload[xhrRequestImageFormatUpload.length] = xhr;
    const method = "POST";
    xhr.timeout = 86400000; //1일
    
    xhr.open(method, "https://img.louibooks.com/upload.php");

    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status != 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let json = JSON.parse(xhrHtml);
                
                item.setAttribute("state", "uploaded");
                state.innerHTML = getLanguage("image_format_editor_upload_loading_contents_item:uploaded").replaceAll("{R:0}", getMaxQualityImageFormat(json)["name"]);
                item.setAttribute("info", JSON.stringify(json));

                checkImageFormatUploadProgress();
            } else {
                if (status != 0) {
                    if (status == 504) {
                        //시간 초과
                        serverResponseErrorMessage(0);
                    } else {
                        //오류 발생
                        serverResponseErrorMessage(1);
                    }
                }
            }
        }
    });

    xhr.upload.addEventListener('progress', function (event) {
        let progress = event.loaded / event.total;
        if (progress >= 1) {
            state.innerHTML = getLanguage("image_format_editor_upload_loading_contents_item:processing");
        } else {
            state.innerHTML = getLanguage("image_format_editor_upload_loading_contents_item:uploading").replaceAll("{R:0}", Math.floor(progress * 100));
        }
        item.setAttribute("progress", progress);

        checkImageFormatUploadProgress();
    });
    
    var formData = new FormData();
    formData.append("imgFile", file);
    formData.append("type", "image_format");

    xhr.send(formData);
}


function checkImageFormatUploadProgress() {
    let upload_loading_box = document.getElementsByClassName("image_format_editor_upload_loading_box")[0];
    let progress_text = upload_loading_box.getElementsByClassName("image_format_editor_upload_loading_box_top_right_progress_text")[0];
    let items = upload_loading_box.getElementsByClassName("image_format_editor_upload_loading_box_contents_item");

    let progress = 0;
    let uploaded = 0;
    for (let i = 0; i < items.length; i++) {
        let item_progress = items[i].getElementsByClassName("image_format_editor_upload_loading_box_contents_item_right_progress")[0];
        let item_progress_wrap = items[i].getElementsByClassName("image_format_editor_upload_loading_box_contents_item_right_progress_wrap")[0];
        let progress_float = Number.parseFloat(items[i].getAttribute("progress"));
        let item_state = items[i].getAttribute("state");

        progress += progress_float;
        if (item_state == "uploaded") {
            uploaded ++;
        }

        if (item_state != "uploading") {
            item_progress_wrap.style.height = "0px";
            item_progress_wrap.style.marginTop = "0px";
            item_progress_wrap.style.visibility = "hidden";
        } else {
            if (progress_float >= 1) {
                item_progress_wrap.setAttribute("processing", true);
            }
            item_progress_wrap.style.height = null;
            item_progress_wrap.style.marginTop = null;
            item_progress_wrap.style.visibility = null;
        }
        item_progress.style.width = (progress_float * 100) + "%";
    }
    progress = progress / items.length;

    if (progress >= 1) {
        progress_text.innerHTML = getLanguage("image_format_editor_upload_loading_top_right:processing").replaceAll("{R:0}", Math.floor((uploaded / items.length) * 100));
    } else {
        progress_text.innerHTML = getLanguage("image_format_editor_upload_loading_top_right:uploading").replaceAll("{R:0}", Math.floor(progress * 100));
    }

    if ((items.length - uploaded) == 0 && progress >= 1) {
        let menuNumber = getCurrentMenuNumber();
        for (let i = 0; i < items.length; i++) {
            let info = JSON.parse(items[i].getAttribute("info"));
            addItemImageFormatEditor(menuNumber, info);
        }
        closeLoadingImageFormat();
        actionMessage(getLanguage("upload_image"));
    }
}

function createLoadingImageFormat(info) {
    let upload_loading = document.getElementsByClassName("image_format_editor_upload_loading")[0];
    let upload_loading_box = document.getElementsByClassName("image_format_editor_upload_loading_box")[0];

    upload_loading.style.display = "flex";
    upload_loading.style.animation = "showImageFormatEditorPopup 0.2s forwards";
    upload_loading_box.style.animation = "showImageFormatEditorPopupBox 0.2s forwards";
    setTimeout(() => {
        upload_loading_box.style.animation = null;
    }, 200);

    let items = '';
    for (let i = 0; i < info.length; i++) {
        let uid = info[i]['name'] + "," + info[i]['size'] + "," + info[i]['type'] + "," + info[i]['lastModified'];
        items += `
            <div class = "image_format_editor_upload_loading_box_contents_item" state = "waiting" uid = "` + uid + `" progress = "0">
                <div class = "image_format_editor_upload_loading_box_contents_item_left_waiting">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6 2.016v6l3.984 3.984-3.984 4.031v5.953h12v-6l-3.984-3.984 3.984-3.984v-6h-12zM15.984 16.5v3.516h-7.969v-3.516l3.984-3.984z"></path></svg>
                </div>
                <div class = "image_format_editor_upload_loading_box_contents_item_left_uploading">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M10 2.5l6.5 6.5h-3.5v8h-6v-8h-3.5l6.5-6.5z"></path></svg>
                </div>
                <div class = "image_format_editor_upload_loading_box_contents_item_left_uploaded">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.293 5.293l-10.293 10.293-4.293-4.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5 5c0.391 0.391 1.024 0.391 1.414 0l11-11c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0z"></path></svg>
                </div>
                <div class = "image_format_editor_upload_loading_box_contents_item_right">
                    <div class = "image_format_editor_upload_loading_box_contents_item_right_title">
                        ` + info[i]["name"] + `
                    </div>
                    <div class = "image_format_editor_upload_loading_box_contents_item_right_state">
                        ` + getLanguage("image_format_editor_upload_loading_contents_item:waiting") + `
                    </div>
                    <div class = "image_format_editor_upload_loading_box_contents_item_right_progress_wrap">
                        <div class = "image_format_editor_upload_loading_box_contents_item_right_progress" style = "width: 50%;"></div>
                    </div>
                </div>
            </div>
        `;
    }

    upload_loading_box.innerHTML = `
        <div class = "image_format_editor_upload_loading_box_top">
            <div class = "image_format_editor_upload_loading_box_top_left">
                ` + getLanguage("image_format_editor_upload_loading_top_left") + `
            </div>
            <div class = "image_format_editor_upload_loading_box_top_right">
                <div class = "image_format_editor_upload_loading_box_top_right_progress_text">
                    ...
                </div>
                <div class = "image_format_editor_upload_loading_box_top_right_close md-ripples" onclick = "closeLoadingImageFormat();" onmouseenter = "hoverInformation(this, getLanguage('popup_contents:close'));">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5.293 6.707l5.293 5.293-5.293 5.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0l5.293-5.293 5.293 5.293c0.391 0.391 1.024 0.391 1.414 0s0.391-1.024 0-1.414l-5.293-5.293 5.293-5.293c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0l-5.293 5.293-5.293-5.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414z"></path></svg>
                </div>
            </div>
        </div>
        <div class = "image_format_editor_upload_loading_box_contents">
            <div class = "image_format_editor_upload_loading_box_contents_title">
                ` + getLanguage("image_format_editor_upload_loading_contents_items_title") + `
            </div>
            <div class = "image_format_editor_upload_loading_box_contents_items">
                ` + items + `
            </div>
        </div>
    `;

    checkImageFormatUploadProgress();
}
function getItemElementLoadingImageFormat(uid) {
    let upload_loading_box = document.getElementsByClassName("image_format_editor_upload_loading_box")[0];
    let items = upload_loading_box.getElementsByClassName("image_format_editor_upload_loading_box_contents_item");
    for (let i = 0; i < items.length; i++) {
        if (uid == items[i].getAttribute('uid')) {
            return items[i];
        }
    }
    return null;
}
function closeLoadingImageFormat() {
    let upload_loading = document.getElementsByClassName("image_format_editor_upload_loading")[0];
    let upload_loading_box = document.getElementsByClassName("image_format_editor_upload_loading_box")[0];
    upload_loading.style.animation = "hideImageFormatEditorPopup 0.2s forwards";
    upload_loading_box.style.animation = "hideImageFormatEditorPopupBox 0.2s forwards";
    setTimeout(() => {
        upload_loading.style.display = "none";
        upload_loading_box.textContent = '';
    }, 200);

    for (let i = 0; i < xhrRequestImageFormatUpload.length; i++) {
        xhrRequestImageFormatUpload[i].abort();
    }
}




























function getSizeQualityImageFormat(lines, quality) {
    let size = null;
    for (let i = 0; i < lines.length; i++) {
        let resolutions = lines[i]["resolutions"];
        for (let j = 0; j < resolutions.length; j++) {
            (resolutions[j]["resolution"] == quality) ? size += resolutions[j]["size"] : null;
        }
    }
    return size;
}
function getMaxSettingsQualityImageFormat(lines) {
    let minQuality = null;
    let constantQuality = null;
    for (let i = 0; i < lines.length; i++) {
        let quality = getMaxQualityImageFormat(lines[i])["size"];
        if (minQuality != null) {
            if (quality != minQuality) {
                constantQuality = false;
            }
            if (quality < minQuality) {
                minQuality = quality;
            }
        } else {
            minQuality = quality;
            constantQuality = true;
        }
    }
    return {
        'minQuality': minQuality,
        'constantQuality': constantQuality
    };
}
function getMaxQualityImageFormat(info) {
    let qualityInfo = getQualityInfo();
    let sizeList = qualityInfo["size"];
    let nameList = qualityInfo["name"];

    let resolutions = info["resolutions"];
    let index = (resolutions.length - 1);

    return {
        "size": sizeList[index],
        "name": nameList[index]
    };
}
function getQualityNameImageFormat(size) {
    let qualityInfo = getQualityInfo();
    let nameList = qualityInfo["name"];
    let sizeList = qualityInfo["size"];
    for (let i = 0; i < sizeList.length; i++) {
        if (sizeList[i] == size) {
            return nameList[i];
        }
    }
}
function getQualityInfo() {
    let nameList = new Array('256px', '480px', 'nHD', 'qHD', 'HD', 'FHD', 'WQHD', 'UHD', 'UHD+', 'FUHD');
    let sizeList = new Array(256, 480, 640, 960, 1280, 1920, 2560, 3840, 5120, 7680);
    return {
        "name": nameList,
        "size": sizeList
    };
}



























function imageFormatEditorPopupItemMoreButton(el, event) {
    let order = el.getAttribute("order");

    let slot = new Array();
    slot[0] = {
        'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M6 6v-4c0-1.1 0.9-2 2-2h10c1.105 0 2 0.895 2 2v0 10c0 1.105-0.895 2-2 2v0h-4v4c0 1.105-0.895 2-2 2v0h-10c-1.105 0-2-0.895-2-2v0-10c0-1.1 0.9-2 2-2h4zM8 6h4c1.105 0 2 0.895 2 2v0 4h4v-10h-10v4zM2 8v10h10v-10h-10z"></path></svg>',
        'title': getLanguage("image_format_editor_popup_item_more_button:copy_image_url"),
        'onclick': 'copyUrlimageFormatEditorOriginalImage(' + order + ');',
    };
    slot[1] = {
        'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>',
        'title': getLanguage("delete"),
        'onclick': 'deleteImageItemImageFormatEditor(' + order + ');',
        'class': 'more_button_item_delete',
    };
    moreButton(null, slot, event);
}

function deleteImageItemImageFormatEditor(order) {
    let menuNumber = getCurrentMenuNumber();
    let contents = document.getElementById("contents_" + menuNumber);

    let editor_popup = document.getElementsByClassName("image_format_editor_popup")[0];
    let editor_popup_items = editor_popup.getElementsByClassName("image_format_editor_popup_box_items")[0];
    let editor_popup_item = editor_popup_items.getElementsByClassName("image_format_editor_popup_box_item");

    for (let i = 0; i < editor_popup_item.length; i++) {
        if (editor_popup_item[i].getAttribute("order") == order) {
            let height = editor_popup_item[i].clientHeight;
            editor_popup_item[i].style.height = height + "px";
            editor_popup_item[i].style.pointerEvents = "none";
            function callback() {
                editor_popup_item[i].style.animation = "deleteImageFormatEditorPopupBoxItem 0.2s forwards";
                editor_popup_item[i].style.height = "0px";
                editor_popup_item[i].style.paddingTop = "0px";
                editor_popup_item[i].style.paddingBottom = "0px";
                setTimeout(() => {
                    editor_popup_item[i].remove();

                    for (let j = 0; j < editor_popup_item.length; j++) {
                        editor_popup_item[j].setAttribute("order", j);
                        let titleText = editor_popup_item[j].getElementsByClassName("image_format_editor_popup_box_item_bottom_title")[0].getElementsByTagName("span")[0];
                        titleText.innerHTML = (j + 1);
                    }

                    //체크
                    checkImageFormatEditorPopupEmpty();
                    checkImageFormatEditorEmpty(menuNumber);
                }, 200);
            }
            window.requestAnimationFrame(callback);
        }
    }

    //콘텐츠
    let items = contents.getElementsByClassName("image_format_editor_contents_items")[0];
    let item = items.children[order];

    let height = item.clientHeight;
    item.style.maxHeight = height + "px";
    function callback2() {
        item.style.animation = "deleteImageFormatEditorPopupBoxItem 0.2s forwards";
        item.style.maxHeight = "0px";
        setTimeout(() => {
            item.remove();

            //체크
            checkImageFormatEditorPopupEmpty();
            checkImageFormatEditorEmpty(menuNumber);
        }, 200);
    }
    window.requestAnimationFrame(callback2);
}

function copyUrlimageFormatEditorOriginalImage(order) {
    let menuNumber = getCurrentMenuNumber();
    let json = getImageFormatJson(menuNumber);
    let lines = json["lines"];
    let resolutions = lines[order]["resolutions"];
    let url = resolutions[resolutions.length - 1]["url"];

    let el = document.createElement("textarea");
    document.body.appendChild(el);
    el.value = url;
    el.select();
    document.execCommand('copy');
    document.body.removeChild(el);

    actionMessage(getLanguage("copy_message"));
}

function moveItemImageFormatEditor(el) {
    let order = el.getAttribute("order");

    let menuNumber = getCurrentMenuNumber();
    let contents = document.getElementById("contents_" + menuNumber);
    let items = contents.getElementsByClassName("image_format_editor_contents_items")[0];
    let item = items.getElementsByClassName("image_format_editor_contents_item")[order];

    let paddingTop = 55;
    let top = ((window.pageYOffset + item.getBoundingClientRect().top) - paddingTop);
    if (item.clientHeight < (window.innerHeight - paddingTop)) {
        top -= ((window.innerHeight - paddingTop) - item.clientHeight) / 2;
    }

    window.scrollTo({
        behavior: 'smooth',
        left: 0,
        top: top
    });

    imageFormatEditorPopupClose();
}











































function moreButtonImageFormatEditor(menuNumber, el) {
    let slot = new Array();
    slot[0] = {
        'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M6 6v-4c0-1.1 0.9-2 2-2h10c1.105 0 2 0.895 2 2v0 10c0 1.105-0.895 2-2 2v0h-4v4c0 1.105-0.895 2-2 2v0h-10c-1.105 0-2-0.895-2-2v0-10c0-1.1 0.9-2 2-2h4zM8 6h4c1.105 0 2 0.895 2 2v0 4h4v-10h-10v4zM2 8v10h10v-10h-10z"></path></svg>',
        'title': getLanguage("copy_json_info"),
        'onclick': 'imageFormatEditorCopyJsonInfo(' + menuNumber + ');',
    };
    slot[1] = {
        'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M16.057 31.957c0.639-0.005 1.271-0.039 1.901-0.125 1.44-0.184 2.857-0.577 4.195-1.151 1.879-0.803 3.597-1.961 5.057-3.391 1.337-1.319 2.456-2.868 3.253-4.569 0.679-1.463 1.159-3.032 1.36-4.635 0.199-1.547 0.18-3.128-0.060-4.665-0.199-1.28-0.559-2.528-1.057-3.717-0.32-0.748-0.7-1.468-1.139-2.156-1.557-2.449-3.815-4.419-6.413-5.735-0.924-0.473-1.897-0.86-2.896-1.159h-0.007c0.159 0.084 0.32 0.176 0.46 0.268 0.16 0.099 0.319 0.195 0.468 0.3 0.759 0.513 1.459 1.103 2.079 1.773 1.417 1.527 2.396 3.397 2.957 5.388 0.379 1.309 0.579 2.664 0.66 4.023 0.059 0.991 0.059 1.988-0.063 2.972-0.199 1.693-0.739 3.347-1.637 4.795-0.66 1.071-1.52 2.025-2.537 2.779-1.659 1.237-3.836 1.976-5.915 1.485-0.339-0.081-0.68-0.195-0.997-0.344-0.361-0.165-0.72-0.369-1.039-0.599-0.62-0.415-1.18-0.913-1.659-1.475-0.58-0.693-1.059-1.481-1.399-2.329-0.419-1.075-0.639-2.229-0.659-3.387-0.040-1.697 0.3-3.404 1.139-4.893 0.56-0.992 1.319-1.861 2.217-2.557 0.3-0.237 0.619-0.444 0.939-0.639l0.021-0.009c-0.621-0.14-1.28-0.201-1.921-0.16-0.557 0.039-1.097 0.14-1.637 0.319-0.479 0.16-0.939 0.361-1.359 0.6-0.34 0.199-0.677 0.42-0.977 0.66-0.281 0.24-0.56 0.479-0.82 0.74-1.497 1.537-2.357 3.576-2.696 5.675-0.2 1.297-0.2 2.615-0.121 3.935 0.14 1.859 0.521 3.715 1.26 5.415 0.459 1.059 1.057 2.036 1.797 2.897 1.139 1.316 2.579 2.337 4.176 2.975 0.9 0.361 1.859 0.62 2.817 0.72 0.099 0.020 0.199 0.020 0.279 0.020zM12.145 31.427c-0.219-0.093-0.419-0.199-0.6-0.304-0.199-0.111-0.4-0.224-0.599-0.345-0.78-0.483-1.477-1.049-2.119-1.7-1.459-1.517-2.436-3.423-2.996-5.441-0.379-1.379-0.58-2.803-0.66-4.229-0.059-0.937-0.039-1.857 0.061-2.776 0.18-1.676 0.66-3.335 1.499-4.773 0.599-1.059 1.417-1.997 2.377-2.737 0.659-0.499 1.399-0.92 2.177-1.2 1.099-0.399 2.277-0.519 3.417-0.36 0.44 0.060 0.877 0.161 1.279 0.3 0.039 0 0.039 0 0.060 0.040 0.020 0.020 0.060 0.020 0.080 0.040 0.060 0.021 0.139 0.060 0.22 0.099 0.319 0.16 0.639 0.361 0.939 0.56 1.199 0.839 2.177 1.997 2.796 3.336 0.56 1.219 0.82 2.579 0.841 3.917 0.019 1.439-0.24 2.876-0.86 4.195-0.74 1.579-1.997 2.917-3.517 3.776 0.12 0.040 0.24 0.060 0.361 0.1 0.3 0.059 0.599 0.099 0.917 0.099 1.957 0.060 3.856-0.879 5.253-2.196 0.26-0.24 0.5-0.5 0.72-0.78 0.3-0.36 0.58-0.719 0.819-1.097 0.319-0.5 0.58-1 0.819-1.539 0.301-0.719 0.539-1.459 0.679-2.219 0.261-1.339 0.281-2.696 0.199-4.035-0.18-2.696-0.897-5.393-2.456-7.632-0.24-0.339-0.479-0.659-0.74-0.959-0.439-0.5-0.919-0.959-1.417-1.379-0.56-0.46-1.18-0.879-1.817-1.22-0.657-0.297-1.437-0.596-2.256-0.797l-0.4-0.080c-0.279-0.040-0.56-0.059-0.845-0.080-0.433-0.020-0.892-0.013-1.353 0.021-0.939 0.060-1.883 0.213-2.816 0.449-4.475 1.155-8.389 4.273-10.473 8.411-0.668 1.319-1.14 2.728-1.416 4.176-0.319 1.657-0.36 3.364-0.139 5.033 0.16 1.36 0.499 2.697 1.037 3.969 0.303 0.76 0.681 1.499 1.1 2.197 1.459 2.377 3.577 4.315 6.013 5.653 0.917 0.521 1.877 0.92 2.876 1.26 0.301 0.099 0.6 0.199 0.919 0.279z"></path></svg>',
        'title': getLanguage("open_json_viewer"),
        'onclick': `openPopupContents('json_viewer', null, '` + JSON.stringify(getImageFormatJson(menuNumber)).replaceAll("\\\"", "&quot;").replaceAll("\"", "&2quot;") + `');`,
    };
    moreButton(el, slot);
}

function imageFormatEditorCopyJsonInfo(menuNumber) {
    let json = getImageFormatJson(menuNumber);

    let el = document.createElement("textarea");
    document.body.appendChild(el);
    el.value = JSON.stringify(json);
    el.select();
    document.execCommand('copy');
    document.body.removeChild(el);

    actionMessage(getLanguage("copy_message"));
}