



function menuCloudLoad(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);

    //데이터 없음
    let no_data = contents.getElementsByClassName("cloud_contents_folder_empty")[0];
    no_data.getElementsByClassName("cloud_contents_folder_empty_title")[0].innerHTML = getLanguage("cloud_folder_empty");
    no_data.getElementsByClassName("cloud_contents_folder_empty_description")[0].innerHTML = getLanguage("no_data_description");
}

function moreButtonCloud(menuNumber, el) {
    let slot = new Array();
    slot[0] = {
        'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M14 4l4 4h14v22h-32v-26z"></path></svg>',
        'title': getLanguage("cloud_more_button:add_folder"),
        'onclick': 'addCloudItem(' + menuNumber + ', 0);',
    };
    slot[1] = {
        'icon': '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M17-1536h0v-41.182l-7-11.9-7,11.9V-1536H17m0,3H3a3,3,0,0,1-3-3v-42l10-17,10,17v42A3,3,0,0,1,17-1533Z" transform="translate(1134.986 -1070.844) rotate(-135)"/></g></svg>',
        'title': getLanguage("cloud_more_button:add_document"),
        'onclick': 'addCloudItem(' + menuNumber + ', 1);',
    };
    slot[2] = {
        'icon': '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M48.5,1550H1.5a1.5,1.5,0,0,1-1.289-2.267l11-18.5a1.5,1.5,0,0,1,1.846-.626l11.336,4.534L36.228,1514.2a1.5,1.5,0,0,1,2.7.327l11,33.5A1.5,1.5,0,0,1,48.5,1550Zm-44.363-3H46.429l-9.354-28.489-10.8,17.284a1.5,1.5,0,0,1-1.829.6l-11.309-4.524Z" transform="translate(0 -1500)"/><path d="M11.5,3A8.5,8.5,0,1,0,20,11.5,8.51,8.51,0,0,0,11.5,3m0-3A11.5,11.5,0,1,1,0,11.5,11.5,11.5,0,0,1,11.5,0Z"/></g></svg>',
        'title': getLanguage("cloud_more_button:add_image_format"),
        'onclick': 'addCloudItem(' + menuNumber + ', 2);',
    };
    moreButton(el, slot);
}
function getSelectItemsCloudSort() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("cloud_sort_type_0"),
        "value": 0
    }
    items[1] = {
        "title": getLanguage("cloud_sort_type_1"),
        "value": 1
    }
    items[2] = {
        "title": getLanguage("cloud_sort_type_2"),
        "value": 2
    }
    items[3] = {
        "title": getLanguage("cloud_sort_type_3"),
        "value": 3
    }
    return items;
}


function addCloudItem(menuNumber, type) {
    let curr = new Date();
    let utc = curr.getTime() + (curr.getTimezoneOffset() * 60 * 1000);
    let modified_date = new Date(utc);

    let newData = {
        "type": type,
        "size": 0,
        "modified_date": modified_date,
    }

    let info_left = document.getElementById("cloud_contents_info_left_" + menuNumber);
    let child = info_left.children;
    let folder_number = child[child.length - 1].getAttribute("folder_number");
    newData["folder_number"] = folder_number;

    requestAddCloudItem(menuNumber, newData);
}

function requestAddCloudItem(menuNumber, info) {
    loading();

    let type = info["type"];
    let name = getLanguage("cloud_new_item_name:" + info["type"]);
    let folder_number = info["folder_number"];
    
    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, '/php/cloud/addItem.php');
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                
                info["number"] = xhrHtml;
                let contents = document.getElementById("cloud_contents_items_" + menuNumber);
                let newEl = document.createElement("div");
                newEl.setAttribute("id", "cloud_contents_item_" + menuNumber + "_" + info["number"]);
                newEl.innerHTML = getHtmlCloudItem(menuNumber, info);
                let el = contents.appendChild(newEl);

                //아이템 정렬
                cloudItemsSort(menuNumber);

                let height = el.clientHeight;
                el.style.transition = "all 0.2s";
                el.style.height = "0px";
                let item = el.getElementsByClassName("cloud_contents_item")[0];
                item.style.animation = "newCloudItem 0.2s forwards";
                setTimeout(() => {
                    el.style.height = height + "px";
                }, 10);
                setTimeout(() => {
                    el.style.height = "max-content";
                    item.style.animation = "unset";
                    el.style.transition = "unset";
                }, 210);

                //액션 메세지
                actionMessage(getLanguage("cloud_new_item_message:" + info["type"]), "deleteCloudItem(" + menuNumber + ", " + info["number"] + ");");
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("type", type);
    formData.append("name", name);
    if (folder_number != null) {
        formData.append("folder_number", folder_number);
    }

    xhr.send(formData);
}

function getHtmlCloudItem(menuNumber, info) {
    let html = ``;

    let name = getLanguage("cloud_new_item_name:" + info["type"]);
    if (info["name"] != null) {
        name = info["name"];
    }
    let title_info = null;
    if (info["type"] == 0) {
        title_info = getLanguage("item_count").replaceAll("{R:0}", info["size"]);
    } else if (info["type"] == 1 || info["type"] == 2) {
        title_info = capacityUnit(info["size"]);
    }

    let icon = null;
    if (info["type"] == 0) {
        icon = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M14 4l4 4h14v22h-32v-26z"></path></svg>';
    } else if (info["type"] == 1) {
        icon = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M17-1536h0v-41.182l-7-11.9-7,11.9V-1536H17m0,3H3a3,3,0,0,1-3-3v-42l10-17,10,17v42A3,3,0,0,1,17-1533Z" transform="translate(1134.986 -1070.844) rotate(-135)"/></g></svg>';
    } else if (info["type"] == 2) {
        icon = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M48.5,1550H1.5a1.5,1.5,0,0,1-1.289-2.267l11-18.5a1.5,1.5,0,0,1,1.846-.626l11.336,4.534L36.228,1514.2a1.5,1.5,0,0,1,2.7.327l11,33.5A1.5,1.5,0,0,1,48.5,1550Zm-44.363-3H46.429l-9.354-28.489-10.8,17.284a1.5,1.5,0,0,1-1.829.6l-11.309-4.524Z" transform="translate(0 -1500)"/><path d="M11.5,3A8.5,8.5,0,1,0,20,11.5,8.51,8.51,0,0,0,11.5,3m0-3A11.5,11.5,0,1,1,0,11.5,11.5,11.5,0,0,1,11.5,0Z"/></g></svg>';
    }

    let onclick = "";
    if (info["type"] == 0) {
        onclick = "cloudLoadFolder(" + menuNumber + ", " + info["number"] + ");";
    } else if (info["type"] == 1) {
        onclick = "loadMenu_novel_editor(" + info["number"] + ")";
    } else if (info["type"] == 2) {
        onclick = "loadMenu_image_format_editor(" + info["number"] + ")";
    }

    let contextmenu = "moreButtonCloudItem(" + menuNumber + ", " + info["number"] + ", event);";
    
    let onmouseup = "";
    if (info["type"] == 0) {
        onmouseup = "cloudMoveFolder(" + menuNumber + ", " + info["number"] + ");";
    }

    html = `
    <div class = "cloud_contents_item md-ripples" type = "` + info["type"] + `" onclick = "` + onclick + `" oncontextmenu = "` + contextmenu + `" onmousedown = "cloudDrag(` + menuNumber + `, ` + info["number"] + `, event, this);" onmouseup = "` + onmouseup + `" tabindex= "0" onfocus = "focusAccessibility(event);">
        ` + icon + `
        <div class = "cloud_contents_item_title">
            <div class = "cloud_contents_item_title_text">
                ` + name + `
            </div>
            <div class = "cloud_contents_item_rename" contenteditable = "true" onblur = "checkRenameCloudItem(` + menuNumber + `, ` + info["number"] + `);" onkeydown = "if (window.event.keyCode == 13) { event.preventDefault(); setTimeout(() => { checkRenameCloudItem(` + menuNumber + `, ` + info["number"] + `); }, 1) }" onpaste = "contenteditable_paste(event);"></div>
            <div class = "cloud_contents_item_title_info">
                ` + title_info + `
            </div>
        </div>
        <input type = "text" dataType = "modified_date" value = "` + info["modified_date"] + `" style = "display: none;">
        <input type = "text" dataType = "size" value = "` + info["size"] + `" style = "display: none;">
    </div>
    `;

    return html;
}


function cloudLoadFolder(menuNumber, folderNumber) {
    loading();
    
    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, '/php/cloud/getFolderInfo.php');
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let info_left = document.getElementById("cloud_contents_info_left_" + menuNumber);

                //폴더 이름 구하기
                let folder = document.getElementById("cloud_contents_item_" + menuNumber + "_" + folderNumber);
                let title = null;
                if (folder != null) {
                    title = folder.getElementsByClassName("cloud_contents_item_title_text")[0].innerText;
                } else {
                    let child = info_left.children;
                    let isExist = false;
                    for (let i = 0; i < child.length; i++) {
                        if (folderNumber == null) {
                            if (isExist == true) {
                                child[i].remove();
                                i--;
                            } else {
                                isExist = true;
                            }
                        } else if (child[i].getAttribute("folder_number") == folderNumber) {
                            title = child[i].getElementsByClassName("cloud_contents_info_left_item")[0].innerText;
                            isExist = true;
                        } else if (isExist == true) {
                            child[i].remove();
                            title = null;
                            i--;
                        }
                    }
                }

                //
                let xhrHtml = xhr.responseText;
                
                let items = document.getElementById('cloud_contents_items_' + menuNumber);
                items.innerHTML = xhrHtml;

                cloudContentsLoad(menuNumber);

                //
                if (title != null) {
                    let newEl = document.createElement("div");
                    newEl.classList.add("cloud_contents_info_left_item_wrap");
                    newEl.setAttribute("folder_number", folderNumber);
                    newEl.style.animation = "showCloudLeftItem 0.2s";
                    newEl.innerHTML = `
                        <div class = "cloud_contents_info_left_item md-ripples" onclick = "cloudLoadFolder(` + menuNumber + `, ` + folderNumber + `);" onmouseup = "cloudMoveFolder(` + menuNumber + `, ` + folderNumber + `);">
                            ` + title + `
                        </div>
                        <div class = "cloud_contents_info_left_item_icon">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.707 18.707l6-6c0.391-0.391 0.391-1.024 0-1.414l-6-6c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5.293 5.293-5.293 5.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0z"></path></svg>
                        </div>
                    `;
                    info_left.appendChild(newEl);
                    setTimeout(() => {
                        newEl.style.animation = "unset";
                    }, 200);
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    if (folderNumber != null) {
        formData.append("folderNumber", folderNumber);
    }

    xhr.send(formData);
}


function cloudContentsLoad(menuNumber) {
    let items = document.getElementById('cloud_contents_items_' + menuNumber);
    if (items.innerHTML == "false") {
        //폴더 및 파일 없음
    } else {
        let json = JSON.parse(items.innerHTML);
        items.innerHTML = '';

        for (let i = 0; i < json.length; i++) {
            let html = getHtmlCloudItem(menuNumber, json[i]);
            let newEl = document.createElement("div");
            newEl.setAttribute("id", "cloud_contents_item_" + menuNumber + "_" + json[i]["number"]);
            newEl.innerHTML = html;
            items.appendChild(newEl);
        }
    }
    //아이템 정렬
    cloudItemsSort(menuNumber);

    items.style.animation = "cloudLoadComplete 0.2s";
    setTimeout(() => {
        items.style.animation = "unset";
    }, 200);
}

function cloudItemsSort(menuNumber) {
    let contents = document.getElementById("contents_" + menuNumber);
    let items = document.getElementById('cloud_contents_items_' + menuNumber).getElementsByClassName("cloud_contents_item");
    let sortType = document.getElementById("cloud_contents_top_right_item_sort_" + menuNumber).getAttribute("value");
    let sortItem = new Array();

    if (sortType == 0) {
        for (let i = 0; i < items.length; i++) {
            let inputList = items[i].getElementsByTagName("input");
            for (let j = 0; j < inputList.length; j++) {
                let input = inputList[j];
                if (input.getAttribute("dataType") == "modified_date") {
                    sortItem[sortItem.length] = new Date(input.value).getTime();
                }
            }
        }
        sortItem.sort();
        sortItem.reverse();
    } else if (sortType == 1) {
        for (let i = 0; i < items.length; i++) {
            let title = items[i].getElementsByClassName("cloud_contents_item_title_text")[0];
            sortItem[sortItem.length] = title.innerText;
        }
        sortItem.sort();
    } else if (sortType == 2 || sortType == 3) {
        for (let i = 0; i < items.length; i++) {
            let inputList = items[i].getElementsByTagName("input");
            for (let j = 0; j < inputList.length; j++) {
                let input = inputList[j];
                if (input.getAttribute("dataType") == "size") {
                    sortItem[sortItem.length] = input.value;
                }
            }
        }
        if (sortType == 2) {
            sortItem.sort();
            sortItem.reverse();
        } else if (sortType == 3) {
            sortItem.sort();
        }
    }

    //order
    for (let i = 0; i < sortItem.length; i++) {
        for (let j = 0; j < items.length; j++) {
            let item = items[j];
            //타입 0
            if (sortType == 0) {
                let inputList = item.getElementsByTagName("input");
                for (let j2 = 0; j2 < inputList.length; j2++) {
                    let input = inputList[j2];
                    if (input.getAttribute("dataType") != null && input.getAttribute("dataType") == "modified_date") {
                        if (new Date(input.value).getTime() == sortItem[i]) {
                            if (item.getAttribute("type") == 0) {
                                item.parentElement.style.order = i;
                            } else {
                                item.parentElement.style.order = i + 999999;
                            }
                        }
                    }
                }
            //타입 1
            } else if (sortType == 1) {
                let title = item.getElementsByClassName("cloud_contents_item_title_text")[0];
                if (title.innerText == sortItem[i]) {
                    if (item.getAttribute("type") == 0) {
                        item.parentElement.style.order = i;
                    } else {
                        item.parentElement.style.order = i + 999999;
                    }
                }
            //타입 2, 3
            } else if (sortType == 2 || sortType == 3) {
                let inputList = item.getElementsByTagName("input");
                for (let j2 = 0; j2 < inputList.length; j2++) {
                    let input = inputList[j2];
                    if (input.getAttribute("dataType") != null && input.getAttribute("dataType") == "size") {
                        if (input.value == sortItem[i]) {
                            if (item.getAttribute("type") == 0) {
                                item.parentElement.style.order = i;
                            } else {
                                item.parentElement.style.order = i + 999999;
                            }
                        }
                    }
                }
            }
        }
    }

    //폴더 비어있음
    let folder_empty = contents.getElementsByClassName("cloud_contents_folder_empty")[0];
    if (items.length == 0) {
        folder_empty.style.display = "block";
    } else {
        folder_empty.style.display = "none";
    }
}

function moreButtonCloudItem(menuNumber, itemNumber, event) {
    let slot = new Array();
    slot[0] = {
        'icon': '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>',
        'title': getLanguage("cloud_item_more_button:rename"),
        'onclick': 'renameCloudItem(' + menuNumber + ', ' + itemNumber + ');',
    };
    slot[1] = {
        'icon': '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM12 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM16 11.5v9c0 0.281-0.219 0.5-0.5 0.5h-1c-0.281 0-0.5-0.219-0.5-0.5v-9c0-0.281 0.219-0.5 0.5-0.5h1c0.281 0 0.5 0.219 0.5 0.5zM18 22.813v-14.812h-14v14.812c0 0.75 0.422 1.188 0.5 1.188h13c0.078 0 0.5-0.438 0.5-1.188zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>',
        'title': getLanguage("delete"),
        'onclick': 'deleteCloudItemButton(' + menuNumber + ', ' + itemNumber + ');',
        'class': 'more_button_item_delete',
    };
    moreButton(null, slot, event);
}
function deleteCloudItemButton(menuNumber, itemNumber) {
    confirmPopup(getLanguage("confirm_popup_title:delete"), getLanguage("confirm_popup_subject:delete"), 'deleteCloudItem(' + menuNumber + ', ' + itemNumber + ');');
}

function renameCloudItem(menuNumber, itemNumber) {
    let item_wrap = document.getElementById("cloud_contents_item_" + menuNumber + "_" + itemNumber);
    let item = item_wrap.getElementsByClassName("cloud_contents_item")[0];
    item.style.pointerEvents = "none";
    let title = item_wrap.getElementsByClassName("cloud_contents_item_title_text")[0];
    let rename = item_wrap.getElementsByClassName("cloud_contents_item_rename")[0];
    title.style.display = "none";
    rename.innerText = title.innerText.trim();
    rename.style.display = "block";
    rename.style.animation = "showCloudItemRename 0.2s forwards";

    let selection = window.getSelection();
    selection.collapse(rename, 1);
}
function checkRenameCloudItem(menuNumber, itemNumber) {
    let item_wrap = document.getElementById("cloud_contents_item_" + menuNumber + "_" + itemNumber);
    let item = item_wrap.getElementsByClassName("cloud_contents_item")[0];
    item.style.pointerEvents = "all";
    let title = item_wrap.getElementsByClassName("cloud_contents_item_title_text")[0];
    let rename = item_wrap.getElementsByClassName("cloud_contents_item_rename")[0];
    rename.style.animation = "hideCloudItemRename 0.2s forwards";
    setTimeout(() => {
        rename.style.display = "none";
        title.style.display = "block";
    }, 200);

    if (rename.innerText.trim() != "" && rename.innerText.trim() != title.innerText.trim()) {
        requestRenameCloudItem(menuNumber, itemNumber, rename.innerText.trim(), title.innerText.trim());
        title.innerText = rename.innerText.trim();
        //아이템 정렬
        cloudItemsSort(menuNumber);
    }
}
function requestRenameCloudItem(menuNumber, itemNumber, newName, oldName) {
    loading();
    
    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, '/php/cloud/renameItem.php');
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                if (oldName == null) {
                    let item_wrap = document.getElementById("cloud_contents_item_" + menuNumber + "_" + itemNumber);
                    let title = item_wrap.getElementsByClassName("cloud_contents_item_title_text")[0];
                    title.innerText = newName.trim();
                    
                    //액션 메세지
                    actionMessage(getLanguage("cloud_rename_item_message"));
                } else {
                    //액션 메세지
                    actionMessage(getLanguage("cloud_rename_item_message"), 'requestRenameCloudItem(' + menuNumber + ', ' + itemNumber + ', \'' + oldName + '\');');
                }
                //아이템 정렬
                cloudItemsSort(menuNumber);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("number", itemNumber);
    formData.append("newName", newName);

    xhr.send(formData);
}

function deleteCloudItem(menuNumber, itemNumber) {
    loading();
    
    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, '/php/cloud/deleteItem.php');
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let item_wrap = document.getElementById("cloud_contents_item_" + menuNumber + "_" + itemNumber);
                item_wrap.style.transition = "all 0.2s";
                item_wrap.style.height = item_wrap.clientHeight + "px";
                setTimeout(() => {
                    item_wrap.style.height = "0px";
                    let item = item_wrap.getElementsByClassName("cloud_contents_item")[0];
                    item.style.animation = "deleteCloudItem 0.2s forwards";
                }, 50);
                setTimeout(() => {
                    item_wrap.remove();
                    cloudItemsSort(menuNumber);
                }, 250);

                //액션 메세지
                actionMessage(getLanguage("permanently_delete_item_message"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("number", itemNumber);

    xhr.send(formData);
}