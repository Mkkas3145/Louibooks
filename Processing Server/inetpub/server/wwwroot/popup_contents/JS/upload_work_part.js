
function getHtmlPopupContents_upload_work_part(data) {
    let html = '';

    let buttonText = "";
    let buttonSvg = "";
    let buttonHtml = "";
    let topTitle = "";
    let categoryStyleDisplay = "block";
    if (data["edit"] != null && data["edit"] == true) {
        categoryStyleDisplay = "none";
        buttonText = getLanguage("edit");
        topTitle = getLanguage("edit");
        buttonSvg = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>';
        buttonHtml = `
            <div id = "edit_work_part_button" onclick = "requestEditWorkPart(` + data["partNumber"] + `);" class = "create_work_step2_bottom_button create_work_step2_bottom_button_disabled md-ripples">
                ` + buttonSvg + `
                ` + buttonText + `
            </div>
        `;
    } else {
        buttonText = getLanguage("work_part_upload_button");
        if (data["chapter"] == null) {
            topTitle = getLanguage("new_chapter");
        } else {
            topTitle = getLanguage("popup_upload_work_part_top_title");
        }
        buttonSvg = '<!-- Generated by IcoMoon.io --><svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="20" height="20" viewBox="0 0 20 20"><path d="M16.88 9.1c1.795 0.419 3.111 2.006 3.111 3.9 0 2.206-1.786 3.995-3.991 4h-11c-0.001 0-0.003 0-0.005 0-2.761 0-5-2.239-5-5 0-2.409 1.704-4.421 3.973-4.894l0.032-0.006v-0.1c0-0.001 0-0.002 0-0.004 0-1.657 1.343-3 3-3 0.56 0 1.085 0.154 1.534 0.421l-0.014-0.008c0.899-0.889 2.136-1.438 3.5-1.438 2.75 0 4.98 2.23 4.98 4.98 0 0.017-0 0.033-0 0.050l0-0.003c0 0.38-0.040 0.74-0.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z"/></svg>';
        buttonHtml = `
            <div id = "upload_work_part_button" onclick = "requestUploadWorkPart(` + data["number"] + `, '` + data["type"] + `')" class = "create_work_step2_bottom_button create_work_step2_bottom_button_disabled md-ripples">
                ` + buttonSvg + `
                ` + buttonText + `
            </div>
        `;
    }

    //
    let chapterTitleDisplay = "none";
    if (data["chapter"] == null) {
        chapterTitleDisplay = 'block';
    }
    

    //초기값
    let title = "";
    let category = "";
    let publicStatus = 2;
    if (data["edit"] != null && data["edit"] == true) {
        title = data["title"];
        category = data["category"];
        publicStatus = data["public_status"];
    } else {
        category = "episode";
    }

    let cloud = "";
    if (data["type"] != "video") {
        cloud = `
            <div style = "margin-top: 20px;">
                <div class = "upload_work_part_clound_files_wrap" value = "0">
                    <div class = "upload_work_part_clound_files_title">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM9 5v6h2v-6h-2zM9 13v2h2v-2h-2z"></path></svg>
                        ` + getLanguage("upload_work_part_cloud_files") + `
                    </div>
                    <div class = "upload_work_part_clound_files_title_selected">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.984 17.016l9-9-1.406-1.453-7.594 7.594-3.563-3.563-1.406 1.406zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93z"></path></svg>
                        ` + getLanguage("upload_work_part_cloud_files_selected") + `
                    </div>
                </div>
                <div class = "cloud_contents_info_left scroll">
                    <div class = "cloud_contents_info_left_item_wrap">
                        <div class="cloud_contents_info_left_item md-ripples" onclick = "requestUploadWorkPartCloundLoadFolder(null, '` + data["type"] + `');">
                            ` + getLanguage("my_cloud_folder") + `
                        </div>
                        <div class="cloud_contents_info_left_item_icon">
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.707 18.707l6-6c0.391-0.391 0.391-1.024 0-1.414l-6-6c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5.293 5.293-5.293 5.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0z"></path></svg>
                        </div>
                    </div>
                </div>
                <div class = "upload_work_part_clound_files_contents scroll">
                    <div class = "upload_work_part_clound_files_loading">
                        <div class="showbox"><div class="loader" style="width: 40px;"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="5" stroke-miterlimit="10"></circle></svg></div></div>
                    </div>
                </div>
            </div>
        `;
    } else {
        cloud = "<div style = \"width: 100%; height: 20px;\"></div>";
    }

    html = `
        <div class = "edit_profile_picture">
            <div class = "popup_contents_top">
                <div class = "popup_contents_top_left md-ripples" onclick = "backPopupContents();" onmouseenter = "hoverInformation(this, getLanguage('popup_contents:back'));">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(-12.086 -0.24)"><rect width="3" height="35" rx="1.5" transform="translate(36.399 0.479) rotate(45)"></rect><rect width="3" height="35" rx="1.5" transform="translate(38.521 47.879) rotate(135)"></rect></g><rect width="49" height="3" rx="1.5" transform="translate(1 23.5)"></rect></g></svg>
                </div>
                <div class = "popup_contents_top_right">
                    ` + topTitle + `
                </div>
            </div>

            <div class = "edit_profile_picture_contents" style = "max-width: calc(500px - 40px);">
                <div class = "create_work_input" style = "display: ` + chapterTitleDisplay + `; margin-bottom: 20px;">
                    <div class = "create_work_input_top">
                        <div class = "create_work_input_top_title">
                            ` + getLanguage("upload_work_part_input_new_chapter_title") + `
                        </div>
                        <div class = "create_work_input_top_icon" style = "opacity: 0;");">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                        </div>
                    </div>
                    <input new_chapter = "` + chapterTitleDisplay + `" id = "upload_work_part_input_chapter_title" type = "text" placeholder = "` + getLanguage("work_settings_please_enter") + `" onfocus = "create_work_input_focus(this);" onkeydown = "setTimeout(() => { checkUploadWorkPartButton(); }, 1);">
                </div>
                <div class = "create_work_input">
                    <div class = "create_work_input_top">
                        <div class = "create_work_input_top_title">
                            ` + getLanguage("upload_work_part_input_title") + `
                        </div>
                        <div class = "create_work_input_top_icon" style = "opacity: 0;");">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                        </div>
                    </div>
                    <input value = "` + title.replaceAll('"', '&quot;') + `" original_title = "` + title.replaceAll('"', '&quot;') + `" id = "upload_work_part_input_title" type = "text" placeholder = "` + getLanguage("work_settings_please_enter") + `" onfocus = "create_work_input_focus(this);" onkeydown = "setTimeout(() => { checkUploadWorkPartButton(); }, 1);">
                </div>
                <div style = "margin-top: 20px; display: ` + categoryStyleDisplay + `;">
                    <div class = "create_work_step2_option_title">
                        ` + getLanguage("upload_work_part_option_category") + `
                    </div>
                    <div id = "upload_work_part_option_category" class = "create_work_step2_option_box md-ripples" value = "` + category + `" onclick = "selectList(this, getItemsUploadWorkPartCategory());">
                        <div class = "create_work_step2_option_box_title value_title">
                            ` + getLanguage("work_part_category:" + category) + `
                        </div>
                        <div class = "create_work_step2_option_box_icon">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.984 9.984h10.031l-5.016 5.016z"></path></svg>
                        </div>
                    </div>
                </div>
                <div class = "create_work_step2_option" style = "margin-top: 20px;">
                    <div class = "create_work_step2_option_title">
                        ` + getLanguage("work_settings_public_status") + `
                    </div>
                    <div id = "upload_work_part_option_public_status" class = "create_work_step2_option_box md-ripples" value = "` + publicStatus + `" original_value = "` + publicStatus + `" onchange = "checkUploadWorkPartButton();" onclick = "selectList(this, popupUploadWorkPartPublicStateItems());">
                        <div class = "create_work_step2_option_box_title value_title">
                            ` + getLanguage("public_status:" + publicStatus) + `
                        </div>
                        <div class = "create_work_step2_option_box_icon">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.984 9.984h10.031l-5.016 5.016z"></path></svg>
                        </div>
                    </div>
                </div>
                ` + cloud + `
                <input class = "upload_work_part_list_chapter_input" type = "text" value = "` + data["chapter"] + `" style = "display: none;">
                <div class = "create_work_step2_bottom">
                    ` + buttonHtml + `
                </div>
            </div>

            <div style = "width: 500px;"></div>
        </div>
    `;

    if (data["type"] != "video") {
        setTimeout(() => {
            requestUploadWorkPartCloundFiles(data["type"]);
        }, 200);
    }

    return html;
}




function requestUploadWorkPartCloundFiles(workType) {
    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/cloud/getFolderInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);
                
                checkHtmlPopupContents();
                loadUploadWorkPartCloundFiles(info, workType);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
        }
    });
    
    var formData = new FormData();

    xhr.send(formData);
}
function requestUploadWorkPartCloundLoadFolder(folderNumber, workType) {
    loading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/cloud/getFolderInfo.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);

                let popup = document.getElementsByClassName("popup_contents")[0];
                let info_left = popup.getElementsByClassName("cloud_contents_info_left")[0];

                //폴더 이름 구하기
                let folder = document.getElementById("upload_work_part_cloud_contents_item_" + folderNumber);
                let title = null;
                if (folder != null) {
                    title = folder.getElementsByClassName("cloud_contents_item_title_text")[0].innerText;
                } else {
                    let child = info_left.children;
                    let isExist = false;
                    for (let i = 0; i < child.length; i++) {
                        if (folderNumber == null) {
                            if (isExist == true) {
                                child[i].remove();
                                i--;
                            } else {
                                isExist = true;
                            }
                        } else if (child[i].getAttribute("folder_number") == folderNumber) {
                            title = child[i].getElementsByClassName("cloud_contents_info_left_item")[0].innerText;
                            isExist = true;
                        } else if (isExist == true) {
                            child[i].remove();
                            title = null;
                            i--;
                        }
                    }
                }
                //
                if (title != null) {
                    let newEl = document.createElement("div");
                    newEl.classList.add("cloud_contents_info_left_item_wrap");
                    newEl.setAttribute("folder_number", folderNumber);
                    newEl.style.animation = "showCloudLeftItem 0.2s";
                    newEl.innerHTML = `
                        <div class = "cloud_contents_info_left_item md-ripples" onclick = "requestUploadWorkPartCloundLoadFolder(` + folderNumber + `, '` + workType + `');">
                            ` + title + `
                        </div>
                        <div class = "cloud_contents_info_left_item_icon">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9.707 18.707l6-6c0.391-0.391 0.391-1.024 0-1.414l-6-6c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5.293 5.293-5.293 5.293c-0.391 0.391-0.391 1.024 0 1.414s1.024 0.391 1.414 0z"></path></svg>
                        </div>
                    `;
                    info_left.appendChild(newEl);
                    setTimeout(() => {
                        newEl.style.animation = "unset";
                    }, 200);
                }
                
                checkHtmlPopupContents();
                loadUploadWorkPartCloundFiles(info, workType);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            loadingComplete();
        }
    });
    
    var formData = new FormData();
    if (folderNumber != null) {
        formData.append("folderNumber", folderNumber);
    }

    xhr.send(formData);
}

function loadUploadWorkPartCloundFiles(info, workType) {
    let clound_files_wrap = document.getElementsByClassName("upload_work_part_clound_files_wrap")[0];
    clound_files_wrap.setAttribute("value", 0);
    if (clound_files_wrap.getAttribute("onchange") != null) {
        clound_files_wrap.onchange();
    }
    let contents = document.getElementsByClassName("upload_work_part_clound_files_contents")[0];
    contents.innerHTML = '';

    checkUploadWorkPartButton();

    //폴더 비어있음
    if (info.length == 0) {
        contents.innerHTML = `
            <div class = "cloud_contents_folder_empty">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-3094.635,49.5H-3116.5a3,3,0,0,1-3-3V3.5a3,3,0,0,1,3-3h31a3,3,0,0,1,3,3V37.365L-3094.635,49.5Z" transform="translate(3126)" opacity="0.7"/><path d="M3151.333,49.5l12.293-12.293h-9.846a2.517,2.517,0,0,0-1.983.575,2.884,2.884,0,0,0-.464,2.039Z" transform="translate(-3120)" opacity="0.6"/></g></svg>
                <div class = "cloud_contents_folder_empty_title">
                    ` + getLanguage("cloud_folder_empty") + `
                </div>
                <div class = "cloud_contents_folder_empty_description">
                    ` + getLanguage("no_data_description") + `
                </div>
            </div>
        `;
        return;
    }

    for (let i = info.length - 1; i >= 0; i--) {
        let data = info[i];

        let title_info = null;
        if (data["type"] == 0) {
            title_info = getLanguage("item_count").replaceAll("{R:0}", data["size"]);
        } else if (data["type"] == 1 || data["type"] == 2) {
            if (data["size"] < 1024) {
                title_info = data["size"] + "KB";
            } else if (data["size"] < 1048576) {
                title_info = Math.floor(data["size"] / 1024) + "MB";
            } else if (data["size"] < 1073741824) {
                title_info = Math.floor(data["size"] / 1024 / 1024) + "GB";
            } else if (data["size"] < 1.0995116e+12) {
                title_info = Math.floor(data["size"] / 1024 / 1024 / 1024) + "TB";
            } else {
                title_info = "...";
            }
        }

        let icon = null;
        if (data["type"] == 0) {
            icon = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32"><path d="M14 4l4 4h14v22h-32v-26z"></path></svg>';
        } else if (data["type"] == 1) {
            icon = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M17-1536h0v-41.182l-7-11.9-7,11.9V-1536H17m0,3H3a3,3,0,0,1-3-3v-42l10-17,10,17v42A3,3,0,0,1,17-1533Z" transform="translate(1134.986 -1070.844) rotate(-135)"/></g></svg>';
        } else if (data["type"] == 2) {
            icon = '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"/></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M48.5,1550H1.5a1.5,1.5,0,0,1-1.289-2.267l11-18.5a1.5,1.5,0,0,1,1.846-.626l11.336,4.534L36.228,1514.2a1.5,1.5,0,0,1,2.7.327l11,33.5A1.5,1.5,0,0,1,48.5,1550Zm-44.363-3H46.429l-9.354-28.489-10.8,17.284a1.5,1.5,0,0,1-1.829.6l-11.309-4.524Z" transform="translate(0 -1500)"/><path d="M11.5,3A8.5,8.5,0,1,0,20,11.5,8.51,8.51,0,0,0,11.5,3m0-3A11.5,11.5,0,1,1,0,11.5,11.5,11.5,0,0,1,11.5,0Z"/></g></svg>';
        }

        let activate = false;
        if (data["type"] == 0) {
            activate = true;
        } else if (workType == "novel" && data["type"] == 1) {
            activate = true;
        } else if (workType == "image_format" && data["type"] == 2) {
            activate = true;
        }

        let onclick = "";
        if (data["type"] == 0) {
            onclick = "requestUploadWorkPartCloundLoadFolder(" + data["number"] + ", '" + workType + "');";
        } else {
            onclick = "uploadWorkPartCloundFilesSelect(" + data["number"] + ");";
        }

        let newEl = document.createElement("div");
        if (activate == false) {
            newEl.classList.add("upload_work_part_clound_files_item_disabled");
        }
        newEl.innerHTML = `
            <div class="cloud_contents_item md-ripples" id = "upload_work_part_cloud_contents_item_` + data["number"] + `" onclick = "` + onclick + `" type = "` + data["type"] + `">
                <div class = "upload_work_part_clound_files_item_selected_svg">
                    <!-- Generated by IcoMoon.io -->
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.293 5.293l-10.293 10.293-4.293-4.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5 5c0.391 0.391 1.024 0.391 1.414 0l11-11c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0z"></path></svg>
                </div>
                ` + icon + `
                <div class="cloud_contents_item_title">
                    <div class="cloud_contents_item_title_text">
                        ` + data["name"] + `
                    </div>
                    <div class="cloud_contents_item_rename" contenteditable="true" onblur="checkRenameCloudItem(166691864641, 424);" onkeydown="if (window.event.keyCode == 13) { event.preventDefault(); setTimeout(() => { checkRenameCloudItem(166691864641, 424); }, 1) }" onpaste="contenteditable_paste(event);"></div>
                    <div class="cloud_contents_item_title_info">
                        ` + title_info + `
                    </div>
                </div>
            </div>
        `;
        contents.appendChild(newEl);
    }
    uploadWorkPartCloundFilesSort(workType);
}

function uploadWorkPartCloundFilesSort(workType) {
    let popup = document.getElementsByClassName("popup_contents")[0];
    let contents = popup.getElementsByClassName("upload_work_part_clound_files_contents")[0];
    let child = contents.children;

    for (let i = 0; i < child.length; i++) {
        let item = child[i].getElementsByClassName("cloud_contents_item")[0];
        let type = item.getAttribute("type");

        let activate = false;
        if (workType == "novel" && type == 1) {
            activate = true;
        } else if (workType == "image_format" && type == 2) {
            activate = true;
        }

        if (type == 0) {
            child[i].style.order = i - 999999;
        } else if (activate == true) {
            child[i].style.order = i;
        } else {
            child[i].style.order = i + 999999;
        }
    }
}

function uploadWorkPartCloundFilesSelect(fileNumber) {
    let clound_files_wrap = document.getElementsByClassName("upload_work_part_clound_files_wrap")[0];
    if (clound_files_wrap.getAttribute("onchange") != null) {
        clound_files_wrap.onchange();
    }

    //
    let selectElement = document.getElementById("upload_work_part_cloud_contents_item_" + fileNumber);
    if (selectElement.classList.contains("upload_work_part_clound_files_item_selected")) {
        selectElement.classList.remove("upload_work_part_clound_files_item_selected");
        clound_files_wrap.setAttribute("value", 0);

        checkUploadWorkPartButton();
        return;
    }

    //모든 선택 삭제
    let popup = document.getElementsByClassName("popup_contents")[0];
    let contents = popup.getElementsByClassName("upload_work_part_clound_files_contents")[0];
    let items = contents.getElementsByClassName("cloud_contents_item");
    for (let i = 0; i < items.length; i++) {
        items[i].classList.remove("upload_work_part_clound_files_item_selected");
    }

    //선택
    selectElement.classList.add("upload_work_part_clound_files_item_selected");
    clound_files_wrap.setAttribute("value", 1);
    clound_files_wrap.setAttribute("fileNumber", fileNumber);

    //제목
    let title = selectElement.getElementsByClassName("cloud_contents_item_title_text")[0].innerText.trim();

    //
    let part_input_title = document.getElementById("upload_work_part_input_title");
    if (part_input_title.value.trim() == "") {
        part_input_title.value = title;
    }

    checkUploadWorkPartButton();
}





function getItemsUploadWorkPartCategory() {
    let items = new Array();
    items[0] = {
        "title": getLanguage("work_part_category:prologue"),
        "value": 'prologue'
    }
    items[1] = {
        "title": getLanguage("work_part_category:episode"),
        "value": 'episode'
    }
    items[2] = {
        "title": getLanguage("work_part_category:ending"),
        "value": 'ending'
    }

    return items;
}









function checkUploadWorkPartButton() {
    let upload_button = document.getElementById("upload_work_part_button");
    let edit_button = document.getElementById("edit_work_part_button");
    let input_title = document.getElementById("upload_work_part_input_title");
    let chapter_title = document.getElementById("upload_work_part_input_chapter_title");
    let public_status = document.getElementById("upload_work_part_option_public_status");
    let isCloudFile = 0;

    if (document.getElementsByClassName("upload_work_part_clound_files_wrap").length != 0) {
        let clound_files_wrap = document.getElementsByClassName("upload_work_part_clound_files_wrap")[0];
        isCloudFile = clound_files_wrap.getAttribute("value");
    }

    if (upload_button != null) {
        if (input_title.value.trim() != "" && isCloudFile == 1 && (chapter_title.getAttribute('new_chapter') == "none" || chapter_title.value.trim() != "")) {
            upload_button.classList.remove("create_work_step2_bottom_button_disabled");
        } else {
            upload_button.classList.add("create_work_step2_bottom_button_disabled");
        }
    } else if (edit_button != null) {
        let title = input_title.value.trim();
        let original_title = input_title.getAttribute("original_title").trim();
        if ((title != "" && original_title != title) || isCloudFile == 1 || public_status.getAttribute("value") != public_status.getAttribute("original_value")) {
            edit_button.classList.remove("create_work_step2_bottom_button_disabled");
        } else {
            edit_button.classList.add("create_work_step2_bottom_button_disabled");
        }
    }
}

function requestUploadWorkPart(workNumber, workType) {
    let input_title = document.getElementById("upload_work_part_input_title");
    let option_category = document.getElementById("upload_work_part_option_category");
    let clound_files_wrap = document.getElementsByClassName("upload_work_part_clound_files_wrap")[0];
    let chapter_input = document.getElementsByClassName("upload_work_part_list_chapter_input")[0];
    let chapter_title = document.getElementById("upload_work_part_input_chapter_title");
    let public_status = document.getElementById("upload_work_part_option_public_status");
    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work/upload_part.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let info = JSON.parse(xhrHtml);
                
                if (getCurrentMenuName() == "workspace_work_part_list") {
                    uploadContentWorkspaceWorkPartList(getCurrentMenuNumber(), info);
                }

                actionMessage(getLanguage("upload_part_message"));
                history.back();
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("workNumber", workNumber);
    formData.append("workType", workType);
    formData.append("title", input_title.value.trim());
    if (chapter_input.value != 'null' && chapter_input.value != 'undefined' && chapter_input.value != null && chapter_input.value != undefined) {
        formData.append("chapter", chapter_input.value);
    }
    if (chapter_title.value != "" && chapter_title.value != 'null' && chapter_title.value != 'undefined' && chapter_title.value != null && chapter_title.value != undefined) {
        formData.append("chapterTitle", chapter_title.value.trim());
    }
    formData.append("category", option_category.getAttribute("value"));
    formData.append("publicStatus", public_status.getAttribute("value"));
    formData.append("fileNumber", clound_files_wrap.getAttribute("fileNumber"));

    xhr.send(formData);
}

function requestEditWorkPart(partNumber) {
    let input_title = document.getElementById("upload_work_part_input_title");
    let public_status = document.getElementById("upload_work_part_option_public_status");
    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work/edit_part.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;

                actionMessage(getLanguage("edit_part_message"));
                history.back();

                let contents = document.getElementById("contents_" + getCurrentMenuNumber());
                if (contents != null) {
                    let more_button_item = contents.getElementsByClassName("menu_work_part_list_item");
                    let length = more_button_item.length;
                    for (let i = 0; i < length; i++) {
                        let item = more_button_item[i];
                        if (item.getAttribute("part_number") == partNumber) {
                            //-- -- -- -- -- 화면에서 보이지 않아도 해당 앨리먼트는 삭제하지 않는다 -- -- -- -- --
                            let allowInfo = registerAllowVisibleElement(item, 210);

                            let title_value = input_title.value.trim();
                            let public_status_value = public_status.getAttribute("value");
                            let publicStatusSvg = "...";
                            if (public_status_value == 0) {
                                publicStatusSvg = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h14c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v7c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-14c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-7c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293zM8 10v-3c-0.001-1.106 0.445-2.105 1.169-2.831 0.723-0.724 1.719-1.172 2.821-1.174 1.030 0.003 1.948 0.378 2.652 1 0.638 0.565 1.097 1.332 1.28 2.209 0.113 0.541 0.642 0.888 1.183 0.775s0.888-0.642 0.775-1.183c-0.272-1.307-0.958-2.454-1.912-3.299-1.060-0.938-2.452-1.504-3.973-1.502-1.657 0.002-3.157 0.676-4.241 1.762s-1.756 2.587-1.754 4.243v3h-1c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v7c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h14c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-7c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879z"></path></svg>';
                            } else if (public_status_value == 1) {
                                publicStatusSvg = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15 8h3c1.105 0 2.103 0.447 2.828 1.172s1.172 1.723 1.172 2.828-0.447 2.103-1.172 2.828-1.723 1.172-2.828 1.172h-3c-0.552 0-1 0.448-1 1s0.448 1 1 1h3c1.657 0 3.158-0.673 4.243-1.757s1.757-2.586 1.757-4.243-0.673-3.158-1.757-4.243-2.586-1.757-4.243-1.757h-3c-0.552 0-1 0.448-1 1s0.448 1 1 1zM9 16h-3c-1.105 0-2.103-0.447-2.828-1.172s-1.172-1.723-1.172-2.828 0.447-2.103 1.172-2.828 1.723-1.172 2.828-1.172h3c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3c-1.657 0-3.158 0.673-4.243 1.757s-1.757 2.586-1.757 4.243 0.673 3.158 1.757 4.243 2.586 1.757 4.243 1.757h3c0.552 0 1-0.448 1-1s-0.448-1-1-1zM8 13h8c0.552 0 1-0.448 1-1s-0.448-1-1-1h-8c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path></svg>';
                            } else if (public_status_value == 2) {
                                publicStatusSvg = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h14c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v7c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-14c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-7c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293zM18 10v-3c0-1.657-0.673-3.158-1.757-4.243s-2.586-1.757-4.243-1.757-3.158 0.673-4.243 1.757-1.757 2.586-1.757 4.243v3h-1c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v7c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h14c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-7c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879zM8 10v-3c0-1.105 0.447-2.103 1.172-2.828s1.723-1.172 2.828-1.172 2.103 0.447 2.828 1.172 1.172 1.723 1.172 2.828v3z"></path></svg>';
                            }

                            let title = item.getElementsByClassName("menu_work_part_list_item_right_title")[0];
                            title.textContent = title_value;
                            let public_status_el = item.getElementsByClassName("menu_work_part_list_item_right_info_item")[0];
                            public_status_el.innerHTML = publicStatusSvg + "<span>" + getLanguage("public_status:" + public_status_value) + "</span>";
 
                            let json_el = item.getElementsByClassName("workspace_work_part_list_item_json")[0];
                            let json = JSON.parse(json_el.innerHTML);
                            json["title"] = title_value;
                            json["public_status"] = public_status.getAttribute("value");
                            json_el.textContent = JSON.stringify(json);

                            //-- -- -- -- -- 화면에서 보이지 않아도 삭제되지 않는다를 취소한다 -- -- -- -- --
                            deleteAllowVisibleElement(allowInfo["index"]);
                            break;
                        }
                    }
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("partNumber", partNumber);
    formData.append("title", input_title.value.trim());
    formData.append("publicStatus", public_status.getAttribute("value"));
    if (document.getElementsByClassName("upload_work_part_clound_files_wrap").length != 0) {
        let clound_files_wrap = document.getElementsByClassName("upload_work_part_clound_files_wrap")[0];
        if (clound_files_wrap.getAttribute("value") == "1") {
            formData.append("fileNumber", clound_files_wrap.getAttribute("fileNumber"));
        }
    }

    xhr.send(formData);
}


























































function popupUploadWorkPartPublicStateItems() {
    let items = new Array();
    items[0] = {
        "icon": '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h14c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v7c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-14c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-7c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293zM8 10v-3c-0.001-1.106 0.445-2.105 1.169-2.831 0.723-0.724 1.719-1.172 2.821-1.174 1.030 0.003 1.948 0.378 2.652 1 0.638 0.565 1.097 1.332 1.28 2.209 0.113 0.541 0.642 0.888 1.183 0.775s0.888-0.642 0.775-1.183c-0.272-1.307-0.958-2.454-1.912-3.299-1.060-0.938-2.452-1.504-3.973-1.502-1.657 0.002-3.157 0.676-4.241 1.762s-1.756 2.587-1.754 4.243v3h-1c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v7c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h14c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-7c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879z"></path></svg>',
        "title": getLanguage("public_status:0"),
        "description": getLanguage("public_status_description:0"),
        "value": 0
    }
    items[1] = {
        "icon": '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15 8h3c1.105 0 2.103 0.447 2.828 1.172s1.172 1.723 1.172 2.828-0.447 2.103-1.172 2.828-1.723 1.172-2.828 1.172h-3c-0.552 0-1 0.448-1 1s0.448 1 1 1h3c1.657 0 3.158-0.673 4.243-1.757s1.757-2.586 1.757-4.243-0.673-3.158-1.757-4.243-2.586-1.757-4.243-1.757h-3c-0.552 0-1 0.448-1 1s0.448 1 1 1zM9 16h-3c-1.105 0-2.103-0.447-2.828-1.172s-1.172-1.723-1.172-2.828 0.447-2.103 1.172-2.828 1.723-1.172 2.828-1.172h3c0.552 0 1-0.448 1-1s-0.448-1-1-1h-3c-1.657 0-3.158 0.673-4.243 1.757s-1.757 2.586-1.757 4.243 0.673 3.158 1.757 4.243 2.586 1.757 4.243 1.757h3c0.552 0 1-0.448 1-1s-0.448-1-1-1zM8 13h8c0.552 0 1-0.448 1-1s-0.448-1-1-1h-8c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path></svg>',
        "title": getLanguage("public_status:1"),
        "description": getLanguage("public_status_description:1"),
        "value": 1
    }
    items[2] = {
        "icon": '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 12h14c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v7c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-14c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-7c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293zM18 10v-3c0-1.657-0.673-3.158-1.757-4.243s-2.586-1.757-4.243-1.757-3.158 0.673-4.243 1.757-1.757 2.586-1.757 4.243v3h-1c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v7c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h14c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-7c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879zM8 10v-3c0-1.105 0.447-2.103 1.172-2.828s1.723-1.172 2.828-1.172 2.103 0.447 2.828 1.172 1.172 1.723 1.172 2.828v3z"></path></svg>',
        "title": getLanguage("public_status:2"),
        "description": getLanguage("public_status_description:2"),
        "value": 2
    }
    return items;
}