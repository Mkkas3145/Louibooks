
function getHtmlPopupContents_change_chapter_title(info) {
    let html = '';

    info = JSON.parse(info);

    html = `
        <div class = "edit_profile_picture">
            <div class = "popup_contents_top">
                <div class = "popup_contents_top_left md-ripples" onclick = "backPopupContents();" onmouseenter = "hoverInformation(this, getLanguage('popup_contents:back'));">
                    <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(-12.086 -0.24)"><rect width="3" height="35" rx="1.5" transform="translate(36.399 0.479) rotate(45)"></rect><rect width="3" height="35" rx="1.5" transform="translate(38.521 47.879) rotate(135)"></rect></g><rect width="49" height="3" rx="1.5" transform="translate(1 23.5)"></rect></g></svg>
                </div>
                <div class = "popup_contents_top_right">
                    ` + getLanguage('work_part_change_chapter_title_top') + `
                </div>
            </div>

            <div class = "edit_profile_picture_contents" style = "max-width: calc(500px - 40px);">
                <div class = "create_work_input" style = "margin-bottom: 20px;">
                    <div class = "create_work_input_top">
                        <div class = "create_work_input_top_title">
                            ` + getLanguage("upload_work_part_input_chapter_title") + `
                        </div>
                        <div class = "create_work_input_top_icon" style = "opacity: 0;");">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                        </div>
                    </div>
                    <input value = "` + info["chapterTitle"].replaceAll('"', '&quot;') + `" original_value = "` + info["chapterTitle"].replaceAll('"', '&quot;') + `" id = "change_chapter_title_input" type = "text" placeholder = "` + getLanguage("work_settings_please_enter") + `" onfocus = "create_work_input_focus(this);" onkeydown = "setTimeout(() => { checkChangeChapterTitleButton(); }, 1);">
                </div>
                <div class = "create_work_step2_bottom">
                    <div id = "change_chapter_title_button" onclick = "requestChangeChapterTitle(` + info["workNumber"] + `, ` + info["chapter"] + `);" class = "create_work_step2_bottom_button create_work_step2_bottom_button_disabled md-ripples">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>
                        ` + getLanguage("edit") + `
                    </div>
                </div>
            </div>

            <div style = "width: 500px;"></div>
        </div>
    `;

    return html;
}

function openChangeChapterTitle(workNumber, chapter, chapter_title) {
    let info = {
        'workNumber': workNumber,
        'chapter': chapter,
        'chapterTitle': chapter_title
    }
    openPopupContents('change_chapter_title', null, JSON.stringify(info));
}


function checkChangeChapterTitleButton() {
    let button = document.getElementById("change_chapter_title_button");
    let input = document.getElementById("change_chapter_title_input");
    
    if (input.value.trim() != "" && input.getAttribute("original_value") != input.value.trim()) {
        button.classList.remove("create_work_step2_bottom_button_disabled");
    } else {
        button.classList.add("create_work_step2_bottom_button_disabled");
    }
}




function requestChangeChapterTitle(workNumber, chapter) {
    let chapter_title = document.getElementById("change_chapter_title_input");
    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/php/work/change_chapter_title.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                
                actionMessage(getLanguage("work_part_change_chapter_title_message"));
                history.back();

                let contents = document.getElementById("contents_" + getCurrentMenuNumber());
                if (contents != null) {
                    let chapter_contents = contents.getElementsByClassName("workspace_work_part_list_chapter_contents")[0];
                    let chapter_el = chapter_contents.getElementsByClassName("workspace_work_part_list_chapter_contents_" + chapter)[0];
                    let text = chapter_el.getElementsByClassName("workspace_work_part_list_chapter_left_text")[0].getElementsByTagName("b")[0];
                    text.textContent = chapter_title.value.trim();
                    let upload = chapter_el.getElementsByClassName("workspace_work_contents_left_work_part_list_top_chapter_upload")[0];
                    upload.setAttribute("onclick", "openChangeChapterTitle(" + workNumber + ", " + chapter + ", '" + chapter_title.value.trim().replaceAll('"', '&quot;') + "');");
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("workNumber", workNumber);
    formData.append("chapter", chapter);
    formData.append("chapter_title", chapter_title.value.trim());

    xhr.send(formData);
}