

function getHtmlPopupContents_upload_work_part_video(data) {
    let html = '';
    
    html = `
        <div class = "popup_contents_top">
            <div class = "popup_contents_top_left md-ripples" onclick = "backPopupContents();" onmouseenter = "hoverInformation(this, getLanguage('popup_contents:back'));">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(-12.086 -0.24)"><rect width="3" height="35" rx="1.5" transform="translate(36.399 0.479) rotate(45)"></rect><rect width="3" height="35" rx="1.5" transform="translate(38.521 47.879) rotate(135)"></rect></g><rect width="49" height="3" rx="1.5" transform="translate(1 23.5)"></rect></g></svg>
            </div>
            <div class = "popup_contents_top_right">
                ` + getLanguage("popup_upload_work_part_video_title") + `
            </div>
        </div>
        <div class = "popup_contents_upload_work_part_video">
            <div class = "popup_contents_upload_work_part_video_icon">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5.016 18h13.969v2.016h-13.969v-2.016zM9 15.984v-6h-3.984l6.984-6.984 6.984 6.984h-3.984v6h-6z"></path></svg>
            </div>
            <div class = "popup_contents_upload_work_part_video_title">
                ` + getLanguage("popup_upload_work_part_video_title") + `
            </div>
            <div class = "popup_contents_upload_work_part_video_progress_percent">
                0%
            </div>
            <div class = "popup_contents_upload_work_part_video_wrap">
                <div class = "popup_contents_upload_work_part_video_description">
                    ` + getLanguage("popup_upload_work_part_video_description").replaceAll("{R:0}", "video/mp4, video/webm, video/x-ms-wmv, video/avi, video/x-matroska, .mov") + `
                </div>
                <div class = "popup_contents_upload_work_part_video_select_box md-ripples" popupwidth = "max-content" value = "episode" onclick = "selectList(this, getItemsUploadWorkPartCategory());">
                    <div class = "popup_contents_upload_work_part_video_select_box_title value_title">
                        ` + getLanguage("work_part_category:episode") + `
                    </div>
                    <div class = "popup_contents_upload_work_part_video_select_box_icon">
                        <!-- Generated by IcoMoon.io -->
                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M17.418 6.109c0.272-0.268 0.709-0.268 0.979 0s0.271 0.701 0 0.969l-7.908 7.83c-0.27 0.268-0.707 0.268-0.979 0l-7.908-7.83c-0.27-0.268-0.27-0.701 0-0.969s0.709-0.268 0.979 0l7.419 7.141 7.418-7.141z"></path></svg>
                    </div>
                </div>
            </div>
            <div class = "popup_contents_upload_work_part_video_line_wrap">
                <div class = "popup_contents_upload_work_part_video_line"></div>
            </div>
            <div class = "popup_contents_upload_work_part_video_button md-ripples" onclick = "popupContentsUploadWorkPartVideoButton(this);">
                <!-- Generated by IcoMoon.io -->
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3.984 6v9.984h16.031v-9.984h-16.031zM20.016 18h3.984v2.016h-24v-2.016h3.984q-0.797 0-1.383-0.609t-0.586-1.406v-9.984q0-0.797 0.586-1.406t1.383-0.609h16.031q0.797 0 1.383 0.609t0.586 1.406v9.984q0 0.797-0.586 1.406t-1.383 0.609z"></path></svg>
                ` + getLanguage("popup_upload_work_part_video_button") + `
                <input type = "file" onchange = "popupContentsUploadWorkPartVideo(` + data["number"] + `, ` + data["chapter"] + `, event.target);" id = "change_profile_upload_input" accept = "video/mp4, video/webm, video/wmv, video/avi, video/mkv, video/mov" style = "display: none;">
            </div>
            <div class = "popup_contents_upload_work_part_video_bottom">
                ` + getLanguage("popup_upload_work_part_video_bottom") + `
            </div>
        </div>
        <div style = "width: 750px;"></div>
    `;

    return html;
}

function popupContentsUploadWorkPartVideoButton(el) {
    let input = el.getElementsByTagName("input")[0];
    input.click();
}

var popupContentsWorkPartVideoChunkUploadInfo = null;
function popupContentsUploadWorkPartVideo(workNumber, chapter, target) {
    popupContentsWorkPartVideoChunkUploadInfo = new Array();

    let upload = document.getElementsByClassName("popup_contents_upload_work_part_video")[0];
    upload.classList.add("popup_contents_upload_work_part_video_loading");

    let wrap = document.getElementsByClassName("popup_contents_upload_work_part_video_wrap")[0];
    let height = wrap.clientHeight;
    wrap.style.height = (height + "px");
    wrap.style.opacity = 1;
    wrap.style.transition = "all 0.2s";
    function callback() {
        wrap.style.height = "0px";
        wrap.style.opacity = 0;
        wrap.style.pointerEvents = "none";
    }
    window.requestAnimationFrame(callback);

    let progressPercent = document.getElementsByClassName("popup_contents_upload_work_part_video_progress_percent")[0];
    progressPercent.style.display = "block";
    height = progressPercent.clientHeight;
    progressPercent.style.height = "0px";
    progressPercent.style.opacity = 0;
    progressPercent.style.transition = "all 0.2s";
    function callback2() {
        progressPercent.style.height = (height + "px");
        progressPercent.style.opacity = 1;
    }
    window.requestAnimationFrame(callback2);

    let icon = document.getElementsByClassName("popup_contents_upload_work_part_video_icon")[0];
    icon.innerHTML = '<!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M10 2.5l6.5 6.5h-3.5v8h-6v-8h-3.5l6.5-6.5z"></path></svg>';
    let iconSvg = icon.getElementsByTagName("svg")[0];
    iconSvg.style.animation = "popupContentsUploadWorkPartVideoIconUploading 1.5s infinite";

    //

    let file = target.files[0];
    
    let ext = (file.name).split('.').pop().toLowerCase();
    let maxChunkSize = Number.parseInt((1000 * 1000 * 1000) * 2); //2GB
    let size = file.size;

    let start = 0;
    let end = maxChunkSize;
    let count = (size % maxChunkSize == 0) ? (size / maxChunkSize) : (Math.floor(size / maxChunkSize) + 1);
    
    for (let i = 0; i < count; i++) {
        let chunk = file.slice(start, end);
    
        popupContentsWorkPartVideoChunkUploadInfo[i] = {
            "progress": 0,
            "size": chunk.size,
            "xhr": null,
            "result": null
        }
        popupContentsUploadWorkPartVideoChunkUpload(i, chunk);

        start = end;
        end = (start + maxChunkSize);
    }

    let line = document.getElementsByClassName("popup_contents_upload_work_part_video_line")[0];
    function callback3() {
        let finalProgress = 0;
        let totalSize = 0;

        let length = popupContentsWorkPartVideoChunkUploadInfo.length;
        for (let i = 0; i < length; i++) {
            totalSize += popupContentsWorkPartVideoChunkUploadInfo[i]["size"];
        }
        for (let i = 0; i < length; i++) {
            let progress = popupContentsWorkPartVideoChunkUploadInfo[i]["progress"];
            let size = popupContentsWorkPartVideoChunkUploadInfo[i]["size"];
            let ratio = (size / totalSize);
            finalProgress += (progress * ratio);
        }

        line.style.width = (finalProgress * 100) + "%";
        if (finalProgress != 1) {
            let html = (finalProgress * 100).toFixed(1) + "%";
            if (progressPercent.innerHTML != html) {
                progressPercent.innerHTML = html;
            }
            window.requestAnimationFrame(callback3);
        } else {
            let html = getLanguage("popup_upload_work_part_video_status:waiting");
            if (progressPercent.innerHTML != html) {
                progressPercent.innerHTML = html;
            }
            line.style.animation = "imageFormatEditorPopupProcessingProgress 1s infinite";

            let isResult = true;
            let chunkList = new Array();
            for (let i = 0; i < length; i++) {
                if (popupContentsWorkPartVideoChunkUploadInfo[i]["result"] == null) {
                    isResult = false;
                    break;
                }
                chunkList[chunkList.length] = popupContentsWorkPartVideoChunkUploadInfo[i]["result"];
            }
            
            if (isResult == true) {
                //업로드 요청
                popupContentsUploadWorkPartVideoComplete(workNumber, chapter, chunkList, file.name, ext);
                //초기화
                initXhrPopupContentsUploadWorkPartVideoChunkUpload();
            } else {
                window.requestAnimationFrame(callback3);
            }
        }
    }
    window.requestAnimationFrame(callback3);
}
function popupContentsUploadWorkPartVideoChunkUpload(index, chunk) {
    let xhr = new XMLHttpRequest();
    popupContentsWorkPartVideoChunkUploadInfo[index]["xhr"] = xhr;

    const method = "POST";
    xhr.open(method, "https://video.louibooks.com/chunk/upload.php");
    xhr.withCredentials = true;

    xhr.onload = function() {
        let xhrHtml = xhr.responseText;
        let chunkFileName = xhrHtml;
        popupContentsWorkPartVideoChunkUploadInfo[index]["result"] = chunkFileName;
    };

    xhr.upload.addEventListener('progress', function (event) {
        let progress = event.loaded / event.total;
        popupContentsWorkPartVideoChunkUploadInfo[index]["progress"] = progress;
    });
    
    let formData = new FormData();
    formData.append("file", chunk);

    xhr.send(formData);
}
function initXhrPopupContentsUploadWorkPartVideoChunkUpload() {
    if (popupContentsWorkPartVideoChunkUploadInfo != null) {
        let length = popupContentsWorkPartVideoChunkUploadInfo.length;
        for (let i = 0; i < length; i++) {
            popupContentsWorkPartVideoChunkUploadInfo[i]["xhr"].abort();
        }
    }
    popupContentsWorkPartVideoChunkUploadInfo = null;
}
function popupContentsUploadWorkPartVideoComplete(workNumber, chapter, chunkList, fileName, ext) {
    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "https://video.louibooks.com/chunk/request.php");
    xhr.withCredentials = true;
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let json = JSON.parse(xhrHtml);

                actionMessage(getLanguage("popup_upload_work_part_video_message"));
                openUploadWorkPartVideoUploadStep(json);
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            popupContentsLoadingComplete();
        }
    });
    
    let formData = new FormData();
    formData.append("chunkList", JSON.stringify(chunkList));
    formData.append("fileName", fileName);
    formData.append("ext", ext);
    formData.append("workNumber", workNumber);
    if (chapter != null) {
        formData.append("chapter", chapter);
    } else {
        formData.append("chapterTitle", getLanguage("new_chapter"));
    }
    let category = document.getElementsByClassName("popup_contents_upload_work_part_video_select_box")[0].getAttribute("value");
    formData.append("category", category);
    formData.append("type", "video");

    xhr.send(formData);
}

var checkWorkPartVideoUploadStep = null;
function openUploadWorkPartVideoUploadStep(info) {
    let popupContents = document.getElementsByClassName("popup_contents")[0];
    let html = getHtmlUploadWorkPartVideoUploadStep(info);
    setHtmlPopupContents(html);

    //1초마다 체크
    checkWorkPartVideoUploadStep = setInterval(() => {
        const xhr = new XMLHttpRequest();
        const method = "POST";
        
        xhr.open(method, "/php/work/video/feedback.php");
        
        xhr.addEventListener('readystatechange', function (event) {
            const { target } = event;
            if (target.readyState === XMLHttpRequest.DONE) {
                const { status } = target;
                if (status === 0 || (status >= 200 && status < 400)) {
                    let xhrHtml = xhr.responseText;

                    if (xhrHtml.trim() != "") {
                        let json = JSON.parse(xhrHtml);

                        //
                        let thumbnail = document.getElementsByClassName("popup_contents_upload_work_part_video_upload_step_right_box_thumbnail")[0].getElementsByTagName("img")[0];
                        thumbnail.src = json["thumbnailImage"];
                        let title = document.getElementsByClassName("popup_contents_upload_work_part_video_upload_step_right_box_item_value")[2];
                        title.innerHTML = json["title"];

                        let data = json["data"]["codecs"];
                        if (data == null || data.length == 0) {
                            return;
                        } else {
                            data = data[0];
                        }
                        let right_box_items = document.getElementsByClassName("popup_contents_upload_work_part_video_upload_step_right_box_item_items")[0];
                        let right_box_item = document.getElementsByClassName("popup_contents_upload_work_part_video_upload_step_right_box_item_item");
                        let right_box_value = document.getElementsByClassName("popup_contents_upload_work_part_video_upload_step_right_box_item_value");

                        if (right_box_items.getAttribute("resolutions") == "false") {
                            let resolutions = data["resolutions"];
                            if (resolutions != null) {
                                for (let i = 0; i < resolutions.length; i++) {

                                    let newEl = document.createElement("div");
                                    newEl.classList.add("popup_contents_upload_work_part_video_upload_step_right_box_item_item");
                                    newEl.setAttribute("resolution", resolutions[i]["resolution"]);
                                    newEl.innerHTML = `
                                        <!-- Generated by IcoMoon.io -->
                                        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6 5h12c0.276 0 0.525 0.111 0.707 0.293s0.293 0.431 0.293 0.707v12c0 0.276-0.111 0.525-0.293 0.707s-0.431 0.293-0.707 0.293h-12c-0.276 0-0.525-0.111-0.707-0.293s-0.293-0.431-0.293-0.707v-12c0-0.276 0.111-0.525 0.293-0.707s0.431-0.293 0.707-0.293zM9 8c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1zM10 10h4v4h-4zM1 15h2v3c0 0.828 0.337 1.58 0.879 2.121s1.293 0.879 2.121 0.879h2v2c0 0.552 0.448 1 1 1s1-0.448 1-1v-2h4v2c0 0.552 0.448 1 1 1s1-0.448 1-1v-2h2c0.828 0 1.58-0.337 2.121-0.879s0.879-1.293 0.879-2.121v-3h2c0.552 0 1-0.448 1-1s-0.448-1-1-1h-2v-3h2c0.552 0 1-0.448 1-1s-0.448-1-1-1h-2v-2c0-0.828-0.337-1.58-0.879-2.121s-1.293-0.879-2.121-0.879h-2v-2c0-0.552-0.448-1-1-1s-1 0.448-1 1v2h-4v-2c0-0.552-0.448-1-1-1s-1 0.448-1 1v2h-2c-0.828 0-1.58 0.337-2.121 0.879s-0.879 1.293-0.879 2.121v2h-2c-0.552 0-1 0.448-1 1s0.448 1 1 1h2v3h-2c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path></svg>
                                        ` + (resolutions[i]["resolution"] + "p") + `
                                    `;
                                    right_box_items.appendChild(newEl);
    
                                }
                                right_box_items.setAttribute("resolutions", "true");
                                right_box_item[0].classList.remove("popup_contents_upload_work_part_video_upload_step_right_box_item_loading");
                                right_box_item[0].classList.add("popup_contents_upload_work_part_video_upload_step_right_box_item_complete");
                                right_box_item[1].classList.add("popup_contents_upload_work_part_video_upload_step_right_box_item_loading"); 
    
                                //
                                let progress = 0;
                                if (resolutions[0]["progress"] != null) {
                                    progress = resolutions[0]["progress"];
                                }
                                right_box_value[1].innerHTML = getLanguage("popup_upload_work_part_video_step_right_item_status:1").replaceAll("{R:0}", (resolutions[0]["resolution"] + "p")) + " (" + progress + "%)";
    
                                //시청 가능
                                let newEl = document.createElement("div");
                                newEl.classList.add("popup_contents_upload_work_part_video_upload_step_right_box_item_item");
                                newEl.innerHTML = `
                                    <!-- Generated by IcoMoon.io -->
                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19.293 5.293l-10.293 10.293-4.293-4.293c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l5 5c0.391 0.391 1.024 0.391 1.414 0l11-11c0.391-0.391 0.391-1.024 0-1.414s-1.024-0.391-1.414 0z"></path></svg>
                                    ` + getLanguage("popup_upload_work_part_video_step_right_item_status:complete") + `
                                `;
                                right_box_items.appendChild(newEl);
                            }
                        } else {
                            let resolutions = data["resolutions"];
                            for (let i = 0; i < resolutions.length; i++) {
                                let resolution = resolutions[i];

                                for (let j = 0; j < right_box_item.length; j++) {
                                    if (right_box_item[j].getAttribute("resolution") == resolution["resolution"]) {
                                        if (resolution["status"] == 1) {
                                            let progress = 0;
                                            if (resolutions[i]["progress"] != null) {
                                                progress = resolutions[i]["progress"];
                                            }

                                            right_box_item[j].classList.add("popup_contents_upload_work_part_video_upload_step_right_box_item_loading");
                                            //
                                            right_box_value[1].innerHTML = getLanguage("popup_upload_work_part_video_step_right_item_status:1").replaceAll("{R:0}", (resolutions[i]["resolution"] + "p")) + " (" + progress + "%)";
                                        } else if (resolution["status"] == 0) {
                                            right_box_item[j].classList.remove("popup_contents_upload_work_part_video_upload_step_right_box_item_loading");
                                            right_box_item[j].classList.add("popup_contents_upload_work_part_video_upload_step_right_box_item_complete");
                                        }
                                    }
                                }

                            }

                            //시청 가능 여부
                            if (data["status"] == 0) {
                                right_box_item[right_box_item.length - 1].classList.add("popup_contents_upload_work_part_video_upload_step_right_box_item_complete");
                                //
                                right_box_value[1].innerHTML = getLanguage("popup_upload_work_part_video_step_right_item_status:2");
                            }
                        }
                    } else {
                        clearInterval(checkWorkPartVideoUploadStep);
                    }
                } else {
                    if (status == 504) {
                        //시간 초과
                        serverResponseErrorMessage(0);
                    } else {
                        //오류 발생
                        serverResponseErrorMessage(1);
                    }
                    clearInterval(checkWorkPartVideoUploadStep);
                }
            }
        });

        var formData = new FormData();
        formData.append("partNumber", info["number"]);
        //변경 사항
        let partThumbnail = popupContents.getElementsByClassName("workspace_work_cover")[0];
        let selected = popupContents.getElementsByClassName("workspace_work_cover_selected")[0].getElementsByTagName("img")[0];
        if (selected.getAttribute("src") != "" && partThumbnail.getAttribute("value") == 1) {
            formData.append("thumbnailImage", selected.getAttribute("src"));
        }
        let partTitle = document.getElementById("popup_contents_video_upload_part_title");
        if (partTitle.value.trim() != "") {
            formData.append("title", partTitle.value.trim());
        }
        let chapterTitle = document.getElementById("popup_contents_video_upload_chapter_title");
        if (chapterTitle != null && chapterTitle.value.trim() != "") {
            formData.append("chapter", Number.parseInt(chapterTitle.getAttribute("chapter")));
            formData.append("chapterTitle", chapterTitle.value.trim());
        }

        xhr.send(formData);
    }, 1000);
}

function getHtmlUploadWorkPartVideoUploadStep(info) {
    let html = '';

    let chapterTitle = "";
    if (info["chapter_title"] != null) {
        chapterTitle = `
            <div style = "margin-top: 20px; display: block;">
                <div class = "create_work_input">
                    <div class = "create_work_input_top">
                        <div class = "create_work_input_top_title">
                            ` + getLanguage("upload_work_part_input_chapter_title") + `
                        </div>
                        <div class = "create_work_input_top_icon" style = "opacity: 0;" );"">
                            <!-- Generated by IcoMoon.io -->
                            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                        </div>
                    </div>
                    <input id = "popup_contents_video_upload_chapter_title" chapter = "` + info["chapter"] + `" value = "` + info["chapter_title"] + `" type = "text" placeholder = "` + getLanguage("work_settings_please_enter") + `" onfocus = "create_work_input_focus(this);" >
                </div>
            </div>
        `;
    }

    html = `
        <div class = "popup_contents_top">
            <div class = "popup_contents_top_left md-ripples" onclick = "backPopupContents();" onmouseenter = "hoverInformation(this, getLanguage('popup_contents:back'));">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(-12.086 -0.24)"><rect width="3" height="35" rx="1.5" transform="translate(36.399 0.479) rotate(45)"></rect><rect width="3" height="35" rx="1.5" transform="translate(38.521 47.879) rotate(135)"></rect></g><rect width="49" height="3" rx="1.5" transform="translate(1 23.5)"></rect></g></svg>
            </div>
            <div class = "popup_contents_top_right">
                ` + getLanguage("popup_upload_work_part_video_step_title") + `
            </div>
        </div>
        <div class = "popup_contents_upload_work_part_video_upload_step">
            <div class = "popup_contents_upload_work_part_video_upload_step_wrap">
                <div class = "popup_contents_upload_work_part_video_upload_step_left">
                    <div class = "popup_contents_upload_work_part_video_upload_step_left_title">
                        ` + getLanguage("sidebar_workspace_part_details") + `
                    </div>

                    ` + chapterTitle + `

                    <div style = "margin-top: 20px; display: block;">
                        <div class = "create_work_input">
                            <div class = "create_work_input_top">
                                <div class = "create_work_input_top_title">
                                    ` + getLanguage("upload_work_part_input_title") + `
                                </div>
                                <div class = "create_work_input_top_icon" style = "opacity: 0;" );">
                                    <!-- Generated by IcoMoon.io -->
                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                                </div>
                            </div>
                            <input id = "popup_contents_video_upload_part_title" value = "` + info["title"] + `" type = "text" placeholder = "` + getLanguage("work_settings_please_enter") + `" onfocus = "create_work_input_focus(this);" >
                        </div>
                    </div>

                    <div style = "margin-top: 20px; display: block;">
                        <div class = "create_work_step2_option_title">
                            ` + getLanguage("workspace_details_title:part_thumbnail") + `
                        </div>
                        <div style = "margin-top: 20px;" class = "workspace_work_cover" type = "` + info["type"] + `" value = "0">
                            <div class = "workspace_work_cover_selected img_wrap">
                                <img src = "" onload = "imageLoad(event);" alt = "">
                            </div>
                            <div class = "workspace_work_cover_add md-ripples" onclick = "workspacePartLocalizationThumbnailUploadButton(this);">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M16.88 9.1c1.795 0.419 3.111 2.006 3.111 3.9 0 2.206-1.786 3.995-3.991 4h-11c-0.001 0-0.003 0-0.005 0-2.761 0-5-2.239-5-5 0-2.409 1.704-4.421 3.973-4.894l0.032-0.006v-0.1c0-0.001 0-0.002 0-0.004 0-1.657 1.343-3 3-3 0.56 0 1.085 0.154 1.534 0.421l-0.014-0.008c0.899-0.889 2.136-1.438 3.5-1.438 2.75 0 4.98 2.23 4.98 4.98 0 0.017-0 0.033-0 0.050l0-0.003c0 0.38-0.040 0.74-0.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z"></path></svg>
                                <div class = "workspace_work_cover_add_title">
                                    ` + getLanguage("workspace_details_part_thumbnail_add:title") + `
                                </div>
                                <div class = "workspace_work_cover_add_description">
                                    ` + getLanguage("workspace_details_part_thumbnail_add:description") + `
                                </div>
                                <input type = "file" onchange = "requestWorkspacePartLocalizationThumbnailUpload(this.files[0]);" accept = "image/png, image/jpeg, image/webp, image/gif" style = "display: none;">
                            </div>
                            <div class = "workspace_work_cover_delete md-ripples" onclick = "workspacePartLocalizationThumbnailDeleteButton(this);">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM12 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM16 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>
                                <div class = "workspace_work_cover_add_title">
                                    ` + getLanguage("workspace_details_part_thumbnail_delete:title") + `
                                </div>
                                <div class = "workspace_work_cover_add_description">
                                    ` + getLanguage("workspace_details_part_thumbnail_delete:description") + `
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class = "popup_contents_upload_work_part_video_upload_step_line"></div>
                <div class = "popup_contents_upload_work_part_video_upload_step_right">
                    <div class = "popup_contents_upload_work_part_video_upload_step_right_box">
                        <div class = "popup_contents_upload_work_part_video_upload_step_right_box_thumbnail img_wrap">
                            <img src = "` + info["thumbnail_image"] + `" onload = "imageLoad(event);" alt = "">
                        </div>
                        <div class = "popup_contents_upload_work_part_video_upload_step_right_box_items">
                            <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item">
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_title">
                                    ` + getLanguage("popup_upload_work_part_video_step_right_item_title:0") + `
                                </div>
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_value">
                                    ` + info["file_name"] + `
                                </div>
                            </div>
                            <div class = "popup_contents_upload_work_part_video_upload_step_right_box_line"></div>
                            <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item">
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_title">
                                    ` + getLanguage("popup_upload_work_part_video_step_right_item_title:1") + `
                                </div>
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_value">
                                    ` + getLanguage("popup_upload_work_part_video_step_right_item_status:0") + `
                                </div>
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_items" resolutions = "false">
                                    <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_item popup_contents_upload_work_part_video_upload_step_right_box_item_loading">
                                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>
                                        ` + getLanguage("popup_upload_work_part_video_step_right_item_status:ready") + `
                                    </div>
                                </div>
                            </div>
                            <div class = "popup_contents_upload_work_part_video_upload_step_right_box_line"></div>
                            <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item">
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_title">
                                    ` + getLanguage("popup_upload_work_part_video_step_right_item_title:2") + `
                                </div>
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_value">
                                    ` + info["title"] + `
                                </div>
                            </div>
                            <div class = "popup_contents_upload_work_part_video_upload_step_right_box_line"></div>
                            <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item">
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_title">
                                    ` + getLanguage("popup_upload_work_part_video_step_right_item_title:3") + `
                                </div>
                                <div class = "popup_contents_upload_work_part_video_upload_step_right_box_item_value" style = "width: calc(100% + 20px); margin-left: -10px;">
                                    ` + textToURL("https://louibooks.com/video/" + info["number"]) + `
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div style = "width: 900px;"></div>
    `;

    return html;
}