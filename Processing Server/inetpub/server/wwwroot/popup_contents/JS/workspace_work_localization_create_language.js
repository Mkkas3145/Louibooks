
function getHtmlPopupContents_workspace_work_localization_create_language(data) {
    let popup_contents_box = document.getElementsByClassName("popup_contents_box")[0];
    let html = '';

    if (data["edit"] != null && data["edit"] == true) {
        let cover_image_src = "";
        let cover_image_value = 0;
        if (data["coverImage"] != null) {
            cover_image_src = data["coverImage"];
            cover_image_value = 1;
        }

        let chapterTitle = data["chapterTitle"];
        (chapterTitle == null) ? chapterTitle = new Array() : null;
        let chapterTitleHtml = "";
        if (data["chapter"] > 0) {
            chapterTitleHtml = `
                <div style = "margin: 40px 0px; width: 100%; height: 1px; background-color: var(--border-color);"></div>
                <div style = "margin-top: 20px;">
                    <div class = "create_work_step2_option_title" style = "text-a">
                        ` + getLanguage("popup_workspace_localization_chapter_items_title") + `
                    </div>
            `;
            for (let i = 0; i < data["chapter"]; i++) {
                let title = "";
                for (let j = 0; j < chapterTitle.length; j++) {
                    if (chapterTitle[j]["chapter"] == (i + 1)) {
                        title = chapterTitle[j]["title"];
                        break;
                    }
                }
                chapterTitleHtml += `
                    <div class = "localization_chapter_title create_work_input" chapter = "` + (i + 1) + `" style = "margin-top: 20px;">
                        <div class = "create_work_input_top">
                            <div class = "create_work_input_top_title">
                                ` + getLanguage("popup_workspace_localization_chapter_title").replaceAll("{R:0}", i + 1) + `
                            </div>
                        </div>
                        <input type = "text" value = "` + title + `" placeholder = "` + getLanguage("work_settings_please_enter") + `" onkeydown = "checkEditButtonWorkspaceWorkLocalization();" onfocus = "create_work_input_focus(this);" >
                    </div>
                `;
            }
            chapterTitleHtml += `</div>`;
        }

        html = `
            <div class = "edit_profile_picture">
                <div class = "popup_contents_top">
                    <div class = "popup_contents_top_left md-ripples" onclick = "backPopupContents();" onmouseenter = "hoverInformation(this, getLanguage('popup_contents:back'));">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(-12.086 -0.24)"><rect width="3" height="35" rx="1.5" transform="translate(36.399 0.479) rotate(45)"></rect><rect width="3" height="35" rx="1.5" transform="translate(38.521 47.879) rotate(135)"></rect></g><rect width="49" height="3" rx="1.5" transform="translate(1 23.5)"></rect></g></svg>
                    </div>
                    <div class = "popup_contents_top_right">
                        ` + getLanguage("menu_workspace_localization_item_button:edit") + `
                    </div>
                </div>
                
                <div style = "width: 100%; padding: 20px; box-sizing: border-box; max-width: 550px;">
                    <div id = "workspace_work_localization_edit_chapter" style = "display: none;">` + data["chapter"] + `</div>
                    <div id = "workspace_work_localization_edit_language" style = "display: none;">` + data["language"] + `</div>
                    <div>
                        <div class = "create_work_step2_option_title">
                            ` + getLanguage("work_settings_cover") + `
                            <div class = "create_work_input_top_icon" onmouseenter = "hoverHelp(this, '` + getLanguage("popup_workspace_localization_cover_upload_hover_help") + `');">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                            </div>
                        </div>
                        <div class = "workspace_work_cover" value = "` + cover_image_value + `">
                            <div class = "workspace_work_cover_selected img_wrap">
                                <img src = "` + cover_image_src + `" onload = "imageLoad(event);" alt = "">
                            </div>
                            <div class = "workspace_work_cover_add md-ripples" onclick = "workspaceWorkLocalizationCoverUploadButton(this);">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M16.88 9.1c1.795 0.419 3.111 2.006 3.111 3.9 0 2.206-1.786 3.995-3.991 4h-11c-0.001 0-0.003 0-0.005 0-2.761 0-5-2.239-5-5 0-2.409 1.704-4.421 3.973-4.894l0.032-0.006v-0.1c0-0.001 0-0.002 0-0.004 0-1.657 1.343-3 3-3 0.56 0 1.085 0.154 1.534 0.421l-0.014-0.008c0.899-0.889 2.136-1.438 3.5-1.438 2.75 0 4.98 2.23 4.98 4.98 0 0.017-0 0.033-0 0.050l0-0.003c0 0.38-0.040 0.74-0.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z"></path></svg>
                                <div class = "workspace_work_cover_add_title">
                                    ` + getLanguage("workspace_work_upload_cover_title") + `
                                </div>
                                <div class = "workspace_work_cover_add_description">
                                    ` + getLanguage("workspace_work_upload_cover_description:localization") + `
                                </div>
                                <input type = "file" onchange = "requestWorkspaceWorkLocalizationCoverUpload(this.files[0]);" accept = "image/png, image/jpeg, image/webp, image/gif" style = "display: none;">
                            </div>
                            <div class = "workspace_work_cover_delete md-ripples" onclick = "workspaceWorkLocalizationCoverDeleteButton(this); checkEditButtonWorkspaceWorkLocalization();">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM12 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM16 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>
                                <div class = "workspace_work_cover_add_title">
                                    ` + getLanguage("workspace_work_delete_cover_title") + `
                                </div>
                                <div class = "workspace_work_cover_add_description">
                                    ` + getLanguage("workspace_work_delete_cover_description") + `
                                </div>
                            </div>
                        </div>
                    </div>

                    <div style = "margin-top: 20px;">
                        <div class = "create_work_input">
                            <div class = "create_work_input_top">
                                <div class = "create_work_input_top_title">
                                    ` + getLanguage("work_settings_title") + `
                                </div>
                                <div class = "create_work_input_top_icon" onmouseenter = "hoverHelp(this, getLanguage('work_settings_detailed_description_title'));">
                                    <!-- Generated by IcoMoon.io -->
                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                                </div>
                            </div>
                            <input type = "text" value = "` + data["title"] + `" placeholder = "` + getLanguage("work_settings_please_enter") + `" onkeydown = "checkEditButtonWorkspaceWorkLocalization();" onfocus = "create_work_input_focus(this);" >
                        </div>
                    </div>
                    <div style = "margin-top: 20px;">
                        <div class = "create_work_input">
                            <div class = "create_work_input_top">
                                <div class = "create_work_input_top_title">
                                    ` + getLanguage("work_settings_description") + `
                                </div>
                                <div class = "create_work_input_top_icon" onmouseenter = "hoverHelp(this, getLanguage('work_settings_detailed_description_description'));">
                                    <!-- Generated by IcoMoon.io -->
                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                                </div>
                            </div>
                            <div class = "create_work_input_textbox" contenteditable = "true" placeholder = "` + getLanguage("work_settings_please_enter") + `" onfocus = "create_work_input_focus(this);" onkeydown = "textbox_remove_spaces(this); checkEditButtonWorkspaceWorkLocalization();" onpaste = "contenteditable_paste(event);">` + data["description"] + `</div>
                        </div>
                    </div>

                    <div class = "create_work_step2_option" style = "margin-top: 20px;">
                        <div class = "create_work_step2_option_title">
                            ` + getLanguage("work_settings_tag") + `
                            <div class="create_work_input_top_icon" onmouseenter="hoverHelp(this, getLanguage('work_settings_detailed_description_tag'));">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                            </div>
                        </div>
                        <div class = "create_work_step2_tag_box" onclick = "setTimeout(() => { checkEditButtonWorkspaceWorkLocalization(); }, 200);">
                            <div class = "create_work_step2_tag_box_valuebox_wrap"></div>
                            <input type = "text" placeholder = "` + getLanguage("work_settings_please_enter_tag") + `" onfocus = "create_work_input_focus(this);" onkeydown = "if (window.event.keyCode == 13) { createWorkAddTag(this); checkEditButtonWorkspaceWorkLocalization(); }" >
                        </div>
                    </div>

                    ` + chapterTitleHtml + `

                    <div class="create_work_step2_bottom">
                        <div type = "edit" class = "create_work_step2_bottom_button create_work_step2_bottom_button_disabled md-ripples" onclick = "editWorkspaceWorkLocalizationButton(` + data["workNumber"] + `);">
                            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><path d="M-4.438,42.27v0L.4,28.587,21.847,7.145a2.12,2.12,0,0,1,1.506-.632,1.945,1.945,0,0,1,1.387.567l7.071,7.071a1.944,1.944,0,0,1,.567,1.433,2.125,2.125,0,0,1-.632,1.459L10.3,38.487-4.436,42.27ZM23.387,9.839h0L3.162,30.064-.327,38.621l9.154-2.892L29.052,15.5,23.387,9.839Z" transform="translate(5.102 6.536)"></path><path d="M28.7,19.1a1.987,1.987,0,0,1-1.414-.586l-7.071-7.071a2,2,0,0,1,0-2.828l6.368-6.368a2,2,0,0,1,2.829,0l7.071,7.071a2,2,0,0,1,0,2.828L30.116,18.51A1.987,1.987,0,0,1,28.7,19.1ZM27.995,5.067h0l-4.95,4.95,5.666,5.665,4.95-4.949L27.995,5.067Z" transform="translate(12.102 -0.464)"></path></g></svg>
                            ` + getLanguage("menu_workspace_localization_item_button:edit") + `
                        </div>
                    </div>
                </div>

                <div style = "width: 550px;"></div>
            </div>
        `;

        function callback() {
            //태그
            if (data["tag"] != "null") {
                let tag_box = popup_contents_box.getElementsByClassName("create_work_step2_tag_box")[0];
                let tag_item = data["tag"].split(",");
                for (let i = 0; i < tag_item.length; i++) {
                    if (tag_item[i].trim() != "") {
                        createWorkAddTagValue(tag_box, tag_item[i]);
                    }
                }
            }
            let button = popup_contents_box.getElementsByClassName("create_work_step2_bottom_button")[0];
            button.setAttribute("original_data", JSON.stringify(getInfoWorkspaceWorkLocalizationEdit()));
        }
        window.requestAnimationFrame(callback);
    } else {
        let selectLanguage = getWorkspaceWorkLocalizationCreateLanguageSelectList(data["alreadyCreatedLanguage"].join(","))[0]["value"];

        let chapterTitleHtml = "";
        if (data["chapter"] > 0) {
            chapterTitleHtml = `
                <div style = "margin: 40px 0px; width: 100%; height: 1px; background-color: var(--border-color);"></div>
                <div style = "margin-top: 20px;">
                    <div class = "create_work_step2_option_title" style = "text-a">
                        ` + getLanguage("popup_workspace_localization_chapter_items_title") + `
                    </div>
            `;
            for (let i = 0; i < data["chapter"]; i++) {
                chapterTitleHtml += `
                    <div class = "localization_chapter_title create_work_input" chapter = "` + (i + 1) + `" style = "margin-top: 20px;">
                        <div class = "create_work_input_top">
                            <div class = "create_work_input_top_title">
                                ` + getLanguage("popup_workspace_localization_chapter_title").replaceAll("{R:0}", i + 1) + `
                            </div>
                        </div>
                        <input type = "text" value = "" placeholder = "` + getLanguage("work_settings_please_enter") + `" onkeydown = "checkEditButtonWorkspaceWorkLocalization();" onfocus = "create_work_input_focus(this);" >
                    </div>
                `;
            }
            chapterTitleHtml += `</div>`;
        }

        html = `
            <div class = "edit_profile_picture">
                <div class = "popup_contents_top">
                    <div class = "popup_contents_top_left md-ripples" onclick = "backPopupContents();" onmouseenter = "hoverInformation(this, getLanguage('popup_contents:back'));">
                        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="50" height="50" viewBox="0 0 50 50"><defs><clipPath id="b"><rect width="50" height="50"></rect></clipPath></defs><g id="a" clip-path="url(#b)"><g transform="translate(-12.086 -0.24)"><rect width="3" height="35" rx="1.5" transform="translate(36.399 0.479) rotate(45)"></rect><rect width="3" height="35" rx="1.5" transform="translate(38.521 47.879) rotate(135)"></rect></g><rect width="49" height="3" rx="1.5" transform="translate(1 23.5)"></rect></g></svg>
                    </div>
                    <div class = "popup_contents_top_right">
                        ` + getLanguage("menu_workspace_localization_create_language") + `
                    </div>
                </div>
                
                <div style = "width: 100%; padding: 20px; box-sizing: border-box; max-width: 550px;">
                    <div class = "create_work_step2_option">
                        <div class = "create_work_step2_option_title">
                            ` + getLanguage("popup_workspace_localization_create_language_select_title") + `
                        </div>
                        <div class = "create_work_step2_option_box md-ripples" id = "popup_workspace_localization_create_language" value = "` + selectLanguage + `" onclick = "selectList(this, getWorkspaceWorkLocalizationCreateLanguageSelectList('` + data["alreadyCreatedLanguage"].join(",") + `'));">
                            <div class = "create_work_step2_option_box_title value_title">
                                ` + getLanguage('language:' + selectLanguage) + `
                            </div>
                            <div class = "create_work_step2_option_box_icon">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.984 9.984h10.031l-5.016 5.016z"></path></svg>
                            </div>
                        </div>
                    </div>

                    <div style = "margin-top: 20px;">
                        <div class = "create_work_step2_option_title">
                            ` + getLanguage("work_settings_cover") + `
                            <div class = "create_work_input_top_icon" onmouseenter = "hoverHelp(this, getLanguage('popup_workspace_localization_cover_upload_hover_help'));">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                            </div>
                        </div>
                        <div class = "workspace_work_cover" value = "0">
                            <div class = "workspace_work_cover_selected img_wrap">
                                <img src = "" onload = "imageLoad(event);" alt = "">
                            </div>
                            <div class = "workspace_work_cover_add md-ripples" onclick = "workspaceWorkLocalizationCoverUploadButton(this);">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M16.88 9.1c1.795 0.419 3.111 2.006 3.111 3.9 0 2.206-1.786 3.995-3.991 4h-11c-0.001 0-0.003 0-0.005 0-2.761 0-5-2.239-5-5 0-2.409 1.704-4.421 3.973-4.894l0.032-0.006v-0.1c0-0.001 0-0.002 0-0.004 0-1.657 1.343-3 3-3 0.56 0 1.085 0.154 1.534 0.421l-0.014-0.008c0.899-0.889 2.136-1.438 3.5-1.438 2.75 0 4.98 2.23 4.98 4.98 0 0.017-0 0.033-0 0.050l0-0.003c0 0.38-0.040 0.74-0.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z"></path></svg>
                                <div class = "workspace_work_cover_add_title">
                                    ` + getLanguage("workspace_work_upload_cover_title") + `
                                </div>
                                <div class = "workspace_work_cover_add_description">
                                    ` + getLanguage("workspace_work_upload_cover_description:localization") + `
                                </div>
                                <input type = "file" onchange = "requestWorkspaceWorkLocalizationCoverUpload(this.files[0]);" accept = "image/png, image/jpeg, image/webp, image/gif" style = "display: none;">
                            </div>
                            <div class = "workspace_work_cover_delete md-ripples" onclick = "workspaceWorkLocalizationCoverDeleteButton(this);">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 28"><path d="M8 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM12 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM16 21.5v-11c0-0.281-0.219-0.5-0.5-0.5h-1c-0.281 0-0.5 0.219-0.5 0.5v11c0 0.281 0.219 0.5 0.5 0.5h1c0.281 0 0.5-0.219 0.5-0.5zM7.5 6h7l-0.75-1.828c-0.047-0.063-0.187-0.156-0.266-0.172h-4.953c-0.094 0.016-0.219 0.109-0.266 0.172zM22 6.5v1c0 0.281-0.219 0.5-0.5 0.5h-1.5v14.812c0 1.719-1.125 3.187-2.5 3.187h-13c-1.375 0-2.5-1.406-2.5-3.125v-14.875h-1.5c-0.281 0-0.5-0.219-0.5-0.5v-1c0-0.281 0.219-0.5 0.5-0.5h4.828l1.094-2.609c0.313-0.766 1.25-1.391 2.078-1.391h5c0.828 0 1.766 0.625 2.078 1.391l1.094 2.609h4.828c0.281 0 0.5 0.219 0.5 0.5z"></path></svg>
                                <div class = "workspace_work_cover_add_title">
                                    ` + getLanguage("workspace_work_delete_cover_title") + `
                                </div>
                                <div class = "workspace_work_cover_add_description">
                                    ` + getLanguage("workspace_work_delete_cover_description") + `
                                </div>
                            </div>
                        </div>
                    </div>

                    <div style = "margin-top: 20px;">
                        <div class = "create_work_input">
                            <div class = "create_work_input_top">
                                <div class = "create_work_input_top_title">
                                    ` + getLanguage("work_settings_title") + `
                                </div>
                                <div class = "create_work_input_top_icon" onmouseenter = "hoverHelp(this, getLanguage('work_settings_detailed_description_title'));">
                                    <!-- Generated by IcoMoon.io -->
                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                                </div>
                            </div>
                            <input type = "text" placeholder = "` + getLanguage("work_settings_please_enter") + `" onkeydown = "checkButtonWorkspaceWorkLocalization();" onfocus = "create_work_input_focus(this);" >
                        </div>
                    </div>
                    <div style = "margin-top: 20px;">
                        <div class = "create_work_input">
                            <div class = "create_work_input_top">
                                <div class = "create_work_input_top_title">
                                    ` + getLanguage("work_settings_description") + `
                                </div>
                                <div class = "create_work_input_top_icon" onmouseenter = "hoverHelp(this, getLanguage('work_settings_detailed_description_description'));">
                                    <!-- Generated by IcoMoon.io -->
                                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                                </div>
                            </div>
                            <div class = "create_work_input_textbox" contenteditable = "true" placeholder = "` + getLanguage("work_settings_please_enter") + `" onfocus = "create_work_input_focus(this);" onkeydown = "textbox_remove_spaces(this); checkButtonWorkspaceWorkLocalization();" onpaste = "contenteditable_paste(event);"></div>
                        </div>
                    </div>

                    <div class = "create_work_step2_option" style = "margin-top: 20px;">
                        <div class = "create_work_step2_option_title">
                            ` + getLanguage("work_settings_tag") + `
                            <div class="create_work_input_top_icon" onmouseenter="hoverHelp(this, getLanguage('work_settings_detailed_description_tag'));">
                                <!-- Generated by IcoMoon.io -->
                                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 6q1.641 0 2.813 1.172t1.172 2.813q0 1.266-1.5 2.602t-1.5 2.414h-1.969q0-1.078 0.469-1.852t1.031-1.125 1.031-0.867 0.469-1.172q0-0.797-0.609-1.383t-1.406-0.586-1.406 0.586-0.609 1.383h-1.969q0-1.641 1.172-2.813t2.813-1.172zM12 20.016q3.281 0 5.648-2.367t2.367-5.648-2.367-5.648-5.648-2.367-5.648 2.367-2.367 5.648 2.367 5.648 5.648 2.367zM12 2.016q4.125 0 7.055 2.93t2.93 7.055-2.93 7.055-7.055 2.93-7.055-2.93-2.93-7.055 2.93-7.055 7.055-2.93zM11.016 18v-2.016h1.969v2.016h-1.969z"></path></svg>
                            </div>
                        </div>
                        <div class = "create_work_step2_tag_box">
                            <div class = "create_work_step2_tag_box_valuebox_wrap"></div>
                            <input type = "text" placeholder = "` + getLanguage("work_settings_please_enter_tag") + `" onfocus = "create_work_input_focus(this);" onkeydown = "if (window.event.keyCode == 13) { createWorkAddTag(this); }" >
                        </div>
                    </div>

                    ` + chapterTitleHtml + `

                    <div class="create_work_step2_bottom">
                        <div class = "create_work_step2_bottom_button create_work_step2_bottom_button_disabled md-ripples" onclick = "createWorkspaceWorkLocalizationButton(` + data["workNumber"] + `);">
                            <!-- Generated by IcoMoon.io --><svg version="1.1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 13h6v6c0 0.552 0.448 1 1 1s1-0.448 1-1v-6h6c0.552 0 1-0.448 1-1s-0.448-1-1-1h-6v-6c0-0.552-0.448-1-1-1s-1 0.448-1 1v6h-6c-0.552 0-1 0.448-1 1s0.448 1 1 1z"></path></svg>
                            ` + getLanguage("menu_workspace_localization_create_language") + `
                        </div>
                    </div>
                </div>

                <div style = "width: 550px;"></div>
            </div>
        `;
    }

    return html;
}


















function workspaceWorkLocalizationCoverDeleteButton(el) {
    let parent = el.parentElement.parentElement;
    let work_cover = parent.getElementsByClassName("workspace_work_cover")[0];
    work_cover.setAttribute("value", "0");
}
function workspaceWorkLocalizationCoverUploadButton(el) {
    let parent = el.parentElement;
    let input = parent.getElementsByTagName("input")[0];

    input.value = "";
    input.click();
}
function requestWorkspaceWorkLocalizationCoverUpload(file) {
    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "https://img.louibooks.com/upload.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText;
                let json = JSON.parse(xhrHtml);

                let popup_contents_box = document.getElementsByClassName("popup_contents_box")[0];
                let work_cover = popup_contents_box.getElementsByClassName("workspace_work_cover")[0];
                work_cover.setAttribute("value", "1");
                work_cover.getElementsByTagName("img")[0].setAttribute("style", null);
                work_cover.getElementsByTagName("img")[0].src = json["url"];
                
                checkEditButtonWorkspaceWorkLocalization();
                actionMessage(getLanguage("upload_image"));
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("imgFile", file);
    formData.append("type", "work_cover");

    xhr.send(formData);
}











function checkButtonWorkspaceWorkLocalization() {
    function callback() {
        let popup_contents_box = document.getElementsByClassName("popup_contents_box")[0];

        //작품 제목
        let title = popup_contents_box.getElementsByClassName("create_work_input")[0];
        title = title.getElementsByTagName("input")[0].value.trim();
        //작품 설명
        let description = popup_contents_box.getElementsByClassName("create_work_input")[1];
        description = description.getElementsByClassName("create_work_input_textbox")[0].innerText.trim();
    
        let button = popup_contents_box.getElementsByClassName("create_work_step2_bottom_button")[0];
        if (title != "" && description != "") {
            button.classList.remove("create_work_step2_bottom_button_disabled");
        } else {
            button.classList.add("create_work_step2_bottom_button_disabled");
        }
    }
    window.requestAnimationFrame(callback);
}
function createWorkspaceWorkLocalizationButton(workNumber) {
    let popup_contents_box = document.getElementsByClassName("popup_contents_box")[0];

    //작품 표지
    let coverImage = popup_contents_box.getElementsByClassName("workspace_work_cover")[0];
    if (coverImage.getAttribute("value") == "1" || coverImage.getAttribute("value") == 1) {
        coverImage = coverImage.getElementsByTagName("img")[0].src;
    } else {
        coverImage = null;
    }
    //작품 제목
    let title = popup_contents_box.getElementsByClassName("create_work_input")[0];
    title = title.getElementsByTagName("input")[0].value.trim();
    //작품 설명
    let description = popup_contents_box.getElementsByClassName("create_work_input")[1];
    description = description.getElementsByClassName("create_work_input_textbox")[0].innerText.trim();
    //작품 태그
    let tag = popup_contents_box.getElementsByClassName("create_work_step2_tag_box")[0];
    tag = getValueCreateWorkTag(tag).join(",");
    if (tag.trim() == "") {
        tag = null;
    }
    let language = document.getElementById("popup_workspace_localization_create_language").getAttribute("value");

    //챕터 제목
    let localizationChapter = popup_contents_box.getElementsByClassName("localization_chapter_title");
    let chapterTitle = null;
    if (localizationChapter.length != 0) {
        chapterTitle = new Array();
        for (let i = 0; i < localizationChapter.length; i++) {
            let chapter = localizationChapter[i].getAttribute("chapter");
            let title = localizationChapter[i].getElementsByTagName("input")[0].value.trim();
            if (title != "") {
                chapterTitle[chapterTitle.length] = {
                    'chapter': chapter,
                    'title': localizationChapter[i].getElementsByTagName("input")[0].value.trim()
                }
            }
        }
    }

    let data = {
        'workNumber': workNumber,
        'language': language,
        'coverImage': coverImage,
        'title': title,
        'description': description,
        'tag': tag,
        'chapterTitle': chapterTitle
    }

    requestCreateWorkspaceWorkLocalization(data);
}
function requestCreateWorkspaceWorkLocalization(data) {
    let menuNumber = getCurrentMenuNumber();

    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/menu/workspace/php/work/localization/create.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText.trim();
                
                if (xhrHtml == "success") {
                    addItemWorkspaceWorkLocalization(menuNumber, data, true);
                    actionMessage(getLanguage("workspace_localization_create_language_message"));
                    history.back();
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("workNumber", data["workNumber"]);
    formData.append("language", data["language"]);
    if (data["coverImage"] != null) {
        formData.append("coverImage", data["coverImage"]);
    }
    formData.append("title", data["title"]);
    formData.append("description", data["description"]);
    if (data["tag"] != null) {
        formData.append("tag", data["tag"]);
    }
    if (data["chapterTitle"] != null) {
        formData.append("chapterTitle", JSON.stringify(data["chapterTitle"]));
    }

    xhr.send(formData);
}


















function getWorkspaceWorkLocalizationCreateLanguageSelectList(alreadyCreatedLanguage) {
    alreadyCreatedLanguage = alreadyCreatedLanguage.split(",");

    let items = getLanguageSelectItem();
    let newItems = new Array();
    for (let i = 0; i < items.length; i++) {
        if (alreadyCreatedLanguage.includes(items[i]["value"]) == false) {
            newItems[newItems.length] = items[i];
        }
    }
    return newItems;
}














































function getInfoWorkspaceWorkLocalizationEdit() {
    let popup_contents_box = document.getElementsByClassName("popup_contents_box")[0];

    //작품 표지
    let coverImage = popup_contents_box.getElementsByClassName("workspace_work_cover")[0];
    if (coverImage.getAttribute("value") == "1" || coverImage.getAttribute("value") == 1) {
        coverImage = coverImage.getElementsByTagName("img")[0].src;
    } else {
        coverImage = null;
    }
    //작품 제목
    let title = popup_contents_box.getElementsByClassName("create_work_input")[0];
    title = title.getElementsByTagName("input")[0].value.trim();
    //작품 설명
    let description = popup_contents_box.getElementsByClassName("create_work_input")[1];
    description = description.getElementsByClassName("create_work_input_textbox")[0].innerText.trim();
    //작품 태그
    let tag = popup_contents_box.getElementsByClassName("create_work_step2_tag_box")[0];
    tag = getValueCreateWorkTag(tag).join(",");
    if (tag.trim() == "") {
        tag = null;
    }

    //챕터 제목
    let localizationChapter = popup_contents_box.getElementsByClassName("localization_chapter_title");
    let chapterTitle = null;
    if (localizationChapter.length != 0) {
        chapterTitle = new Array();
        for (let i = 0; i < localizationChapter.length; i++) {
            let chapter = localizationChapter[i].getAttribute("chapter");
            let title = localizationChapter[i].getElementsByTagName("input")[0].value.trim();
            if (title != "") {
                chapterTitle[chapterTitle.length] = {
                    'chapter': chapter,
                    'title': localizationChapter[i].getElementsByTagName("input")[0].value.trim()
                }
            }
        }
    }

    //챕터 수
    let chapter = Number.parseInt(document.getElementById("workspace_work_localization_edit_chapter").innerHTML);

    let language = document.getElementById("workspace_work_localization_edit_language").innerHTML.trim();

    let data = {
        'language': language,
        'coverImage': coverImage,
        'title': title,
        'description': description,
        'tag': tag,
        'chapter': chapter,
        'chapterTitle': chapterTitle
    }

    return data;
}
function checkEditButtonWorkspaceWorkLocalization() {
    function callback() {
        let popup_contents_box = document.getElementsByClassName("popup_contents_box")[0];
        let button = popup_contents_box.getElementsByClassName("create_work_step2_bottom_button")[0];

        if (button.getAttribute("type") == "edit") {
            //작품 제목
            let title = popup_contents_box.getElementsByClassName("create_work_input")[0];
            title = title.getElementsByTagName("input")[0].value.trim();
            //작품 설명
            let description = popup_contents_box.getElementsByClassName("create_work_input")[1];
            description = description.getElementsByClassName("create_work_input_textbox")[0].innerText.trim();
        
            if (title != "" && description != "" && button.getAttribute("original_data") != JSON.stringify(getInfoWorkspaceWorkLocalizationEdit())) {
                button.classList.remove("create_work_step2_bottom_button_disabled");
            } else {
                button.classList.add("create_work_step2_bottom_button_disabled");
            }
        }
    }
    window.requestAnimationFrame(callback);
}

function editWorkspaceWorkLocalizationButton(workNumber) {
    let info = getInfoWorkspaceWorkLocalizationEdit();

    let data = {
        "workNumber": workNumber,
        "language": info["language"],
        "coverImage": info["coverImage"],
        "title": info["title"],
        "description": info["description"],
        "tag": info["tag"],
        "chapter": info["chapter"],
        "chapterTitle": info["chapterTitle"]
    }

    requestEditWorkspaceWorkLocalization(data);
}
function requestEditWorkspaceWorkLocalization(data) {
    let menuNumber = getCurrentMenuNumber();
    let contents = document.getElementById("contents_" + menuNumber);
    spinLoading();

    const xhr = new XMLHttpRequest();
    const method = "POST";
    
    xhr.open(method, "/menu/workspace/php/work/localization/edit.php");
    
    xhr.addEventListener('readystatechange', function (event) {
        const { target } = event;
        if (target.readyState === XMLHttpRequest.DONE) {
            const { status } = target;
            if (status === 0 || (status >= 200 && status < 400)) {
                let xhrHtml = xhr.responseText.trim();
                
                if (xhrHtml == "success") {
                    actionMessage(getLanguage("workspace_localization_edit_language_message"));
                    history.back();

                    //내용 변경
                    let item = null;
                    let items = contents.getElementsByClassName("workspace_work_contents_localization_item");
                    for (let i = 0; i < items.length; i++) {
                        if (items[i].getAttribute("language") == data["language"]) {
                            item = items[i];
                        }
                    }
                    item.getElementsByClassName("workspace_work_contents_localization_item_data")[0].innerHTML = JSON.stringify({
                        "edit": true,
                        "workNumber": data["workNumber"],
                        "language": data["language"],
                        "coverImage": data["coverImage"],
                        "title": data["title"],
                        "description": data["description"],
                        "tag": data["tag"],
                        "chapter": data["chapter"],
                        "chapterTitle": data["chapterTitle"]
                    });
                    
                    //제목
                    let itemTitle = item.getElementsByClassName("workspace_work_contents_localization_item_center_description")[0];
                    itemTitle.innerHTML = data["title"];
                }
            } else {
                if (status == 504) {
                    //시간 초과
                    serverResponseErrorMessage(0);
                } else {
                    //오류 발생
                    serverResponseErrorMessage(1);
                }
            }
            spinLoadingComplete();
        }
    });
    
    var formData = new FormData();
    formData.append("workNumber", data["workNumber"]);
    formData.append("language", data["language"]);
    if (data["coverImage"] != null) {
        formData.append("coverImage", data["coverImage"]);
    }
    formData.append("title", data["title"]);
    formData.append("description", data["description"]);
    if (data["tag"] != null) {
        formData.append("tag", data["tag"]);
    }
    if (data["chapterTitle"] != null) {
        formData.append("chapterTitle", JSON.stringify(data["chapterTitle"]));
    }

    xhr.send(formData);
}